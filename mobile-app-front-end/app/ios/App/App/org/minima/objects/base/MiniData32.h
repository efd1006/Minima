//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/base/MiniData32.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaObjectsBaseMiniData32")
#ifdef RESTRICT_OrgMinimaObjectsBaseMiniData32
#define INCLUDE_ALL_OrgMinimaObjectsBaseMiniData32 0
#else
#define INCLUDE_ALL_OrgMinimaObjectsBaseMiniData32 1
#endif
#undef RESTRICT_OrgMinimaObjectsBaseMiniData32

#if !defined (OrgMinimaObjectsBaseMiniData32_) && (INCLUDE_ALL_OrgMinimaObjectsBaseMiniData32 || defined(INCLUDE_OrgMinimaObjectsBaseMiniData32))
#define OrgMinimaObjectsBaseMiniData32_

#define RESTRICT_OrgMinimaObjectsBaseMiniData 1
#define INCLUDE_OrgMinimaObjectsBaseMiniData 1
#include "org/minima/objects/base/MiniData.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;

@interface OrgMinimaObjectsBaseMiniData32 : OrgMinimaObjectsBaseMiniData

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithByteArray:(IOSByteArray *)zData;

- (instancetype)initWithNSString:(NSString *)zHex;

+ (NSString *)ensureSizeWithNSString:(NSString *)zHEX;

+ (OrgMinimaObjectsBaseMiniData32 *)getRandomData;

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs;

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

+ (OrgMinimaObjectsBaseMiniData32 *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut;

@end

J2OBJC_STATIC_INIT(OrgMinimaObjectsBaseMiniData32)

inline OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsBaseMiniData32_get_ZERO32(void);
inline OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsBaseMiniData32_set_ZERO32(OrgMinimaObjectsBaseMiniData32 *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsBaseMiniData32_ZERO32;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaObjectsBaseMiniData32, ZERO32, OrgMinimaObjectsBaseMiniData32 *)

FOUNDATION_EXPORT void OrgMinimaObjectsBaseMiniData32_init(OrgMinimaObjectsBaseMiniData32 *self);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *new_OrgMinimaObjectsBaseMiniData32_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *create_OrgMinimaObjectsBaseMiniData32_init(void);

FOUNDATION_EXPORT void OrgMinimaObjectsBaseMiniData32_initWithByteArray_(OrgMinimaObjectsBaseMiniData32 *self, IOSByteArray *zData);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *new_OrgMinimaObjectsBaseMiniData32_initWithByteArray_(IOSByteArray *zData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *create_OrgMinimaObjectsBaseMiniData32_initWithByteArray_(IOSByteArray *zData);

FOUNDATION_EXPORT void OrgMinimaObjectsBaseMiniData32_initWithNSString_(OrgMinimaObjectsBaseMiniData32 *self, NSString *zHex);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *new_OrgMinimaObjectsBaseMiniData32_initWithNSString_(NSString *zHex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *create_OrgMinimaObjectsBaseMiniData32_initWithNSString_(NSString *zHex);

FOUNDATION_EXPORT NSString *OrgMinimaObjectsBaseMiniData32_ensureSizeWithNSString_(NSString *zHEX);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsBaseMiniData32_getRandomData(void);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsBaseMiniData32_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn);

FOUNDATION_EXPORT void OrgMinimaObjectsBaseMiniData32_mainWithNSStringArray_(IOSObjectArray *zArgs);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaObjectsBaseMiniData32)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaObjectsBaseMiniData32")
