//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/base/MiniString.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutputStream.h"
#include "java/io/IOException.h"
#include "java/nio/charset/Charset.h"
#include "org/minima/objects/base/MiniString.h"

@implementation OrgMinimaObjectsBaseMiniString

- (instancetype)initWithNSString:(NSString *)zString {
  OrgMinimaObjectsBaseMiniString_initWithNSString_(self, zString);
  return self;
}

- (instancetype)initWithOrgMinimaObjectsBaseMiniString:(OrgMinimaObjectsBaseMiniString *)zString {
  OrgMinimaObjectsBaseMiniString_initWithOrgMinimaObjectsBaseMiniString_(self, zString);
  return self;
}

- (NSString *)description {
  return mString_;
}

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut {
  [((JavaIoDataOutputStream *) nil_chk(zOut)) writeUTFWithNSString:mString_];
}

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  JreStrongAssign(&mString_, [((JavaIoDataInputStream *) nil_chk(zIn)) readUTF]);
}

+ (OrgMinimaObjectsBaseMiniString *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  return OrgMinimaObjectsBaseMiniString_ReadFromStreamWithJavaIoDataInputStream_(zIn);
}

- (void)dealloc {
  RELEASE_(mString_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 5, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniString;", 0x9, 8, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithOrgMinimaObjectsBaseMiniString:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(writeDataStreamWithJavaIoDataOutputStream:);
  methods[4].selector = @selector(readDataStreamWithJavaIoDataInputStream:);
  methods[5].selector = @selector(ReadFromStreamWithJavaIoDataInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mString_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LOrgMinimaObjectsBaseMiniString;", "toString", "writeDataStream", "LJavaIoDataOutputStream;", "LJavaIoIOException;", "readDataStream", "LJavaIoDataInputStream;", "ReadFromStream" };
  static const J2ObjcClassInfo _OrgMinimaObjectsBaseMiniString = { "MiniString", "org.minima.objects.base", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_OrgMinimaObjectsBaseMiniString;
}

@end

void OrgMinimaObjectsBaseMiniString_initWithNSString_(OrgMinimaObjectsBaseMiniString *self, NSString *zString) {
  NSObject_init(self);
  JreStrongAssign(&self->mString_, [NSString java_stringWithBytes:[((NSString *) nil_chk(zString)) java_getBytesWithCharset:JavaNioCharsetCharset_forNameWithNSString_(@"US-ASCII")]]);
}

OrgMinimaObjectsBaseMiniString *new_OrgMinimaObjectsBaseMiniString_initWithNSString_(NSString *zString) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMiniString, initWithNSString_, zString)
}

OrgMinimaObjectsBaseMiniString *create_OrgMinimaObjectsBaseMiniString_initWithNSString_(NSString *zString) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMiniString, initWithNSString_, zString)
}

void OrgMinimaObjectsBaseMiniString_initWithOrgMinimaObjectsBaseMiniString_(OrgMinimaObjectsBaseMiniString *self, OrgMinimaObjectsBaseMiniString *zString) {
  NSObject_init(self);
  JreStrongAssign(&self->mString_, [NSString java_stringWithBytes:[((NSString *) nil_chk([((OrgMinimaObjectsBaseMiniString *) nil_chk(zString)) description])) java_getBytesWithCharset:JavaNioCharsetCharset_forNameWithNSString_(@"US-ASCII")]]);
}

OrgMinimaObjectsBaseMiniString *new_OrgMinimaObjectsBaseMiniString_initWithOrgMinimaObjectsBaseMiniString_(OrgMinimaObjectsBaseMiniString *zString) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMiniString, initWithOrgMinimaObjectsBaseMiniString_, zString)
}

OrgMinimaObjectsBaseMiniString *create_OrgMinimaObjectsBaseMiniString_initWithOrgMinimaObjectsBaseMiniString_(OrgMinimaObjectsBaseMiniString *zString) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMiniString, initWithOrgMinimaObjectsBaseMiniString_, zString)
}

OrgMinimaObjectsBaseMiniString *OrgMinimaObjectsBaseMiniString_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn) {
  OrgMinimaObjectsBaseMiniString_initialize();
  OrgMinimaObjectsBaseMiniString *data = create_OrgMinimaObjectsBaseMiniString_initWithNSString_(@"");
  @try {
    [data readDataStreamWithJavaIoDataInputStream:zIn];
  }
  @catch (JavaIoIOException *e) {
    [e printStackTrace];
    return nil;
  }
  return data;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaObjectsBaseMiniString)
