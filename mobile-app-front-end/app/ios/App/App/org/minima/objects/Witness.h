//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/Witness.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaObjectsWitness")
#ifdef RESTRICT_OrgMinimaObjectsWitness
#define INCLUDE_ALL_OrgMinimaObjectsWitness 0
#else
#define INCLUDE_ALL_OrgMinimaObjectsWitness 1
#endif
#undef RESTRICT_OrgMinimaObjectsWitness

#if !defined (OrgMinimaObjectsWitness_) && (INCLUDE_ALL_OrgMinimaObjectsWitness || defined(INCLUDE_OrgMinimaObjectsWitness))
#define OrgMinimaObjectsWitness_

#define RESTRICT_OrgMinimaUtilsStreamable 1
#define INCLUDE_OrgMinimaUtilsStreamable 1
#include "org/minima/utils/Streamable.h"

@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;
@class JavaUtilArrayList;
@class OrgMinimaDatabaseMmrMMRProof;
@class OrgMinimaObjectsBaseMiniData;
@class OrgMinimaObjectsProofsScriptProof;
@class OrgMinimaObjectsProofsSignatureProof;
@class OrgMinimaObjectsProofsTokenProof;
@class OrgMinimaUtilsJsonJSONObject;

@interface OrgMinimaObjectsWitness : NSObject < OrgMinimaUtilsStreamable > {
 @public
  JavaUtilArrayList *mMMRProofs_;
  JavaUtilArrayList *mSignatureProofs_;
  JavaUtilArrayList *mTokenProofs_;
  JavaUtilArrayList *mScriptProofs_;
}

#pragma mark Public

- (instancetype)init;

- (void)addMMRProofWithOrgMinimaDatabaseMmrMMRProof:(OrgMinimaDatabaseMmrMMRProof *)zProof;

- (jboolean)addScriptWithOrgMinimaObjectsProofsScriptProof:(OrgMinimaObjectsProofsScriptProof *)zScriptProof;

- (jboolean)addScriptWithNSString:(NSString *)zScript
                          withInt:(jint)zBitLength;

- (void)addSignatureWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zPubKey
                    withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zSignature;

- (void)addSignatureWithOrgMinimaObjectsProofsSignatureProof:(OrgMinimaObjectsProofsSignatureProof *)zSigProof;

- (void)addTokenDetailsWithOrgMinimaObjectsProofsTokenProof:(OrgMinimaObjectsProofsTokenProof *)zDetails;

- (void)clearMMRProofs;

- (void)clearSignatures;

- (JavaUtilArrayList *)getAllMMRProofs;

- (NSString *)getAllPubKeysCSV;

- (JavaUtilArrayList *)getAllSignatures;

- (JavaUtilArrayList *)getAllTokenDetails;

- (OrgMinimaObjectsProofsScriptProof *)getScriptWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zAddress;

- (OrgMinimaObjectsProofsTokenProof *)getTokenDetailWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zTokenID;

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

- (jboolean)scriptExistsWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zHash;

- (OrgMinimaUtilsJsonJSONObject *)toJSON;

- (NSString *)description;

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaObjectsWitness)

J2OBJC_FIELD_SETTER(OrgMinimaObjectsWitness, mMMRProofs_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsWitness, mSignatureProofs_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsWitness, mTokenProofs_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsWitness, mScriptProofs_, JavaUtilArrayList *)

FOUNDATION_EXPORT void OrgMinimaObjectsWitness_init(OrgMinimaObjectsWitness *self);

FOUNDATION_EXPORT OrgMinimaObjectsWitness *new_OrgMinimaObjectsWitness_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsWitness *create_OrgMinimaObjectsWitness_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaObjectsWitness)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaObjectsWitness")
