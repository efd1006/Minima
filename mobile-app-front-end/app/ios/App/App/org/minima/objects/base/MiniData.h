//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/base/MiniData.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaObjectsBaseMiniData")
#ifdef RESTRICT_OrgMinimaObjectsBaseMiniData
#define INCLUDE_ALL_OrgMinimaObjectsBaseMiniData 0
#else
#define INCLUDE_ALL_OrgMinimaObjectsBaseMiniData 1
#endif
#undef RESTRICT_OrgMinimaObjectsBaseMiniData

#if !defined (OrgMinimaObjectsBaseMiniData_) && (INCLUDE_ALL_OrgMinimaObjectsBaseMiniData || defined(INCLUDE_OrgMinimaObjectsBaseMiniData))
#define OrgMinimaObjectsBaseMiniData_

#define RESTRICT_OrgMinimaUtilsStreamable 1
#define INCLUDE_OrgMinimaUtilsStreamable 1
#include "org/minima/utils/Streamable.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;
@class JavaMathBigInteger;

@interface OrgMinimaObjectsBaseMiniData : NSObject < OrgMinimaUtilsStreamable > {
 @public
  IOSByteArray *mData_;
  JavaMathBigInteger *mDataVal_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithByteArray:(IOSByteArray *)zData;

- (instancetype)initWithNSString:(NSString *)zHexString;

- (jint)compareWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCompare;

- (OrgMinimaObjectsBaseMiniData *)concatWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zConcat;

- (jboolean)isEqual:(id)o;

- (IOSByteArray *)getData;

- (JavaMathBigInteger *)getDataVaue;

- (jint)getLength;

+ (OrgMinimaObjectsBaseMiniData *)getRandomDataWithInt:(jint)len;

- (jboolean)isExactlyEqualWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCompare;

- (jboolean)isLessWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCompare;

- (jboolean)isLessEqualWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCompare;

- (jboolean)isMoreWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCompare;

- (jboolean)isMoreEqualWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCompare;

- (jboolean)isNumericallyEqualWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCompare;

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs;

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

+ (OrgMinimaObjectsBaseMiniData *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

- (OrgMinimaObjectsBaseMiniData *)shiftlWithInt:(jint)zNumber;

- (OrgMinimaObjectsBaseMiniData *)shiftrWithInt:(jint)zNumber;

- (NSString *)to0xString;

- (NSString *)toPureHexString;

- (NSString *)toShort0xString;

- (NSString *)description;

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut;

#pragma mark Protected

- (void)setDataValue;

@end

J2OBJC_STATIC_INIT(OrgMinimaObjectsBaseMiniData)

J2OBJC_FIELD_SETTER(OrgMinimaObjectsBaseMiniData, mData_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsBaseMiniData, mDataVal_, JavaMathBigInteger *)

FOUNDATION_EXPORT void OrgMinimaObjectsBaseMiniData_init(OrgMinimaObjectsBaseMiniData *self);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData *new_OrgMinimaObjectsBaseMiniData_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData *create_OrgMinimaObjectsBaseMiniData_init(void);

FOUNDATION_EXPORT void OrgMinimaObjectsBaseMiniData_initWithNSString_(OrgMinimaObjectsBaseMiniData *self, NSString *zHexString);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData *new_OrgMinimaObjectsBaseMiniData_initWithNSString_(NSString *zHexString) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData *create_OrgMinimaObjectsBaseMiniData_initWithNSString_(NSString *zHexString);

FOUNDATION_EXPORT void OrgMinimaObjectsBaseMiniData_initWithByteArray_(OrgMinimaObjectsBaseMiniData *self, IOSByteArray *zData);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData *new_OrgMinimaObjectsBaseMiniData_initWithByteArray_(IOSByteArray *zData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData *create_OrgMinimaObjectsBaseMiniData_initWithByteArray_(IOSByteArray *zData);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData *OrgMinimaObjectsBaseMiniData_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData *OrgMinimaObjectsBaseMiniData_getRandomDataWithInt_(jint len);

FOUNDATION_EXPORT void OrgMinimaObjectsBaseMiniData_mainWithNSStringArray_(IOSObjectArray *zArgs);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaObjectsBaseMiniData)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaObjectsBaseMiniData")
