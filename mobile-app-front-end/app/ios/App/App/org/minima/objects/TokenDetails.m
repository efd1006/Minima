//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/TokenDetails.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutputStream.h"
#include "java/io/IOException.h"
#include "org/minima/objects/TokenDetails.h"
#include "org/minima/objects/base/MiniData.h"
#include "org/minima/objects/base/MiniHash.h"
#include "org/minima/objects/base/MiniNumber.h"
#include "org/minima/objects/base/MiniString.h"
#include "org/minima/utils/Crypto.h"
#include "org/minima/utils/json/JSONObject.h"

@interface OrgMinimaObjectsTokenDetails ()

- (instancetype)init;

- (void)calculateTokenID;

@end

__attribute__((unused)) static void OrgMinimaObjectsTokenDetails_init(OrgMinimaObjectsTokenDetails *self);

__attribute__((unused)) static OrgMinimaObjectsTokenDetails *new_OrgMinimaObjectsTokenDetails_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMinimaObjectsTokenDetails *create_OrgMinimaObjectsTokenDetails_init(void);

__attribute__((unused)) static void OrgMinimaObjectsTokenDetails_calculateTokenID(OrgMinimaObjectsTokenDetails *self);

@implementation OrgMinimaObjectsTokenDetails

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaObjectsTokenDetails_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)zCoindID
                  withOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zScale
                  withOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zAmount
                  withOrgMinimaObjectsBaseMiniString:(OrgMinimaObjectsBaseMiniString *)zName {
  OrgMinimaObjectsTokenDetails_initWithOrgMinimaObjectsBaseMiniHash_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniString_(self, zCoindID, zScale, zAmount, zName);
  return self;
}

- (OrgMinimaObjectsBaseMiniNumber *)getScaleFactor {
  return [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(JreLoadStatic(OrgMinimaObjectsBaseMiniNumber, TEN))) powWithInt:[((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mTokenScale_)) getAsInt]];
}

- (OrgMinimaObjectsBaseMiniNumber *)getScale {
  return mTokenScale_;
}

- (OrgMinimaObjectsBaseMiniNumber *)getAmount {
  return mTokenTotalAmount_;
}

- (OrgMinimaObjectsBaseMiniString *)getName {
  return mTokenName_;
}

- (OrgMinimaObjectsBaseMiniHash *)getCoinID {
  return mCoinID_;
}

- (OrgMinimaObjectsBaseMiniHash *)getTokenID {
  return mTokenID_;
}

- (OrgMinimaUtilsJsonJSONObject *)toJSON {
  OrgMinimaUtilsJsonJSONObject *obj = create_OrgMinimaUtilsJsonJSONObject_init();
  [obj putWithId:@"coinid" withId:[((OrgMinimaObjectsBaseMiniHash *) nil_chk(mCoinID_)) to0xString]];
  [obj putWithId:@"name" withId:[((OrgMinimaObjectsBaseMiniString *) nil_chk(mTokenName_)) description]];
  [obj putWithId:@"scale" withId:[((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mTokenScale_)) description]];
  [obj putWithId:@"totalamount" withId:[((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mTokenTotalAmount_)) description]];
  [obj putWithId:@"tokenid" withId:[((OrgMinimaObjectsBaseMiniHash *) nil_chk(mTokenID_)) to0xString]];
  return obj;
}

- (void)calculateTokenID {
  OrgMinimaObjectsTokenDetails_calculateTokenID(self);
}

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut {
  [((OrgMinimaObjectsBaseMiniHash *) nil_chk(mCoinID_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mTokenScale_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mTokenTotalAmount_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  [((OrgMinimaObjectsBaseMiniString *) nil_chk(mTokenName_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
}

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  JreStrongAssign(&mCoinID_, OrgMinimaObjectsBaseMiniHash_ReadFromStreamWithJavaIoDataInputStream_(zIn));
  JreStrongAssign(&mTokenScale_, OrgMinimaObjectsBaseMiniNumber_ReadFromStreamWithJavaIoDataInputStream_(zIn));
  JreStrongAssign(&mTokenTotalAmount_, OrgMinimaObjectsBaseMiniNumber_ReadFromStreamWithJavaIoDataInputStream_(zIn));
  JreStrongAssign(&mTokenName_, OrgMinimaObjectsBaseMiniString_ReadFromStreamWithJavaIoDataInputStream_(zIn));
  OrgMinimaObjectsTokenDetails_calculateTokenID(self);
}

+ (OrgMinimaObjectsTokenDetails *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  return OrgMinimaObjectsTokenDetails_ReadFromStreamWithJavaIoDataInputStream_(zIn);
}

- (void)dealloc {
  RELEASE_(mCoinID_);
  RELEASE_(mTokenScale_);
  RELEASE_(mTokenTotalAmount_);
  RELEASE_(mTokenName_);
  RELEASE_(mTokenID_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniHash;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniHash;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaUtilsJsonJSONObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsTokenDetails;", 0x9, 6, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgMinimaObjectsBaseMiniHash:withOrgMinimaObjectsBaseMiniNumber:withOrgMinimaObjectsBaseMiniNumber:withOrgMinimaObjectsBaseMiniString:);
  methods[2].selector = @selector(getScaleFactor);
  methods[3].selector = @selector(getScale);
  methods[4].selector = @selector(getAmount);
  methods[5].selector = @selector(getName);
  methods[6].selector = @selector(getCoinID);
  methods[7].selector = @selector(getTokenID);
  methods[8].selector = @selector(toJSON);
  methods[9].selector = @selector(calculateTokenID);
  methods[10].selector = @selector(writeDataStreamWithJavaIoDataOutputStream:);
  methods[11].selector = @selector(readDataStreamWithJavaIoDataInputStream:);
  methods[12].selector = @selector(ReadFromStreamWithJavaIoDataInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mCoinID_", "LOrgMinimaObjectsBaseMiniHash;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mTokenScale_", "LOrgMinimaObjectsBaseMiniNumber;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mTokenTotalAmount_", "LOrgMinimaObjectsBaseMiniNumber;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mTokenName_", "LOrgMinimaObjectsBaseMiniString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mTokenID_", "LOrgMinimaObjectsBaseMiniHash;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaObjectsBaseMiniHash;LOrgMinimaObjectsBaseMiniNumber;LOrgMinimaObjectsBaseMiniNumber;LOrgMinimaObjectsBaseMiniString;", "writeDataStream", "LJavaIoDataOutputStream;", "LJavaIoIOException;", "readDataStream", "LJavaIoDataInputStream;", "ReadFromStream" };
  static const J2ObjcClassInfo _OrgMinimaObjectsTokenDetails = { "TokenDetails", "org.minima.objects", ptrTable, methods, fields, 7, 0x1, 13, 5, -1, -1, -1, -1, -1 };
  return &_OrgMinimaObjectsTokenDetails;
}

@end

void OrgMinimaObjectsTokenDetails_init(OrgMinimaObjectsTokenDetails *self) {
  NSObject_init(self);
}

OrgMinimaObjectsTokenDetails *new_OrgMinimaObjectsTokenDetails_init() {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsTokenDetails, init)
}

OrgMinimaObjectsTokenDetails *create_OrgMinimaObjectsTokenDetails_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsTokenDetails, init)
}

void OrgMinimaObjectsTokenDetails_initWithOrgMinimaObjectsBaseMiniHash_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniString_(OrgMinimaObjectsTokenDetails *self, OrgMinimaObjectsBaseMiniHash *zCoindID, OrgMinimaObjectsBaseMiniNumber *zScale, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniString *zName) {
  NSObject_init(self);
  JreStrongAssign(&self->mTokenScale_, zScale);
  JreStrongAssign(&self->mTokenTotalAmount_, zAmount);
  JreStrongAssign(&self->mTokenName_, zName);
  JreStrongAssign(&self->mCoinID_, zCoindID);
  OrgMinimaObjectsTokenDetails_calculateTokenID(self);
}

OrgMinimaObjectsTokenDetails *new_OrgMinimaObjectsTokenDetails_initWithOrgMinimaObjectsBaseMiniHash_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniString_(OrgMinimaObjectsBaseMiniHash *zCoindID, OrgMinimaObjectsBaseMiniNumber *zScale, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniString *zName) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsTokenDetails, initWithOrgMinimaObjectsBaseMiniHash_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniString_, zCoindID, zScale, zAmount, zName)
}

OrgMinimaObjectsTokenDetails *create_OrgMinimaObjectsTokenDetails_initWithOrgMinimaObjectsBaseMiniHash_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniString_(OrgMinimaObjectsBaseMiniHash *zCoindID, OrgMinimaObjectsBaseMiniNumber *zScale, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniString *zName) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsTokenDetails, initWithOrgMinimaObjectsBaseMiniHash_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniString_, zCoindID, zScale, zAmount, zName)
}

void OrgMinimaObjectsTokenDetails_calculateTokenID(OrgMinimaObjectsTokenDetails *self) {
  @try {
    JavaIoByteArrayOutputStream *baos = create_JavaIoByteArrayOutputStream_init();
    JavaIoDataOutputStream *daos = create_JavaIoDataOutputStream_initWithJavaIoOutputStream_(baos);
    [self writeDataStreamWithJavaIoDataOutputStream:daos];
    [daos flush];
    OrgMinimaObjectsBaseMiniData *tokdat = create_OrgMinimaObjectsBaseMiniData_initWithByteArray_([baos toByteArray]);
    JreStrongAssign(&self->mTokenID_, [((OrgMinimaUtilsCrypto *) nil_chk(OrgMinimaUtilsCrypto_getInstance())) hashObjectWithOrgMinimaUtilsStreamable:tokdat]);
    [daos close];
    [baos close];
  }
  @catch (JavaIoIOException *e) {
    [e printStackTrace];
  }
}

OrgMinimaObjectsTokenDetails *OrgMinimaObjectsTokenDetails_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn) {
  OrgMinimaObjectsTokenDetails_initialize();
  OrgMinimaObjectsTokenDetails *td = create_OrgMinimaObjectsTokenDetails_init();
  @try {
    [td readDataStreamWithJavaIoDataInputStream:zIn];
  }
  @catch (JavaIoIOException *e) {
    [e printStackTrace];
    return nil;
  }
  return td;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaObjectsTokenDetails)
