//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/PubPrivKey.java
//

#include "J2ObjC_source.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutputStream.h"
#include "org/minima/objects/PubPrivKey.h"
#include "org/minima/objects/base/MiniData.h"
#include "org/minima/objects/base/MiniData32.h"

@implementation OrgMinimaObjectsPubPrivKey

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaObjectsPubPrivKey_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zPrivateSeed {
  OrgMinimaObjectsPubPrivKey_initWithOrgMinimaObjectsBaseMiniData_(self, zPrivateSeed);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)empty {
  OrgMinimaObjectsPubPrivKey_initWithBoolean_(self, empty);
  return self;
}

- (OrgMinimaObjectsBaseMiniData *)signWithOrgMinimaObjectsBaseMiniData32:(OrgMinimaObjectsBaseMiniData32 *)zData {
  return OrgMinimaObjectsBaseMiniData_getRandomDataWithInt_(64);
}

- (jboolean)verifyWithOrgMinimaObjectsBaseMiniData32:(OrgMinimaObjectsBaseMiniData32 *)zData
                    withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zSignature {
  return OrgMinimaObjectsPubPrivKey_verifyWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData32_withOrgMinimaObjectsBaseMiniData_(mPublicKey_, zData, zSignature);
}

+ (jboolean)verifyWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zPubKey
                withOrgMinimaObjectsBaseMiniData32:(OrgMinimaObjectsBaseMiniData32 *)zData
                  withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zSignature {
  return OrgMinimaObjectsPubPrivKey_verifyWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData32_withOrgMinimaObjectsBaseMiniData_(zPubKey, zData, zSignature);
}

- (OrgMinimaObjectsBaseMiniData *)getPublicKey {
  return mPublicKey_;
}

- (OrgMinimaObjectsBaseMiniData *)getPrivateSeed {
  return mPrivateSeed_;
}

- (NSString *)description {
  return [((OrgMinimaObjectsBaseMiniData *) nil_chk(mPublicKey_)) description];
}

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut {
  [((OrgMinimaObjectsBaseMiniData *) nil_chk(mPublicKey_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  [((OrgMinimaObjectsBaseMiniData *) nil_chk(mPrivateSeed_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
}

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  JreStrongAssign(&mPublicKey_, OrgMinimaObjectsBaseMiniData_ReadFromStreamWithJavaIoDataInputStream_(zIn));
  JreStrongAssign(&mPrivateSeed_, OrgMinimaObjectsBaseMiniData_ReadFromStreamWithJavaIoDataInputStream_(zIn));
}

- (void)dealloc {
  RELEASE_(mPrivateSeed_);
  RELEASE_(mPublicKey_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, 10, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, 10, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgMinimaObjectsBaseMiniData:);
  methods[2].selector = @selector(initWithBoolean:);
  methods[3].selector = @selector(signWithOrgMinimaObjectsBaseMiniData32:);
  methods[4].selector = @selector(verifyWithOrgMinimaObjectsBaseMiniData32:withOrgMinimaObjectsBaseMiniData:);
  methods[5].selector = @selector(verifyWithOrgMinimaObjectsBaseMiniData:withOrgMinimaObjectsBaseMiniData32:withOrgMinimaObjectsBaseMiniData:);
  methods[6].selector = @selector(getPublicKey);
  methods[7].selector = @selector(getPrivateSeed);
  methods[8].selector = @selector(description);
  methods[9].selector = @selector(writeDataStreamWithJavaIoDataOutputStream:);
  methods[10].selector = @selector(readDataStreamWithJavaIoDataInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mPrivateSeed_", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mPublicKey_", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaObjectsBaseMiniData;", "Z", "sign", "LOrgMinimaObjectsBaseMiniData32;", "verify", "LOrgMinimaObjectsBaseMiniData32;LOrgMinimaObjectsBaseMiniData;", "LOrgMinimaObjectsBaseMiniData;LOrgMinimaObjectsBaseMiniData32;LOrgMinimaObjectsBaseMiniData;", "toString", "writeDataStream", "LJavaIoDataOutputStream;", "LJavaIoIOException;", "readDataStream", "LJavaIoDataInputStream;" };
  static const J2ObjcClassInfo _OrgMinimaObjectsPubPrivKey = { "PubPrivKey", "org.minima.objects", ptrTable, methods, fields, 7, 0x1, 11, 2, -1, -1, -1, -1, -1 };
  return &_OrgMinimaObjectsPubPrivKey;
}

@end

void OrgMinimaObjectsPubPrivKey_init(OrgMinimaObjectsPubPrivKey *self) {
  OrgMinimaObjectsPubPrivKey_initWithOrgMinimaObjectsBaseMiniData_(self, OrgMinimaObjectsBaseMiniData_getRandomDataWithInt_(32));
}

OrgMinimaObjectsPubPrivKey *new_OrgMinimaObjectsPubPrivKey_init() {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsPubPrivKey, init)
}

OrgMinimaObjectsPubPrivKey *create_OrgMinimaObjectsPubPrivKey_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsPubPrivKey, init)
}

void OrgMinimaObjectsPubPrivKey_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsPubPrivKey *self, OrgMinimaObjectsBaseMiniData *zPrivateSeed) {
  NSObject_init(self);
  JreStrongAssign(&self->mPrivateSeed_, zPrivateSeed);
  JreStrongAssign(&self->mPublicKey_, OrgMinimaObjectsBaseMiniData_getRandomDataWithInt_(32));
}

OrgMinimaObjectsPubPrivKey *new_OrgMinimaObjectsPubPrivKey_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zPrivateSeed) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsPubPrivKey, initWithOrgMinimaObjectsBaseMiniData_, zPrivateSeed)
}

OrgMinimaObjectsPubPrivKey *create_OrgMinimaObjectsPubPrivKey_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zPrivateSeed) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsPubPrivKey, initWithOrgMinimaObjectsBaseMiniData_, zPrivateSeed)
}

void OrgMinimaObjectsPubPrivKey_initWithBoolean_(OrgMinimaObjectsPubPrivKey *self, jboolean empty) {
  NSObject_init(self);
}

OrgMinimaObjectsPubPrivKey *new_OrgMinimaObjectsPubPrivKey_initWithBoolean_(jboolean empty) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsPubPrivKey, initWithBoolean_, empty)
}

OrgMinimaObjectsPubPrivKey *create_OrgMinimaObjectsPubPrivKey_initWithBoolean_(jboolean empty) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsPubPrivKey, initWithBoolean_, empty)
}

jboolean OrgMinimaObjectsPubPrivKey_verifyWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData32_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zPubKey, OrgMinimaObjectsBaseMiniData32 *zData, OrgMinimaObjectsBaseMiniData *zSignature) {
  OrgMinimaObjectsPubPrivKey_initialize();
  return true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaObjectsPubPrivKey)
