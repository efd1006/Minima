//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/Coin.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaObjectsCoin")
#ifdef RESTRICT_OrgMinimaObjectsCoin
#define INCLUDE_ALL_OrgMinimaObjectsCoin 0
#else
#define INCLUDE_ALL_OrgMinimaObjectsCoin 1
#endif
#undef RESTRICT_OrgMinimaObjectsCoin

#if !defined (OrgMinimaObjectsCoin_) && (INCLUDE_ALL_OrgMinimaObjectsCoin || defined(INCLUDE_OrgMinimaObjectsCoin))
#define OrgMinimaObjectsCoin_

#define RESTRICT_OrgMinimaUtilsStreamable 1
#define INCLUDE_OrgMinimaUtilsStreamable 1
#include "org/minima/utils/Streamable.h"

@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;
@class OrgMinimaObjectsBaseMiniData32;
@class OrgMinimaObjectsBaseMiniNumber;
@class OrgMinimaUtilsJsonJSONObject;

@interface OrgMinimaObjectsCoin : NSObject < OrgMinimaUtilsStreamable > {
 @public
  OrgMinimaObjectsBaseMiniData32 *mCoinID_;
  OrgMinimaObjectsBaseMiniData32 *mAddress_;
  OrgMinimaObjectsBaseMiniNumber *mAmount_;
  OrgMinimaObjectsBaseMiniData32 *mTokenID_;
}

#pragma mark Public

- (instancetype)initWithOrgMinimaObjectsBaseMiniData32:(OrgMinimaObjectsBaseMiniData32 *)zCoinID
                    withOrgMinimaObjectsBaseMiniData32:(OrgMinimaObjectsBaseMiniData32 *)zAddress
                    withOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zAmount
                    withOrgMinimaObjectsBaseMiniData32:(OrgMinimaObjectsBaseMiniData32 *)zTokenID;

- (OrgMinimaObjectsBaseMiniData32 *)getAddress;

- (OrgMinimaObjectsBaseMiniNumber *)getAmount;

- (OrgMinimaObjectsBaseMiniData32 *)getCoinID;

+ (OrgMinimaObjectsBaseMiniData32 *)getTokenCreationIDWithInt:(jint)zDecimalPlaces;

- (OrgMinimaObjectsBaseMiniData32 *)getTokenID;

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

+ (OrgMinimaObjectsCoin *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

- (OrgMinimaUtilsJsonJSONObject *)toJSON;

- (NSString *)description;

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut;

@end

J2OBJC_STATIC_INIT(OrgMinimaObjectsCoin)

J2OBJC_FIELD_SETTER(OrgMinimaObjectsCoin, mCoinID_, OrgMinimaObjectsBaseMiniData32 *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsCoin, mAddress_, OrgMinimaObjectsBaseMiniData32 *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsCoin, mAmount_, OrgMinimaObjectsBaseMiniNumber *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsCoin, mTokenID_, OrgMinimaObjectsBaseMiniData32 *)

inline OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsCoin_get_MINIMA_TOKENID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsCoin_MINIMA_TOKENID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaObjectsCoin, MINIMA_TOKENID, OrgMinimaObjectsBaseMiniData32 *)

inline OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsCoin_get_COINID_OUTPUT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsCoin_COINID_OUTPUT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaObjectsCoin, COINID_OUTPUT, OrgMinimaObjectsBaseMiniData32 *)

inline OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsCoin_get_TOKENID_CREATE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsCoin_TOKENID_CREATE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaObjectsCoin, TOKENID_CREATE, OrgMinimaObjectsBaseMiniData32 *)

FOUNDATION_EXPORT void OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData32_withOrgMinimaObjectsBaseMiniData32_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData32_(OrgMinimaObjectsCoin *self, OrgMinimaObjectsBaseMiniData32 *zCoinID, OrgMinimaObjectsBaseMiniData32 *zAddress, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniData32 *zTokenID);

FOUNDATION_EXPORT OrgMinimaObjectsCoin *new_OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData32_withOrgMinimaObjectsBaseMiniData32_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData32_(OrgMinimaObjectsBaseMiniData32 *zCoinID, OrgMinimaObjectsBaseMiniData32 *zAddress, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniData32 *zTokenID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsCoin *create_OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData32_withOrgMinimaObjectsBaseMiniData32_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData32_(OrgMinimaObjectsBaseMiniData32 *zCoinID, OrgMinimaObjectsBaseMiniData32 *zAddress, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniData32 *zTokenID);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsCoin_getTokenCreationIDWithInt_(jint zDecimalPlaces);

FOUNDATION_EXPORT OrgMinimaObjectsCoin *OrgMinimaObjectsCoin_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaObjectsCoin)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaObjectsCoin")
