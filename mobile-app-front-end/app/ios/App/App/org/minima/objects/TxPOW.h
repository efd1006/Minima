//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/TxPOW.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaObjectsTxPOW")
#ifdef RESTRICT_OrgMinimaObjectsTxPOW
#define INCLUDE_ALL_OrgMinimaObjectsTxPOW 0
#else
#define INCLUDE_ALL_OrgMinimaObjectsTxPOW 1
#endif
#undef RESTRICT_OrgMinimaObjectsTxPOW

#if !defined (OrgMinimaObjectsTxPOW_) && (INCLUDE_ALL_OrgMinimaObjectsTxPOW || defined(INCLUDE_OrgMinimaObjectsTxPOW))
#define OrgMinimaObjectsTxPOW_

#define RESTRICT_OrgMinimaUtilsStreamable 1
#define INCLUDE_OrgMinimaUtilsStreamable 1
#include "org/minima/utils/Streamable.h"

@class IOSObjectArray;
@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;
@class JavaUtilArrayList;
@class OrgMinimaObjectsBaseMiniHash;
@class OrgMinimaObjectsBaseMiniNumber;
@class OrgMinimaObjectsTransaction;
@class OrgMinimaObjectsWitness;
@class OrgMinimaUtilsJsonJSONObject;

@interface OrgMinimaObjectsTxPOW : NSObject < OrgMinimaUtilsStreamable > {
 @public
  IOSObjectArray *mSuperParents_;
  OrgMinimaObjectsBaseMiniHash *mMMRRoot_;
  OrgMinimaObjectsBaseMiniHash *mMagic_;
  OrgMinimaObjectsBaseMiniHash *mChainID_;
  OrgMinimaObjectsBaseMiniHash *mCustom_;
  jboolean _mIsBlockPOW_;
  jboolean _mIsTxnPOW_;
  jint _mSuperBlock_;
}

#pragma mark Public

- (instancetype)init;

- (void)addBlockTxPOWWithOrgMinimaObjectsTxPOW:(OrgMinimaObjectsTxPOW *)zTxPOW;

- (void)calculateTXPOWID;

- (jint)getBlockDifficulty;

- (OrgMinimaObjectsBaseMiniNumber *)getBlockNumber;

- (JavaUtilArrayList *)getBlockTxns;

- (OrgMinimaObjectsBaseMiniHash *)getChainID;

- (OrgMinimaObjectsBaseMiniHash *)getCustom;

- (OrgMinimaObjectsBaseMiniHash *)getMMRRoot;

- (OrgMinimaObjectsBaseMiniHash *)getParentID;

- (jint)getSuperLevel;

- (OrgMinimaObjectsBaseMiniNumber *)getTimeMilli;

- (OrgMinimaObjectsTransaction *)getTransaction;

- (jint)getTxnDifficulty;

- (OrgMinimaObjectsBaseMiniHash *)getTxPowID;

- (OrgMinimaObjectsWitness *)getWitness;

- (jboolean)isBlock;

- (jboolean)isTransaction;

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

- (void)setBlockDifficultyWithInt:(jint)zBlockDifficulty;

- (void)setBlockNumberWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zBlockNum;

- (void)setChainIDWithOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)zChainID;

- (void)setCustomWithOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)zCustom;

- (void)setMMRRootWithOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)zRoot;

- (void)setNonceWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zNonce;

- (void)setParentWithOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)zData;

- (void)setTimeMilliWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zMilli;

- (void)setTransactionWithOrgMinimaObjectsTransaction:(OrgMinimaObjectsTransaction *)zTran;

- (void)setTxDifficultyWithInt:(jint)zDifficulty;

- (void)setWitnessWithOrgMinimaObjectsWitness:(OrgMinimaObjectsWitness *)zWitness;

- (OrgMinimaUtilsJsonJSONObject *)toJSON;

- (NSString *)description;

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut;

@end

J2OBJC_STATIC_INIT(OrgMinimaObjectsTxPOW)

J2OBJC_FIELD_SETTER(OrgMinimaObjectsTxPOW, mSuperParents_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsTxPOW, mMMRRoot_, OrgMinimaObjectsBaseMiniHash *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsTxPOW, mMagic_, OrgMinimaObjectsBaseMiniHash *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsTxPOW, mChainID_, OrgMinimaObjectsBaseMiniHash *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsTxPOW, mCustom_, OrgMinimaObjectsBaseMiniHash *)

inline jint OrgMinimaObjectsTxPOW_get_SUPERPARENT_NUM(void);
#define OrgMinimaObjectsTxPOW_SUPERPARENT_NUM 256
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaObjectsTxPOW, SUPERPARENT_NUM, jint)

FOUNDATION_EXPORT void OrgMinimaObjectsTxPOW_init(OrgMinimaObjectsTxPOW *self);

FOUNDATION_EXPORT OrgMinimaObjectsTxPOW *new_OrgMinimaObjectsTxPOW_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsTxPOW *create_OrgMinimaObjectsTxPOW_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaObjectsTxPOW)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaObjectsTxPOW")
