//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/MultiKey.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutputStream.h"
#include "java/lang/Integer.h"
#include "org/minima/database/mmr/MMRSet.h"
#include "org/minima/objects/MultiKey.h"
#include "org/minima/objects/PubPrivKey.h"
#include "org/minima/objects/base/MiniData.h"
#include "org/minima/utils/digest/Digest.h"
#include "org/minima/utils/digest/KeccakDigest.h"
#include "org/minima/utils/digest/WinternitzOTSVerify.h"
#include "org/minima/utils/digest/WinternitzOTSignature.h"
#include "org/minima/utils/json/JSONObject.h"

@interface OrgMinimaObjectsMultiKey ()

+ (id<OrgMinimaUtilsDigestDigest>)getHashFunctionWithInt:(jint)zBitLength;

- (void)initKeysWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zPrivateSeed OBJC_METHOD_FAMILY_NONE;

@end

inline jint OrgMinimaObjectsMultiKey_get_WINTERNITZ_NUMBER(void);
#define OrgMinimaObjectsMultiKey_WINTERNITZ_NUMBER 12
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaObjectsMultiKey, WINTERNITZ_NUMBER, jint)

inline jint OrgMinimaObjectsMultiKey_get_MULTI_TREE_SIZE(void);
inline jint OrgMinimaObjectsMultiKey_set_MULTI_TREE_SIZE(jint value);
inline jint *OrgMinimaObjectsMultiKey_getRef_MULTI_TREE_SIZE(void);
static jint OrgMinimaObjectsMultiKey_MULTI_TREE_SIZE = 8;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMinimaObjectsMultiKey, MULTI_TREE_SIZE, jint)

__attribute__((unused)) static id<OrgMinimaUtilsDigestDigest> OrgMinimaObjectsMultiKey_getHashFunctionWithInt_(jint zBitLength);

__attribute__((unused)) static void OrgMinimaObjectsMultiKey_initKeysWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsMultiKey *self, OrgMinimaObjectsBaseMiniData *zPrivateSeed);

@implementation OrgMinimaObjectsMultiKey

+ (id<OrgMinimaUtilsDigestDigest>)getHashFunctionWithInt:(jint)zBitLength {
  return OrgMinimaObjectsMultiKey_getHashFunctionWithInt_(zBitLength);
}

- (instancetype)initWithInt:(jint)zBitLength {
  OrgMinimaObjectsMultiKey_initWithInt_(self, zBitLength);
  return self;
}

- (instancetype)initWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zPrivateSeed {
  OrgMinimaObjectsMultiKey_initWithOrgMinimaObjectsBaseMiniData_(self, zPrivateSeed);
  return self;
}

- (void)initKeysWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zPrivateSeed {
  OrgMinimaObjectsMultiKey_initKeysWithOrgMinimaObjectsBaseMiniData_(self, zPrivateSeed);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaObjectsMultiKey_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgMinimaObjectsBaseMiniData *)signWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zData {
  OrgMinimaUtilsDigestWinternitzOTSignature *wots = new_OrgMinimaUtilsDigestWinternitzOTSignature_initWithByteArray_withOrgMinimaUtilsDigestDigest_withInt_([((OrgMinimaObjectsBaseMiniData *) nil_chk(mPrivateSeed_)) getData], OrgMinimaObjectsMultiKey_getHashFunctionWithInt_(mBitLength_), OrgMinimaObjectsMultiKey_WINTERNITZ_NUMBER);
  IOSByteArray *signature = [wots getSignatureWithByteArray:[((OrgMinimaObjectsBaseMiniData *) nil_chk(zData)) getData]];
  return new_OrgMinimaObjectsBaseMiniData_initWithByteArray_(signature);
}

- (jboolean)verifyWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zData
                  withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zSignature {
  return OrgMinimaObjectsMultiKey_verifyWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_(mPublicKey_, zData, zSignature);
}

+ (jboolean)verifyWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zPubKey
                  withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zData
                  withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zSignature {
  return OrgMinimaObjectsMultiKey_verifyWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_(zPubKey, zData, zSignature);
}

- (OrgMinimaUtilsJsonJSONObject *)toJSON {
  OrgMinimaUtilsJsonJSONObject *ret = new_OrgMinimaUtilsJsonJSONObject_init();
  (void) [ret putWithId:@"bits" withId:JavaLangInteger_valueOfWithInt_(mBitLength_)];
  (void) [ret putWithId:@"publickey" withId:[((OrgMinimaObjectsBaseMiniData *) nil_chk(mPublicKey_)) to0xString]];
  return ret;
}

- (OrgMinimaObjectsBaseMiniData *)getPublicKey {
  return mPublicKey_;
}

- (OrgMinimaObjectsBaseMiniData *)getPrivateSeed {
  return mPrivateSeed_;
}

- (jint)getBitLength {
  return mBitLength_;
}

- (NSString *)description {
  return [((OrgMinimaObjectsBaseMiniData *) nil_chk(mPublicKey_)) to0xString];
}

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut {
  [((OrgMinimaObjectsBaseMiniData *) nil_chk(mPublicKey_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  [((OrgMinimaObjectsBaseMiniData *) nil_chk(mPrivateSeed_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
}

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  mPublicKey_ = OrgMinimaObjectsBaseMiniData_ReadFromStreamWithJavaIoDataInputStream_(zIn);
  mPrivateSeed_ = OrgMinimaObjectsBaseMiniData_ReadFromStreamWithJavaIoDataInputStream_(zIn);
  mBitLength_ = [((OrgMinimaObjectsBaseMiniData *) nil_chk(mPrivateSeed_)) getLength] * 8;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMinimaUtilsDigestDigest;", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 7, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaUtilsJsonJSONObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, 11, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, 11, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getHashFunctionWithInt:);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(initWithOrgMinimaObjectsBaseMiniData:);
  methods[3].selector = @selector(initKeysWithOrgMinimaObjectsBaseMiniData:);
  methods[4].selector = @selector(init);
  methods[5].selector = @selector(signWithOrgMinimaObjectsBaseMiniData:);
  methods[6].selector = @selector(verifyWithOrgMinimaObjectsBaseMiniData:withOrgMinimaObjectsBaseMiniData:);
  methods[7].selector = @selector(verifyWithOrgMinimaObjectsBaseMiniData:withOrgMinimaObjectsBaseMiniData:withOrgMinimaObjectsBaseMiniData:);
  methods[8].selector = @selector(toJSON);
  methods[9].selector = @selector(getPublicKey);
  methods[10].selector = @selector(getPrivateSeed);
  methods[11].selector = @selector(getBitLength);
  methods[12].selector = @selector(description);
  methods[13].selector = @selector(writeDataStreamWithJavaIoDataOutputStream:);
  methods[14].selector = @selector(readDataStreamWithJavaIoDataInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "WINTERNITZ_NUMBER", "I", .constantValue.asInt = OrgMinimaObjectsMultiKey_WINTERNITZ_NUMBER, 0x1a, -1, -1, -1, -1 },
    { "MULTI_TREE_SIZE", "I", .constantValue.asLong = 0, 0xa, -1, 14, -1, -1 },
    { "mLeafKeys_", "[LOrgMinimaObjectsPubPrivKey;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mPrivateSeed_", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mPublicKey_", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mBitLength_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mMAX_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mUses_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getHashFunction", "I", "LOrgMinimaObjectsBaseMiniData;", "initKeys", "sign", "verify", "LOrgMinimaObjectsBaseMiniData;LOrgMinimaObjectsBaseMiniData;", "LOrgMinimaObjectsBaseMiniData;LOrgMinimaObjectsBaseMiniData;LOrgMinimaObjectsBaseMiniData;", "toString", "writeDataStream", "LJavaIoDataOutputStream;", "LJavaIoIOException;", "readDataStream", "LJavaIoDataInputStream;", &OrgMinimaObjectsMultiKey_MULTI_TREE_SIZE };
  static const J2ObjcClassInfo _OrgMinimaObjectsMultiKey = { "MultiKey", "org.minima.objects", ptrTable, methods, fields, 7, 0x1, 15, 8, -1, -1, -1, -1, -1 };
  return &_OrgMinimaObjectsMultiKey;
}

@end

id<OrgMinimaUtilsDigestDigest> OrgMinimaObjectsMultiKey_getHashFunctionWithInt_(jint zBitLength) {
  OrgMinimaObjectsMultiKey_initialize();
  return new_OrgMinimaUtilsDigestKeccakDigest_initWithInt_(zBitLength);
}

void OrgMinimaObjectsMultiKey_initWithInt_(OrgMinimaObjectsMultiKey *self, jint zBitLength) {
  NSObject_init(self);
  self->mLeafKeys_ = [IOSObjectArray newArrayWithLength:OrgMinimaObjectsMultiKey_MULTI_TREE_SIZE type:OrgMinimaObjectsPubPrivKey_class_()];
  self->mMAX_ = 0;
  self->mUses_ = 0;
  OrgMinimaObjectsMultiKey_initKeysWithOrgMinimaObjectsBaseMiniData_(self, OrgMinimaObjectsBaseMiniData_getRandomDataWithInt_(zBitLength / 8));
}

OrgMinimaObjectsMultiKey *new_OrgMinimaObjectsMultiKey_initWithInt_(jint zBitLength) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsMultiKey, initWithInt_, zBitLength)
}

OrgMinimaObjectsMultiKey *create_OrgMinimaObjectsMultiKey_initWithInt_(jint zBitLength) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsMultiKey, initWithInt_, zBitLength)
}

void OrgMinimaObjectsMultiKey_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsMultiKey *self, OrgMinimaObjectsBaseMiniData *zPrivateSeed) {
  NSObject_init(self);
  self->mLeafKeys_ = [IOSObjectArray newArrayWithLength:OrgMinimaObjectsMultiKey_MULTI_TREE_SIZE type:OrgMinimaObjectsPubPrivKey_class_()];
  self->mMAX_ = 0;
  self->mUses_ = 0;
  OrgMinimaObjectsMultiKey_initKeysWithOrgMinimaObjectsBaseMiniData_(self, zPrivateSeed);
}

OrgMinimaObjectsMultiKey *new_OrgMinimaObjectsMultiKey_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zPrivateSeed) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsMultiKey, initWithOrgMinimaObjectsBaseMiniData_, zPrivateSeed)
}

OrgMinimaObjectsMultiKey *create_OrgMinimaObjectsMultiKey_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zPrivateSeed) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsMultiKey, initWithOrgMinimaObjectsBaseMiniData_, zPrivateSeed)
}

void OrgMinimaObjectsMultiKey_initKeysWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsMultiKey *self, OrgMinimaObjectsBaseMiniData *zPrivateSeed) {
  self->mBitLength_ = [((OrgMinimaObjectsBaseMiniData *) nil_chk(zPrivateSeed)) getLength] * 8;
  self->mPrivateSeed_ = zPrivateSeed;
  self->mLeafKeys_ = [IOSObjectArray newArrayWithLength:OrgMinimaObjectsMultiKey_MULTI_TREE_SIZE type:OrgMinimaObjectsPubPrivKey_class_()];
  for (jint i = 0; i < OrgMinimaObjectsMultiKey_MULTI_TREE_SIZE; i++) {
  }
  OrgMinimaDatabaseMmrMMRSet *mmr = new_OrgMinimaDatabaseMmrMMRSet_initWithInt_(self->mBitLength_);
  OrgMinimaUtilsDigestWinternitzOTSignature *wots = new_OrgMinimaUtilsDigestWinternitzOTSignature_initWithByteArray_withOrgMinimaUtilsDigestDigest_withInt_([((OrgMinimaObjectsBaseMiniData *) nil_chk(self->mPrivateSeed_)) getData], OrgMinimaObjectsMultiKey_getHashFunctionWithInt_(self->mBitLength_), OrgMinimaObjectsMultiKey_WINTERNITZ_NUMBER);
  self->mPublicKey_ = new_OrgMinimaObjectsBaseMiniData_initWithByteArray_([wots getPublicKey]);
  self->mMAX_ = 1;
  self->mUses_ = 0;
}

void OrgMinimaObjectsMultiKey_init(OrgMinimaObjectsMultiKey *self) {
  NSObject_init(self);
  self->mLeafKeys_ = [IOSObjectArray newArrayWithLength:OrgMinimaObjectsMultiKey_MULTI_TREE_SIZE type:OrgMinimaObjectsPubPrivKey_class_()];
  self->mMAX_ = 0;
  self->mUses_ = 0;
}

OrgMinimaObjectsMultiKey *new_OrgMinimaObjectsMultiKey_init() {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsMultiKey, init)
}

OrgMinimaObjectsMultiKey *create_OrgMinimaObjectsMultiKey_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsMultiKey, init)
}

jboolean OrgMinimaObjectsMultiKey_verifyWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zPubKey, OrgMinimaObjectsBaseMiniData *zData, OrgMinimaObjectsBaseMiniData *zSignature) {
  OrgMinimaObjectsMultiKey_initialize();
  jint bitLength = [((OrgMinimaObjectsBaseMiniData *) nil_chk(zPubKey)) getLength] * 8;
  OrgMinimaUtilsDigestWinternitzOTSVerify *wver = new_OrgMinimaUtilsDigestWinternitzOTSVerify_initWithOrgMinimaUtilsDigestDigest_withInt_(OrgMinimaObjectsMultiKey_getHashFunctionWithInt_(bitLength), OrgMinimaObjectsMultiKey_WINTERNITZ_NUMBER);
  IOSByteArray *pubkey = [wver VerifyWithByteArray:[((OrgMinimaObjectsBaseMiniData *) nil_chk(zData)) getData] withByteArray:[((OrgMinimaObjectsBaseMiniData *) nil_chk(zSignature)) getData]];
  OrgMinimaObjectsBaseMiniData *resp = new_OrgMinimaObjectsBaseMiniData_initWithByteArray_(pubkey);
  return [resp isEqualWithOrgMinimaObjectsBaseMiniData:zPubKey];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaObjectsMultiKey)
