//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/Coin.java
//

#include "J2ObjC_source.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutputStream.h"
#include "java/lang/Boolean.h"
#include "org/minima/objects/Coin.h"
#include "org/minima/objects/base/MiniByte.h"
#include "org/minima/objects/base/MiniData.h"
#include "org/minima/objects/base/MiniNumber.h"
#include "org/minima/utils/json/JSONObject.h"

@interface OrgMinimaObjectsCoin ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgMinimaObjectsCoin_init(OrgMinimaObjectsCoin *self);

__attribute__((unused)) static OrgMinimaObjectsCoin *new_OrgMinimaObjectsCoin_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMinimaObjectsCoin *create_OrgMinimaObjectsCoin_init(void);

J2OBJC_INITIALIZED_DEFN(OrgMinimaObjectsCoin)

OrgMinimaObjectsBaseMiniData *OrgMinimaObjectsCoin_MINIMA_TOKENID;
OrgMinimaObjectsBaseMiniData *OrgMinimaObjectsCoin_COINID_OUTPUT;
OrgMinimaObjectsBaseMiniData *OrgMinimaObjectsCoin_TOKENID_CREATE;

@implementation OrgMinimaObjectsCoin

- (instancetype)initWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCoinID
                    withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zAddress
                  withOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zAmount
                    withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zTokenID {
  OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_(self, zCoinID, zAddress, zAmount, zTokenID);
  return self;
}

- (instancetype)initWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCoinID
                    withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zAddress
                  withOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zAmount
                    withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zTokenID
                                         withBoolean:(jboolean)zFloating
                                         withBoolean:(jboolean)zRemainder {
  OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_withBoolean_withBoolean_(self, zCoinID, zAddress, zAmount, zTokenID, zFloating, zRemainder);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaObjectsCoin_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setFloatingWithBoolean:(jboolean)zFloating {
  mFloating_ = zFloating;
}

- (jboolean)isFloating {
  return mFloating_;
}

- (void)setRemainderWithBoolean:(jboolean)zRemainder {
  mRemainder_ = zRemainder;
}

- (jboolean)isRemainder {
  return mRemainder_;
}

- (void)resetCoinIDWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zCoinID {
  JreStrongAssign(&mCoinID_, zCoinID);
}

- (void)resetAmountWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zAmount {
  JreStrongAssign(&mAmount_, zAmount);
}

- (OrgMinimaObjectsBaseMiniData *)getCoinID {
  return mCoinID_;
}

- (OrgMinimaObjectsBaseMiniData *)getAddress {
  return mAddress_;
}

- (OrgMinimaObjectsBaseMiniNumber *)getAmount {
  return mAmount_;
}

- (OrgMinimaObjectsBaseMiniData *)getTokenID {
  return mTokenID_;
}

- (NSString *)description {
  return [((OrgMinimaUtilsJsonJSONObject *) nil_chk([self toJSON])) description];
}

- (OrgMinimaUtilsJsonJSONObject *)toJSON {
  OrgMinimaUtilsJsonJSONObject *obj = create_OrgMinimaUtilsJsonJSONObject_init();
  [obj putWithId:@"coinid" withId:[((OrgMinimaObjectsBaseMiniData *) nil_chk(mCoinID_)) description]];
  [obj putWithId:@"address" withId:[((OrgMinimaObjectsBaseMiniData *) nil_chk(mAddress_)) description]];
  [obj putWithId:@"amount" withId:[((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mAmount_)) description]];
  [obj putWithId:@"tokenid" withId:[((OrgMinimaObjectsBaseMiniData *) nil_chk(mTokenID_)) description]];
  [obj putWithId:@"floating" withId:JavaLangBoolean_valueOfWithBoolean_(mFloating_)];
  [obj putWithId:@"remainder" withId:JavaLangBoolean_valueOfWithBoolean_(mRemainder_)];
  return obj;
}

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut {
  [((OrgMinimaObjectsBaseMiniData *) nil_chk(mCoinID_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  [((OrgMinimaObjectsBaseMiniData *) nil_chk(mAddress_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mAmount_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  [((OrgMinimaObjectsBaseMiniData *) nil_chk(mTokenID_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  if (mFloating_) {
    [((OrgMinimaObjectsBaseMiniByte *) nil_chk(JreLoadStatic(OrgMinimaObjectsBaseMiniByte, TRUE))) writeDataStreamWithJavaIoDataOutputStream:zOut];
  }
  else {
    [((OrgMinimaObjectsBaseMiniByte *) nil_chk(JreLoadStatic(OrgMinimaObjectsBaseMiniByte, FALSE))) writeDataStreamWithJavaIoDataOutputStream:zOut];
  }
  if (mRemainder_) {
    [((OrgMinimaObjectsBaseMiniByte *) nil_chk(JreLoadStatic(OrgMinimaObjectsBaseMiniByte, TRUE))) writeDataStreamWithJavaIoDataOutputStream:zOut];
  }
  else {
    [((OrgMinimaObjectsBaseMiniByte *) nil_chk(JreLoadStatic(OrgMinimaObjectsBaseMiniByte, FALSE))) writeDataStreamWithJavaIoDataOutputStream:zOut];
  }
}

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  JreStrongAssign(&mCoinID_, OrgMinimaObjectsBaseMiniData_ReadFromStreamWithJavaIoDataInputStream_(zIn));
  JreStrongAssign(&mAddress_, OrgMinimaObjectsBaseMiniData_ReadFromStreamWithJavaIoDataInputStream_(zIn));
  JreStrongAssign(&mAmount_, OrgMinimaObjectsBaseMiniNumber_ReadFromStreamWithJavaIoDataInputStream_(zIn));
  JreStrongAssign(&mTokenID_, OrgMinimaObjectsBaseMiniData_ReadFromStreamWithJavaIoDataInputStream_(zIn));
  mFloating_ = [((OrgMinimaObjectsBaseMiniByte *) nil_chk(OrgMinimaObjectsBaseMiniByte_ReadFromStreamWithJavaIoDataInputStream_(zIn))) isTrue];
  mRemainder_ = [((OrgMinimaObjectsBaseMiniByte *) nil_chk(OrgMinimaObjectsBaseMiniByte_ReadFromStreamWithJavaIoDataInputStream_(zIn))) isTrue];
}

+ (OrgMinimaObjectsCoin *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  return OrgMinimaObjectsCoin_ReadFromStreamWithJavaIoDataInputStream_(zIn);
}

- (void)dealloc {
  RELEASE_(mCoinID_);
  RELEASE_(mAddress_);
  RELEASE_(mAmount_);
  RELEASE_(mTokenID_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaUtilsJsonJSONObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, 12, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, 12, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsCoin;", 0x9, 15, 14, 12, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgMinimaObjectsBaseMiniData:withOrgMinimaObjectsBaseMiniData:withOrgMinimaObjectsBaseMiniNumber:withOrgMinimaObjectsBaseMiniData:);
  methods[1].selector = @selector(initWithOrgMinimaObjectsBaseMiniData:withOrgMinimaObjectsBaseMiniData:withOrgMinimaObjectsBaseMiniNumber:withOrgMinimaObjectsBaseMiniData:withBoolean:withBoolean:);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(setFloatingWithBoolean:);
  methods[4].selector = @selector(isFloating);
  methods[5].selector = @selector(setRemainderWithBoolean:);
  methods[6].selector = @selector(isRemainder);
  methods[7].selector = @selector(resetCoinIDWithOrgMinimaObjectsBaseMiniData:);
  methods[8].selector = @selector(resetAmountWithOrgMinimaObjectsBaseMiniNumber:);
  methods[9].selector = @selector(getCoinID);
  methods[10].selector = @selector(getAddress);
  methods[11].selector = @selector(getAmount);
  methods[12].selector = @selector(getTokenID);
  methods[13].selector = @selector(description);
  methods[14].selector = @selector(toJSON);
  methods[15].selector = @selector(writeDataStreamWithJavaIoDataOutputStream:);
  methods[16].selector = @selector(readDataStreamWithJavaIoDataInputStream:);
  methods[17].selector = @selector(ReadFromStreamWithJavaIoDataInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MINIMA_TOKENID", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "COINID_OUTPUT", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "TOKENID_CREATE", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "mCoinID_", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mAddress_", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mAmount_", "LOrgMinimaObjectsBaseMiniNumber;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mTokenID_", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mFloating_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mRemainder_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaObjectsBaseMiniData;LOrgMinimaObjectsBaseMiniData;LOrgMinimaObjectsBaseMiniNumber;LOrgMinimaObjectsBaseMiniData;", "LOrgMinimaObjectsBaseMiniData;LOrgMinimaObjectsBaseMiniData;LOrgMinimaObjectsBaseMiniNumber;LOrgMinimaObjectsBaseMiniData;ZZ", "setFloating", "Z", "setRemainder", "resetCoinID", "LOrgMinimaObjectsBaseMiniData;", "resetAmount", "LOrgMinimaObjectsBaseMiniNumber;", "toString", "writeDataStream", "LJavaIoDataOutputStream;", "LJavaIoIOException;", "readDataStream", "LJavaIoDataInputStream;", "ReadFromStream", &OrgMinimaObjectsCoin_MINIMA_TOKENID, &OrgMinimaObjectsCoin_COINID_OUTPUT, &OrgMinimaObjectsCoin_TOKENID_CREATE };
  static const J2ObjcClassInfo _OrgMinimaObjectsCoin = { "Coin", "org.minima.objects", ptrTable, methods, fields, 7, 0x1, 18, 9, -1, -1, -1, -1, -1 };
  return &_OrgMinimaObjectsCoin;
}

+ (void)initialize {
  if (self == [OrgMinimaObjectsCoin class]) {
    JreStrongAssignAndConsume(&OrgMinimaObjectsCoin_MINIMA_TOKENID, new_OrgMinimaObjectsBaseMiniData_initWithNSString_(@"0x00"));
    JreStrongAssignAndConsume(&OrgMinimaObjectsCoin_COINID_OUTPUT, new_OrgMinimaObjectsBaseMiniData_initWithNSString_(@"0x00"));
    JreStrongAssignAndConsume(&OrgMinimaObjectsCoin_TOKENID_CREATE, new_OrgMinimaObjectsBaseMiniData_initWithNSString_(@"0xFF"));
    J2OBJC_SET_INITIALIZED(OrgMinimaObjectsCoin)
  }
}

@end

void OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsCoin *self, OrgMinimaObjectsBaseMiniData *zCoinID, OrgMinimaObjectsBaseMiniData *zAddress, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniData *zTokenID) {
  OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_withBoolean_withBoolean_(self, zCoinID, zAddress, zAmount, zTokenID, false, false);
}

OrgMinimaObjectsCoin *new_OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zCoinID, OrgMinimaObjectsBaseMiniData *zAddress, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniData *zTokenID) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsCoin, initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_, zCoinID, zAddress, zAmount, zTokenID)
}

OrgMinimaObjectsCoin *create_OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zCoinID, OrgMinimaObjectsBaseMiniData *zAddress, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniData *zTokenID) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsCoin, initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_, zCoinID, zAddress, zAmount, zTokenID)
}

void OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_withBoolean_withBoolean_(OrgMinimaObjectsCoin *self, OrgMinimaObjectsBaseMiniData *zCoinID, OrgMinimaObjectsBaseMiniData *zAddress, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniData *zTokenID, jboolean zFloating, jboolean zRemainder) {
  NSObject_init(self);
  self->mFloating_ = false;
  self->mRemainder_ = false;
  JreStrongAssign(&self->mCoinID_, zCoinID);
  JreStrongAssign(&self->mAddress_, zAddress);
  JreStrongAssign(&self->mAmount_, zAmount);
  JreStrongAssign(&self->mTokenID_, zTokenID);
  self->mFloating_ = zFloating;
  self->mRemainder_ = zRemainder;
}

OrgMinimaObjectsCoin *new_OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_withBoolean_withBoolean_(OrgMinimaObjectsBaseMiniData *zCoinID, OrgMinimaObjectsBaseMiniData *zAddress, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniData *zTokenID, jboolean zFloating, jboolean zRemainder) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsCoin, initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_withBoolean_withBoolean_, zCoinID, zAddress, zAmount, zTokenID, zFloating, zRemainder)
}

OrgMinimaObjectsCoin *create_OrgMinimaObjectsCoin_initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_withBoolean_withBoolean_(OrgMinimaObjectsBaseMiniData *zCoinID, OrgMinimaObjectsBaseMiniData *zAddress, OrgMinimaObjectsBaseMiniNumber *zAmount, OrgMinimaObjectsBaseMiniData *zTokenID, jboolean zFloating, jboolean zRemainder) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsCoin, initWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniNumber_withOrgMinimaObjectsBaseMiniData_withBoolean_withBoolean_, zCoinID, zAddress, zAmount, zTokenID, zFloating, zRemainder)
}

void OrgMinimaObjectsCoin_init(OrgMinimaObjectsCoin *self) {
  NSObject_init(self);
  self->mFloating_ = false;
  self->mRemainder_ = false;
}

OrgMinimaObjectsCoin *new_OrgMinimaObjectsCoin_init() {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsCoin, init)
}

OrgMinimaObjectsCoin *create_OrgMinimaObjectsCoin_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsCoin, init)
}

OrgMinimaObjectsCoin *OrgMinimaObjectsCoin_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn) {
  OrgMinimaObjectsCoin_initialize();
  OrgMinimaObjectsCoin *coin = create_OrgMinimaObjectsCoin_init();
  [coin readDataStreamWithJavaIoDataInputStream:zIn];
  return coin;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaObjectsCoin)
