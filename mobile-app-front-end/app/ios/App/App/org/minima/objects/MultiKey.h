//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/MultiKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaObjectsMultiKey")
#ifdef RESTRICT_OrgMinimaObjectsMultiKey
#define INCLUDE_ALL_OrgMinimaObjectsMultiKey 0
#else
#define INCLUDE_ALL_OrgMinimaObjectsMultiKey 1
#endif
#undef RESTRICT_OrgMinimaObjectsMultiKey

#if !defined (OrgMinimaObjectsMultiKey_) && (INCLUDE_ALL_OrgMinimaObjectsMultiKey || defined(INCLUDE_OrgMinimaObjectsMultiKey))
#define OrgMinimaObjectsMultiKey_

#define RESTRICT_OrgMinimaUtilsStreamable 1
#define INCLUDE_OrgMinimaUtilsStreamable 1
#include "org/minima/utils/Streamable.h"

@class IOSObjectArray;
@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;
@class OrgMinimaObjectsBaseMiniData;
@class OrgMinimaUtilsJsonJSONObject;

@interface OrgMinimaObjectsMultiKey : NSObject < OrgMinimaUtilsStreamable > {
 @public
  IOSObjectArray *mLeafKeys_;
  OrgMinimaObjectsBaseMiniData *mPrivateSeed_;
  OrgMinimaObjectsBaseMiniData *mPublicKey_;
  jint mBitLength_;
  jint mMAX_;
  jint mUses_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)zBitLength;

- (instancetype)initWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zPrivateSeed;

- (jint)getBitLength;

- (OrgMinimaObjectsBaseMiniData *)getPrivateSeed;

- (OrgMinimaObjectsBaseMiniData *)getPublicKey;

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

- (OrgMinimaObjectsBaseMiniData *)signWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zData;

- (OrgMinimaUtilsJsonJSONObject *)toJSON;

- (NSString *)description;

- (jboolean)verifyWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zData
                  withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zSignature;

+ (jboolean)verifyWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zPubKey
                  withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zData
                  withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zSignature;

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaObjectsMultiKey)

J2OBJC_FIELD_SETTER(OrgMinimaObjectsMultiKey, mLeafKeys_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsMultiKey, mPrivateSeed_, OrgMinimaObjectsBaseMiniData *)
J2OBJC_FIELD_SETTER(OrgMinimaObjectsMultiKey, mPublicKey_, OrgMinimaObjectsBaseMiniData *)

FOUNDATION_EXPORT void OrgMinimaObjectsMultiKey_initWithInt_(OrgMinimaObjectsMultiKey *self, jint zBitLength);

FOUNDATION_EXPORT OrgMinimaObjectsMultiKey *new_OrgMinimaObjectsMultiKey_initWithInt_(jint zBitLength) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsMultiKey *create_OrgMinimaObjectsMultiKey_initWithInt_(jint zBitLength);

FOUNDATION_EXPORT void OrgMinimaObjectsMultiKey_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsMultiKey *self, OrgMinimaObjectsBaseMiniData *zPrivateSeed);

FOUNDATION_EXPORT OrgMinimaObjectsMultiKey *new_OrgMinimaObjectsMultiKey_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zPrivateSeed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsMultiKey *create_OrgMinimaObjectsMultiKey_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zPrivateSeed);

FOUNDATION_EXPORT void OrgMinimaObjectsMultiKey_init(OrgMinimaObjectsMultiKey *self);

FOUNDATION_EXPORT OrgMinimaObjectsMultiKey *new_OrgMinimaObjectsMultiKey_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsMultiKey *create_OrgMinimaObjectsMultiKey_init(void);

FOUNDATION_EXPORT jboolean OrgMinimaObjectsMultiKey_verifyWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zPubKey, OrgMinimaObjectsBaseMiniData *zData, OrgMinimaObjectsBaseMiniData *zSignature);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaObjectsMultiKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaObjectsMultiKey")
