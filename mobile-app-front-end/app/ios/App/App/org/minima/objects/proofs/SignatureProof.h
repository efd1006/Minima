//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/proofs/SignatureProof.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaObjectsProofsSignatureProof")
#ifdef RESTRICT_OrgMinimaObjectsProofsSignatureProof
#define INCLUDE_ALL_OrgMinimaObjectsProofsSignatureProof 0
#else
#define INCLUDE_ALL_OrgMinimaObjectsProofsSignatureProof 1
#endif
#undef RESTRICT_OrgMinimaObjectsProofsSignatureProof

#if !defined (OrgMinimaObjectsProofsSignatureProof_) && (INCLUDE_ALL_OrgMinimaObjectsProofsSignatureProof || defined(INCLUDE_OrgMinimaObjectsProofsSignatureProof))
#define OrgMinimaObjectsProofsSignatureProof_

#define RESTRICT_OrgMinimaObjectsProofsProof 1
#define INCLUDE_OrgMinimaObjectsProofsProof 1
#include "org/minima/objects/proofs/Proof.h"

@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;
@class OrgMinimaObjectsBaseMiniData;
@class OrgMinimaObjectsBaseMiniHash;
@class OrgMinimaUtilsJsonJSONObject;

@interface OrgMinimaObjectsProofsSignatureProof : OrgMinimaObjectsProofsProof {
 @public
  OrgMinimaObjectsBaseMiniData *mSignature_;
}

#pragma mark Public

- (instancetype)initWithOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)mPublicKey
                    withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zSignature;

- (OrgMinimaObjectsBaseMiniData *)getSignature;

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

+ (OrgMinimaObjectsProofsSignatureProof *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

- (OrgMinimaUtilsJsonJSONObject *)toJSON;

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaObjectsProofsSignatureProof)

J2OBJC_FIELD_SETTER(OrgMinimaObjectsProofsSignatureProof, mSignature_, OrgMinimaObjectsBaseMiniData *)

FOUNDATION_EXPORT void OrgMinimaObjectsProofsSignatureProof_initWithOrgMinimaObjectsBaseMiniHash_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsProofsSignatureProof *self, OrgMinimaObjectsBaseMiniHash *mPublicKey, OrgMinimaObjectsBaseMiniData *zSignature);

FOUNDATION_EXPORT OrgMinimaObjectsProofsSignatureProof *new_OrgMinimaObjectsProofsSignatureProof_initWithOrgMinimaObjectsBaseMiniHash_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniHash *mPublicKey, OrgMinimaObjectsBaseMiniData *zSignature) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaObjectsProofsSignatureProof *create_OrgMinimaObjectsProofsSignatureProof_initWithOrgMinimaObjectsBaseMiniHash_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniHash *mPublicKey, OrgMinimaObjectsBaseMiniData *zSignature);

FOUNDATION_EXPORT OrgMinimaObjectsProofsSignatureProof *OrgMinimaObjectsProofsSignatureProof_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaObjectsProofsSignatureProof)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaObjectsProofsSignatureProof")
