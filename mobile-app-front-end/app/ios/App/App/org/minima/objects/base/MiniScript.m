//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/base/MiniScript.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/DataInputStream.h"
#include "java/io/IOException.h"
#include "java/nio/charset/Charset.h"
#include "org/minima/kissvm/Contract.h"
#include "org/minima/objects/base/MiniData.h"
#include "org/minima/objects/base/MiniScript.h"

@interface OrgMinimaObjectsBaseMiniScript ()

- (instancetype)init;

+ (IOSByteArray *)initMiniScriptWithNSString:(NSString *)zString
                                 withBoolean:(jboolean)zContractClean OBJC_METHOD_FAMILY_NONE;

@end

__attribute__((unused)) static void OrgMinimaObjectsBaseMiniScript_init(OrgMinimaObjectsBaseMiniScript *self);

__attribute__((unused)) static OrgMinimaObjectsBaseMiniScript *new_OrgMinimaObjectsBaseMiniScript_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMinimaObjectsBaseMiniScript *create_OrgMinimaObjectsBaseMiniScript_init(void);

__attribute__((unused)) static IOSByteArray *OrgMinimaObjectsBaseMiniScript_initMiniScriptWithNSString_withBoolean_(NSString *zString, jboolean zContractClean);

@implementation OrgMinimaObjectsBaseMiniScript

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaObjectsBaseMiniScript_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)zString {
  OrgMinimaObjectsBaseMiniScript_initWithNSString_(self, zString);
  return self;
}

- (instancetype)initWithNSString:(NSString *)zString
                     withBoolean:(jboolean)zContractClean {
  OrgMinimaObjectsBaseMiniScript_initWithNSString_withBoolean_(self, zString, zContractClean);
  return self;
}

+ (IOSByteArray *)initMiniScriptWithNSString:(NSString *)zString
                                 withBoolean:(jboolean)zContractClean {
  return OrgMinimaObjectsBaseMiniScript_initMiniScriptWithNSString_withBoolean_(zString, zContractClean);
}

- (NSString *)description {
  return [NSString java_stringWithBytes:[self getData] charset:JavaNioCharsetCharset_forNameWithNSString_(@"US-ASCII")];
}

- (NSString *)to0xString {
  return nil;
}

+ (OrgMinimaObjectsBaseMiniScript *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  return OrgMinimaObjectsBaseMiniScript_ReadFromStreamWithJavaIoDataInputStream_(zIn);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniScript;", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withBoolean:);
  methods[3].selector = @selector(initMiniScriptWithNSString:withBoolean:);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(to0xString);
  methods[6].selector = @selector(ReadFromStreamWithJavaIoDataInputStream:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LNSString;Z", "initMiniScript", "toString", "ReadFromStream", "LJavaIoDataInputStream;" };
  static const J2ObjcClassInfo _OrgMinimaObjectsBaseMiniScript = { "MiniScript", "org.minima.objects.base", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaObjectsBaseMiniScript;
}

@end

void OrgMinimaObjectsBaseMiniScript_init(OrgMinimaObjectsBaseMiniScript *self) {
  OrgMinimaObjectsBaseMiniData_init(self);
}

OrgMinimaObjectsBaseMiniScript *new_OrgMinimaObjectsBaseMiniScript_init() {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMiniScript, init)
}

OrgMinimaObjectsBaseMiniScript *create_OrgMinimaObjectsBaseMiniScript_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMiniScript, init)
}

void OrgMinimaObjectsBaseMiniScript_initWithNSString_(OrgMinimaObjectsBaseMiniScript *self, NSString *zString) {
  OrgMinimaObjectsBaseMiniScript_initWithNSString_withBoolean_(self, zString, true);
}

OrgMinimaObjectsBaseMiniScript *new_OrgMinimaObjectsBaseMiniScript_initWithNSString_(NSString *zString) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMiniScript, initWithNSString_, zString)
}

OrgMinimaObjectsBaseMiniScript *create_OrgMinimaObjectsBaseMiniScript_initWithNSString_(NSString *zString) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMiniScript, initWithNSString_, zString)
}

void OrgMinimaObjectsBaseMiniScript_initWithNSString_withBoolean_(OrgMinimaObjectsBaseMiniScript *self, NSString *zString, jboolean zContractClean) {
  OrgMinimaObjectsBaseMiniData_initWithByteArray_(self, OrgMinimaObjectsBaseMiniScript_initMiniScriptWithNSString_withBoolean_(zString, zContractClean));
}

OrgMinimaObjectsBaseMiniScript *new_OrgMinimaObjectsBaseMiniScript_initWithNSString_withBoolean_(NSString *zString, jboolean zContractClean) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMiniScript, initWithNSString_withBoolean_, zString, zContractClean)
}

OrgMinimaObjectsBaseMiniScript *create_OrgMinimaObjectsBaseMiniScript_initWithNSString_withBoolean_(NSString *zString, jboolean zContractClean) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMiniScript, initWithNSString_withBoolean_, zString, zContractClean)
}

IOSByteArray *OrgMinimaObjectsBaseMiniScript_initMiniScriptWithNSString_withBoolean_(NSString *zString, jboolean zContractClean) {
  OrgMinimaObjectsBaseMiniScript_initialize();
  if (zContractClean) {
    return [((NSString *) nil_chk(OrgMinimaKissvmContract_cleanScriptWithNSString_(zString))) java_getBytesWithCharset:JavaNioCharsetCharset_forNameWithNSString_(@"US-ASCII")];
  }
  return [((NSString *) nil_chk(zString)) java_getBytesWithCharset:JavaNioCharsetCharset_forNameWithNSString_(@"US-ASCII")];
}

OrgMinimaObjectsBaseMiniScript *OrgMinimaObjectsBaseMiniScript_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn) {
  OrgMinimaObjectsBaseMiniScript_initialize();
  OrgMinimaObjectsBaseMiniScript *data = new_OrgMinimaObjectsBaseMiniScript_init();
  @try {
    [data readDataStreamWithJavaIoDataInputStream:zIn];
  }
  @catch (JavaIoIOException *e) {
    [e printStackTrace];
    return nil;
  }
  return data;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaObjectsBaseMiniScript)
