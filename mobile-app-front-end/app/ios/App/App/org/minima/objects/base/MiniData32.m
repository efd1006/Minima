//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/base/MiniData32.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/util/Random.h"
#include "org/minima/objects/base/MiniData.h"
#include "org/minima/objects/base/MiniData32.h"
#include "org/minima/utils/Crypto.h"
#include "org/minima/utils/Maths.h"

inline jint OrgMinimaObjectsBaseMiniData32_get_MAX_LENGTH(void);
#define OrgMinimaObjectsBaseMiniData32_MAX_LENGTH 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaObjectsBaseMiniData32, MAX_LENGTH, jint)

J2OBJC_INITIALIZED_DEFN(OrgMinimaObjectsBaseMiniData32)

OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsBaseMiniData32_ZERO32;

@implementation OrgMinimaObjectsBaseMiniData32

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaObjectsBaseMiniData32_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithByteArray:(IOSByteArray *)zData {
  OrgMinimaObjectsBaseMiniData32_initWithByteArray_(self, zData);
  return self;
}

- (instancetype)initWithNSString:(NSString *)zHex {
  OrgMinimaObjectsBaseMiniData32_initWithNSString_(self, zHex);
  return self;
}

+ (NSString *)ensureSizeWithNSString:(NSString *)zHEX {
  return OrgMinimaObjectsBaseMiniData32_ensureSizeWithNSString_(zHEX);
}

+ (OrgMinimaObjectsBaseMiniData32 *)getRandomData {
  return OrgMinimaObjectsBaseMiniData32_getRandomData();
}

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut {
  [((JavaIoDataOutputStream *) nil_chk(zOut)) writeWithByteArray:mData_];
}

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  JreStrongAssignAndConsume(&mData_, [IOSByteArray newArrayWithLength:32]);
  [((JavaIoDataInputStream *) nil_chk(zIn)) readFullyWithByteArray:mData_];
  [self setDataValue];
}

+ (OrgMinimaObjectsBaseMiniData32 *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  return OrgMinimaObjectsBaseMiniData32_ReadFromStreamWithJavaIoDataInputStream_(zIn);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs {
  OrgMinimaObjectsBaseMiniData32_mainWithNSStringArray_(zArgs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData32;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 5, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData32;", 0x9, 8, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithByteArray:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(ensureSizeWithNSString:);
  methods[4].selector = @selector(getRandomData);
  methods[5].selector = @selector(writeDataStreamWithJavaIoDataOutputStream:);
  methods[6].selector = @selector(readDataStreamWithJavaIoDataInputStream:);
  methods[7].selector = @selector(ReadFromStreamWithJavaIoDataInputStream:);
  methods[8].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO32", "LOrgMinimaObjectsBaseMiniData32;", .constantValue.asLong = 0, 0x9, -1, 11, -1, -1 },
    { "MAX_LENGTH", "I", .constantValue.asInt = OrgMinimaObjectsBaseMiniData32_MAX_LENGTH, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "LNSString;", "ensureSize", "writeDataStream", "LJavaIoDataOutputStream;", "LJavaIoIOException;", "readDataStream", "LJavaIoDataInputStream;", "ReadFromStream", "main", "[LNSString;", &OrgMinimaObjectsBaseMiniData32_ZERO32 };
  static const J2ObjcClassInfo _OrgMinimaObjectsBaseMiniData32 = { "MiniData32", "org.minima.objects.base", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, -1, -1, -1, -1 };
  return &_OrgMinimaObjectsBaseMiniData32;
}

+ (void)initialize {
  if (self == [OrgMinimaObjectsBaseMiniData32 class]) {
    JreStrongAssignAndConsume(&OrgMinimaObjectsBaseMiniData32_ZERO32, new_OrgMinimaObjectsBaseMiniData32_initWithNSString_(@"0x00"));
    J2OBJC_SET_INITIALIZED(OrgMinimaObjectsBaseMiniData32)
  }
}

@end

void OrgMinimaObjectsBaseMiniData32_init(OrgMinimaObjectsBaseMiniData32 *self) {
  OrgMinimaObjectsBaseMiniData32_initWithNSString_(self, @"0x00");
}

OrgMinimaObjectsBaseMiniData32 *new_OrgMinimaObjectsBaseMiniData32_init() {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMiniData32, init)
}

OrgMinimaObjectsBaseMiniData32 *create_OrgMinimaObjectsBaseMiniData32_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMiniData32, init)
}

void OrgMinimaObjectsBaseMiniData32_initWithByteArray_(OrgMinimaObjectsBaseMiniData32 *self, IOSByteArray *zData) {
  OrgMinimaObjectsBaseMiniData32_initWithNSString_(self, OrgMinimaUtilsMaths_getDataAsStringWithByteArray_(zData));
}

OrgMinimaObjectsBaseMiniData32 *new_OrgMinimaObjectsBaseMiniData32_initWithByteArray_(IOSByteArray *zData) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMiniData32, initWithByteArray_, zData)
}

OrgMinimaObjectsBaseMiniData32 *create_OrgMinimaObjectsBaseMiniData32_initWithByteArray_(IOSByteArray *zData) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMiniData32, initWithByteArray_, zData)
}

void OrgMinimaObjectsBaseMiniData32_initWithNSString_(OrgMinimaObjectsBaseMiniData32 *self, NSString *zHex) {
  OrgMinimaObjectsBaseMiniData_initWithNSString_(self, OrgMinimaObjectsBaseMiniData32_ensureSizeWithNSString_(zHex));
}

OrgMinimaObjectsBaseMiniData32 *new_OrgMinimaObjectsBaseMiniData32_initWithNSString_(NSString *zHex) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMiniData32, initWithNSString_, zHex)
}

OrgMinimaObjectsBaseMiniData32 *create_OrgMinimaObjectsBaseMiniData32_initWithNSString_(NSString *zHex) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMiniData32, initWithNSString_, zHex)
}

NSString *OrgMinimaObjectsBaseMiniData32_ensureSizeWithNSString_(NSString *zHEX) {
  OrgMinimaObjectsBaseMiniData32_initialize();
  NSString *hex = zHEX;
  if ([((NSString *) nil_chk(hex)) java_hasPrefix:@"0x"]) {
    hex = [((NSString *) nil_chk(zHEX)) java_substring:2];
  }
  jint len = [((NSString *) nil_chk(hex)) java_length];
  if (len % 2 != 0) {
    hex = JreStrcat("C$", '0', hex);
    len = [hex java_length];
  }
  jint rlen = len / 2;
  if (rlen < OrgMinimaObjectsBaseMiniData32_MAX_LENGTH) {
    jint diff = OrgMinimaObjectsBaseMiniData32_MAX_LENGTH - rlen;
    for (jint i = 0; i < diff; i++) {
      hex = JreStrcat("$$", @"00", hex);
    }
  }
  else if (len > OrgMinimaObjectsBaseMiniData32_MAX_LENGTH) {
    hex = [hex java_substring:len - (OrgMinimaObjectsBaseMiniData32_MAX_LENGTH * 2) endIndex:len];
  }
  return JreStrcat("$$", @"0x", hex);
}

OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsBaseMiniData32_getRandomData() {
  OrgMinimaObjectsBaseMiniData32_initialize();
  JavaUtilRandom *rand = create_JavaUtilRandom_init();
  IOSByteArray *data = [IOSByteArray arrayWithLength:32];
  [rand nextBytesWithByteArray:data];
  return create_OrgMinimaObjectsBaseMiniData32_initWithByteArray_(data);
}

OrgMinimaObjectsBaseMiniData32 *OrgMinimaObjectsBaseMiniData32_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn) {
  OrgMinimaObjectsBaseMiniData32_initialize();
  OrgMinimaObjectsBaseMiniData32 *data = create_OrgMinimaObjectsBaseMiniData32_init();
  @try {
    [data readDataStreamWithJavaIoDataInputStream:zIn];
  }
  @catch (JavaIoIOException *e) {
    [e printStackTrace];
    return nil;
  }
  return data;
}

void OrgMinimaObjectsBaseMiniData32_mainWithNSStringArray_(IOSObjectArray *zArgs) {
  OrgMinimaObjectsBaseMiniData32_initialize();
  OrgMinimaObjectsBaseMiniData32 *hash32 = create_OrgMinimaObjectsBaseMiniData32_initWithNSString_(@"0xeeccffffeeccff");
  OrgMinimaObjectsBaseMiniData32 *hhash32 = [((OrgMinimaUtilsCrypto *) nil_chk(OrgMinimaUtilsCrypto_getInstance())) hashObjectWithOrgMinimaUtilsStreamable:hash32];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@CIC@", @"Hash32 : ", hash32, ' ', [hash32 getLength], ' ', hhash32)];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:[hash32 getDataVaue]];
  IOSByteArray *hashdata = [((OrgMinimaUtilsCrypto *) nil_chk(OrgMinimaUtilsCrypto_getInstance())) hashDataWithByteArray:[hash32 getData]];
  hhash32 = create_OrgMinimaObjectsBaseMiniData32_initWithByteArray_(hashdata);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@CIC@", @"Hash32 : ", hash32, ' ', [hash32 getLength], ' ', hhash32)];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:[hash32 getDataVaue]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaObjectsBaseMiniData32)
