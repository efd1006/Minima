//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/objects/base/MMRSumNumber.java
//

#include "J2ObjC_source.h"
#include "java/math/BigDecimal.h"
#include "java/math/MathContext.h"
#include "java/math/RoundingMode.h"
#include "org/minima/objects/base/MMRSumNumber.h"
#include "org/minima/objects/base/MiniNumber.h"

@interface OrgMinimaObjectsBaseMMRSumNumber () {
 @public
  JavaMathBigDecimal *mNumber_;
}

- (instancetype)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)zNumber;

@end

J2OBJC_FIELD_SETTER(OrgMinimaObjectsBaseMMRSumNumber, mNumber_, JavaMathBigDecimal *)

__attribute__((unused)) static void OrgMinimaObjectsBaseMMRSumNumber_initWithJavaMathBigDecimal_(OrgMinimaObjectsBaseMMRSumNumber *self, JavaMathBigDecimal *zNumber);

__attribute__((unused)) static OrgMinimaObjectsBaseMMRSumNumber *new_OrgMinimaObjectsBaseMMRSumNumber_initWithJavaMathBigDecimal_(JavaMathBigDecimal *zNumber) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMinimaObjectsBaseMMRSumNumber *create_OrgMinimaObjectsBaseMMRSumNumber_initWithJavaMathBigDecimal_(JavaMathBigDecimal *zNumber);

J2OBJC_INITIALIZED_DEFN(OrgMinimaObjectsBaseMMRSumNumber)

JavaMathMathContext *OrgMinimaObjectsBaseMMRSumNumber_mMathContext;

@implementation OrgMinimaObjectsBaseMMRSumNumber

- (instancetype)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)zNumber {
  OrgMinimaObjectsBaseMMRSumNumber_initWithJavaMathBigDecimal_(self, zNumber);
  return self;
}

- (instancetype)initWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zNumber {
  OrgMinimaObjectsBaseMMRSumNumber_initWithOrgMinimaObjectsBaseMiniNumber_(self, zNumber);
  return self;
}

- (JavaMathBigDecimal *)getNumber {
  return mNumber_;
}

- (OrgMinimaObjectsBaseMMRSumNumber *)addWithOrgMinimaObjectsBaseMMRSumNumber:(OrgMinimaObjectsBaseMMRSumNumber *)zNumber {
  return create_OrgMinimaObjectsBaseMMRSumNumber_initWithJavaMathBigDecimal_([((JavaMathBigDecimal *) nil_chk(mNumber_)) addWithJavaMathBigDecimal:[((OrgMinimaObjectsBaseMMRSumNumber *) nil_chk(zNumber)) getNumber] withJavaMathMathContext:OrgMinimaObjectsBaseMMRSumNumber_mMathContext]);
}

- (jboolean)isEqualWithOrgMinimaObjectsBaseMMRSumNumber:(OrgMinimaObjectsBaseMMRSumNumber *)zNumber {
  return [((JavaMathBigDecimal *) nil_chk([((OrgMinimaObjectsBaseMMRSumNumber *) nil_chk(zNumber)) getNumber])) compareToWithId:mNumber_] == 0;
}

- (void)dealloc {
  RELEASE_(mNumber_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMMRSumNumber;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigDecimal:);
  methods[1].selector = @selector(initWithOrgMinimaObjectsBaseMiniNumber:);
  methods[2].selector = @selector(getNumber);
  methods[3].selector = @selector(addWithOrgMinimaObjectsBaseMMRSumNumber:);
  methods[4].selector = @selector(isEqualWithOrgMinimaObjectsBaseMMRSumNumber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mMathContext", "LJavaMathMathContext;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "mNumber_", "LJavaMathBigDecimal;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigDecimal;", "LOrgMinimaObjectsBaseMiniNumber;", "add", "LOrgMinimaObjectsBaseMMRSumNumber;", "isEqual", &OrgMinimaObjectsBaseMMRSumNumber_mMathContext };
  static const J2ObjcClassInfo _OrgMinimaObjectsBaseMMRSumNumber = { "MMRSumNumber", "org.minima.objects.base", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_OrgMinimaObjectsBaseMMRSumNumber;
}

+ (void)initialize {
  if (self == [OrgMinimaObjectsBaseMMRSumNumber class]) {
    JreStrongAssignAndConsume(&OrgMinimaObjectsBaseMMRSumNumber_mMathContext, new_JavaMathMathContext_initWithInt_withJavaMathRoundingMode_(64, JreLoadEnum(JavaMathRoundingMode, DOWN)));
    J2OBJC_SET_INITIALIZED(OrgMinimaObjectsBaseMMRSumNumber)
  }
}

@end

void OrgMinimaObjectsBaseMMRSumNumber_initWithJavaMathBigDecimal_(OrgMinimaObjectsBaseMMRSumNumber *self, JavaMathBigDecimal *zNumber) {
  NSObject_init(self);
  JreStrongAssign(&self->mNumber_, zNumber);
}

OrgMinimaObjectsBaseMMRSumNumber *new_OrgMinimaObjectsBaseMMRSumNumber_initWithJavaMathBigDecimal_(JavaMathBigDecimal *zNumber) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMMRSumNumber, initWithJavaMathBigDecimal_, zNumber)
}

OrgMinimaObjectsBaseMMRSumNumber *create_OrgMinimaObjectsBaseMMRSumNumber_initWithJavaMathBigDecimal_(JavaMathBigDecimal *zNumber) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMMRSumNumber, initWithJavaMathBigDecimal_, zNumber)
}

void OrgMinimaObjectsBaseMMRSumNumber_initWithOrgMinimaObjectsBaseMiniNumber_(OrgMinimaObjectsBaseMMRSumNumber *self, OrgMinimaObjectsBaseMiniNumber *zNumber) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mNumber_, new_JavaMathBigDecimal_initWithNSString_withJavaMathMathContext_([((OrgMinimaObjectsBaseMiniNumber *) nil_chk(zNumber)) description], OrgMinimaObjectsBaseMMRSumNumber_mMathContext));
}

OrgMinimaObjectsBaseMMRSumNumber *new_OrgMinimaObjectsBaseMMRSumNumber_initWithOrgMinimaObjectsBaseMiniNumber_(OrgMinimaObjectsBaseMiniNumber *zNumber) {
  J2OBJC_NEW_IMPL(OrgMinimaObjectsBaseMMRSumNumber, initWithOrgMinimaObjectsBaseMiniNumber_, zNumber)
}

OrgMinimaObjectsBaseMMRSumNumber *create_OrgMinimaObjectsBaseMMRSumNumber_initWithOrgMinimaObjectsBaseMiniNumber_(OrgMinimaObjectsBaseMiniNumber *zNumber) {
  J2OBJC_CREATE_IMPL(OrgMinimaObjectsBaseMMRSumNumber, initWithOrgMinimaObjectsBaseMiniNumber_, zNumber)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaObjectsBaseMMRSumNumber)
