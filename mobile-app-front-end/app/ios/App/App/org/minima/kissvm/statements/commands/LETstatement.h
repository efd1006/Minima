//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/statements/commands/LETstatement.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsLETstatement")
#ifdef RESTRICT_OrgMinimaKissvmStatementsCommandsLETstatement
#define INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsLETstatement 0
#else
#define INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsLETstatement 1
#endif
#undef RESTRICT_OrgMinimaKissvmStatementsCommandsLETstatement

#if !defined (OrgMinimaKissvmStatementsCommandsLETstatement_) && (INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsLETstatement || defined(INCLUDE_OrgMinimaKissvmStatementsCommandsLETstatement))
#define OrgMinimaKissvmStatementsCommandsLETstatement_

#define RESTRICT_OrgMinimaKissvmStatementsStatement 1
#define INCLUDE_OrgMinimaKissvmStatementsStatement 1
#include "org/minima/kissvm/statements/Statement.h"

@class JavaUtilArrayList;
@class OrgMinimaKissvmContract;
@protocol OrgMinimaKissvmExpressionsExpression;

@interface OrgMinimaKissvmStatementsCommandsLETstatement : NSObject < OrgMinimaKissvmStatementsStatement > {
 @public
  jint mLETType_;
  JavaUtilArrayList *mArrayPos_;
  NSString *mName_;
  id<OrgMinimaKissvmExpressionsExpression> mValue_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)zArrayPos
 withOrgMinimaKissvmExpressionsExpression:(id<OrgMinimaKissvmExpressionsExpression>)zExpression;

- (instancetype)initWithNSString:(NSString *)zVariableName
withOrgMinimaKissvmExpressionsExpression:(id<OrgMinimaKissvmExpressionsExpression>)zExpression;

- (void)executeWithOrgMinimaKissvmContract:(OrgMinimaKissvmContract *)zContract;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaKissvmStatementsCommandsLETstatement)

J2OBJC_FIELD_SETTER(OrgMinimaKissvmStatementsCommandsLETstatement, mArrayPos_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgMinimaKissvmStatementsCommandsLETstatement, mName_, NSString *)
J2OBJC_FIELD_SETTER(OrgMinimaKissvmStatementsCommandsLETstatement, mValue_, id<OrgMinimaKissvmExpressionsExpression>)

inline jint OrgMinimaKissvmStatementsCommandsLETstatement_get_LET_VARIABLE(void);
inline jint OrgMinimaKissvmStatementsCommandsLETstatement_set_LET_VARIABLE(jint value);
inline jint *OrgMinimaKissvmStatementsCommandsLETstatement_getRef_LET_VARIABLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgMinimaKissvmStatementsCommandsLETstatement_LET_VARIABLE;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMinimaKissvmStatementsCommandsLETstatement, LET_VARIABLE, jint)

inline jint OrgMinimaKissvmStatementsCommandsLETstatement_get_LET_ARRAY(void);
inline jint OrgMinimaKissvmStatementsCommandsLETstatement_set_LET_ARRAY(jint value);
inline jint *OrgMinimaKissvmStatementsCommandsLETstatement_getRef_LET_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgMinimaKissvmStatementsCommandsLETstatement_LET_ARRAY;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMinimaKissvmStatementsCommandsLETstatement, LET_ARRAY, jint)

FOUNDATION_EXPORT void OrgMinimaKissvmStatementsCommandsLETstatement_initWithNSString_withOrgMinimaKissvmExpressionsExpression_(OrgMinimaKissvmStatementsCommandsLETstatement *self, NSString *zVariableName, id<OrgMinimaKissvmExpressionsExpression> zExpression);

FOUNDATION_EXPORT OrgMinimaKissvmStatementsCommandsLETstatement *new_OrgMinimaKissvmStatementsCommandsLETstatement_initWithNSString_withOrgMinimaKissvmExpressionsExpression_(NSString *zVariableName, id<OrgMinimaKissvmExpressionsExpression> zExpression) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmStatementsCommandsLETstatement *create_OrgMinimaKissvmStatementsCommandsLETstatement_initWithNSString_withOrgMinimaKissvmExpressionsExpression_(NSString *zVariableName, id<OrgMinimaKissvmExpressionsExpression> zExpression);

FOUNDATION_EXPORT void OrgMinimaKissvmStatementsCommandsLETstatement_initWithJavaUtilArrayList_withOrgMinimaKissvmExpressionsExpression_(OrgMinimaKissvmStatementsCommandsLETstatement *self, JavaUtilArrayList *zArrayPos, id<OrgMinimaKissvmExpressionsExpression> zExpression);

FOUNDATION_EXPORT OrgMinimaKissvmStatementsCommandsLETstatement *new_OrgMinimaKissvmStatementsCommandsLETstatement_initWithJavaUtilArrayList_withOrgMinimaKissvmExpressionsExpression_(JavaUtilArrayList *zArrayPos, id<OrgMinimaKissvmExpressionsExpression> zExpression) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmStatementsCommandsLETstatement *create_OrgMinimaKissvmStatementsCommandsLETstatement_initWithJavaUtilArrayList_withOrgMinimaKissvmExpressionsExpression_(JavaUtilArrayList *zArrayPos, id<OrgMinimaKissvmExpressionsExpression> zExpression);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaKissvmStatementsCommandsLETstatement)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsLETstatement")
