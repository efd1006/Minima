//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/expressions/ExpressionParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaKissvmExpressionsExpressionParser")
#ifdef RESTRICT_OrgMinimaKissvmExpressionsExpressionParser
#define INCLUDE_ALL_OrgMinimaKissvmExpressionsExpressionParser 0
#else
#define INCLUDE_ALL_OrgMinimaKissvmExpressionsExpressionParser 1
#endif
#undef RESTRICT_OrgMinimaKissvmExpressionsExpressionParser

#if !defined (OrgMinimaKissvmExpressionsExpressionParser_) && (INCLUDE_ALL_OrgMinimaKissvmExpressionsExpressionParser || defined(INCLUDE_OrgMinimaKissvmExpressionsExpressionParser))
#define OrgMinimaKissvmExpressionsExpressionParser_

@class OrgMinimaKissvmTokensLexicalTokenizer;
@protocol JavaUtilList;
@protocol OrgMinimaKissvmExpressionsExpression;

@interface OrgMinimaKissvmExpressionsExpressionParser : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<OrgMinimaKissvmExpressionsExpression>)getExpressionWithOrgMinimaKissvmTokensLexicalTokenizer:(OrgMinimaKissvmTokensLexicalTokenizer *)zTokens;

+ (id<OrgMinimaKissvmExpressionsExpression>)getExpressionWithJavaUtilList:(id<JavaUtilList>)zTokens;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaKissvmExpressionsExpressionParser)

FOUNDATION_EXPORT void OrgMinimaKissvmExpressionsExpressionParser_init(OrgMinimaKissvmExpressionsExpressionParser *self);

FOUNDATION_EXPORT OrgMinimaKissvmExpressionsExpressionParser *new_OrgMinimaKissvmExpressionsExpressionParser_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmExpressionsExpressionParser *create_OrgMinimaKissvmExpressionsExpressionParser_init(void);

FOUNDATION_EXPORT id<OrgMinimaKissvmExpressionsExpression> OrgMinimaKissvmExpressionsExpressionParser_getExpressionWithJavaUtilList_(id<JavaUtilList> zTokens);

FOUNDATION_EXPORT id<OrgMinimaKissvmExpressionsExpression> OrgMinimaKissvmExpressionsExpressionParser_getExpressionWithOrgMinimaKissvmTokensLexicalTokenizer_(OrgMinimaKissvmTokensLexicalTokenizer *zTokens);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaKissvmExpressionsExpressionParser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaKissvmExpressionsExpressionParser")
