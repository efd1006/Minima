//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/statements/StatementParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaKissvmStatementsStatementParser")
#ifdef RESTRICT_OrgMinimaKissvmStatementsStatementParser
#define INCLUDE_ALL_OrgMinimaKissvmStatementsStatementParser 0
#else
#define INCLUDE_ALL_OrgMinimaKissvmStatementsStatementParser 1
#endif
#undef RESTRICT_OrgMinimaKissvmStatementsStatementParser

#if !defined (OrgMinimaKissvmStatementsStatementParser_) && (INCLUDE_ALL_OrgMinimaKissvmStatementsStatementParser || defined(INCLUDE_OrgMinimaKissvmStatementsStatementParser))
#define OrgMinimaKissvmStatementsStatementParser_

@class OrgMinimaKissvmStatementsStatementBlock;
@protocol JavaUtilList;

@interface OrgMinimaKissvmStatementsStatementParser : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgMinimaKissvmStatementsStatementBlock *)parseTokensWithJavaUtilList:(id<JavaUtilList>)zTokens;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaKissvmStatementsStatementParser)

FOUNDATION_EXPORT void OrgMinimaKissvmStatementsStatementParser_init(OrgMinimaKissvmStatementsStatementParser *self);

FOUNDATION_EXPORT OrgMinimaKissvmStatementsStatementParser *new_OrgMinimaKissvmStatementsStatementParser_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmStatementsStatementParser *create_OrgMinimaKissvmStatementsStatementParser_init(void);

FOUNDATION_EXPORT OrgMinimaKissvmStatementsStatementBlock *OrgMinimaKissvmStatementsStatementParser_parseTokensWithJavaUtilList_(id<JavaUtilList> zTokens);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaKissvmStatementsStatementParser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaKissvmStatementsStatementParser")
