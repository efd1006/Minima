//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/values/BooleanValue.java
//

#include "J2ObjC_source.h"
#include "org/minima/kissvm/values/BooleanValue.h"
#include "org/minima/kissvm/values/NumberValue.h"

J2OBJC_INITIALIZED_DEFN(OrgMinimaKissvmValuesBooleanValue)

OrgMinimaKissvmValuesBooleanValue *OrgMinimaKissvmValuesBooleanValue_FALSE;
OrgMinimaKissvmValuesBooleanValue *OrgMinimaKissvmValuesBooleanValue_TRUE;

@implementation OrgMinimaKissvmValuesBooleanValue

- (instancetype)initWithBoolean:(jboolean)zValue {
  OrgMinimaKissvmValuesBooleanValue_initWithBoolean_(self, zValue);
  return self;
}

- (NSString *)description {
  return ([self isTrue] ? @"TRUE" : @"FALSE");
}

- (jint)getValueType {
  return OrgMinimaKissvmValuesBooleanValue_VALUE_BOOLEAN;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(getValueType);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VALUE_BOOLEAN", "I", .constantValue.asInt = OrgMinimaKissvmValuesBooleanValue_VALUE_BOOLEAN, 0x19, -1, -1, -1, -1 },
    { "FALSE", "LOrgMinimaKissvmValuesBooleanValue;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "TRUE", "LOrgMinimaKissvmValuesBooleanValue;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "toString", &OrgMinimaKissvmValuesBooleanValue_FALSE, &OrgMinimaKissvmValuesBooleanValue_TRUE };
  static const J2ObjcClassInfo _OrgMinimaKissvmValuesBooleanValue = { "BooleanValue", "org.minima.kissvm.values", ptrTable, methods, fields, 7, 0x1, 3, 3, -1, -1, -1, -1, -1 };
  return &_OrgMinimaKissvmValuesBooleanValue;
}

+ (void)initialize {
  if (self == [OrgMinimaKissvmValuesBooleanValue class]) {
    OrgMinimaKissvmValuesBooleanValue_FALSE = new_OrgMinimaKissvmValuesBooleanValue_initWithBoolean_(false);
    OrgMinimaKissvmValuesBooleanValue_TRUE = new_OrgMinimaKissvmValuesBooleanValue_initWithBoolean_(true);
    J2OBJC_SET_INITIALIZED(OrgMinimaKissvmValuesBooleanValue)
  }
}

@end

void OrgMinimaKissvmValuesBooleanValue_initWithBoolean_(OrgMinimaKissvmValuesBooleanValue *self, jboolean zValue) {
  OrgMinimaKissvmValuesNumberValue_initWithInt_(self, zValue ? 1 : 0);
}

OrgMinimaKissvmValuesBooleanValue *new_OrgMinimaKissvmValuesBooleanValue_initWithBoolean_(jboolean zValue) {
  J2OBJC_NEW_IMPL(OrgMinimaKissvmValuesBooleanValue, initWithBoolean_, zValue)
}

OrgMinimaKissvmValuesBooleanValue *create_OrgMinimaKissvmValuesBooleanValue_initWithBoolean_(jboolean zValue) {
  J2OBJC_CREATE_IMPL(OrgMinimaKissvmValuesBooleanValue, initWithBoolean_, zValue)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaKissvmValuesBooleanValue)
