//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/statements/commands/IFstatement.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsIFstatement")
#ifdef RESTRICT_OrgMinimaKissvmStatementsCommandsIFstatement
#define INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsIFstatement 0
#else
#define INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsIFstatement 1
#endif
#undef RESTRICT_OrgMinimaKissvmStatementsCommandsIFstatement

#if !defined (OrgMinimaKissvmStatementsCommandsIFstatement_) && (INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsIFstatement || defined(INCLUDE_OrgMinimaKissvmStatementsCommandsIFstatement))
#define OrgMinimaKissvmStatementsCommandsIFstatement_

#define RESTRICT_OrgMinimaKissvmStatementsStatement 1
#define INCLUDE_OrgMinimaKissvmStatementsStatement 1
#include "org/minima/kissvm/statements/Statement.h"

@class JavaUtilArrayList;
@class OrgMinimaKissvmContract;
@class OrgMinimaKissvmStatementsStatementBlock;
@protocol OrgMinimaKissvmExpressionsExpression;

@interface OrgMinimaKissvmStatementsCommandsIFstatement : NSObject < OrgMinimaKissvmStatementsStatement > {
 @public
  JavaUtilArrayList *mConditions_;
  JavaUtilArrayList *mActions_;
}

#pragma mark Public

- (instancetype)init;

- (void)addConditionWithOrgMinimaKissvmExpressionsExpression:(id<OrgMinimaKissvmExpressionsExpression>)zCondition
                 withOrgMinimaKissvmStatementsStatementBlock:(OrgMinimaKissvmStatementsStatementBlock *)zCodeBlock;

- (void)executeWithOrgMinimaKissvmContract:(OrgMinimaKissvmContract *)zContract;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaKissvmStatementsCommandsIFstatement)

J2OBJC_FIELD_SETTER(OrgMinimaKissvmStatementsCommandsIFstatement, mConditions_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgMinimaKissvmStatementsCommandsIFstatement, mActions_, JavaUtilArrayList *)

FOUNDATION_EXPORT void OrgMinimaKissvmStatementsCommandsIFstatement_init(OrgMinimaKissvmStatementsCommandsIFstatement *self);

FOUNDATION_EXPORT OrgMinimaKissvmStatementsCommandsIFstatement *new_OrgMinimaKissvmStatementsCommandsIFstatement_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmStatementsCommandsIFstatement *create_OrgMinimaKissvmStatementsCommandsIFstatement_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaKissvmStatementsCommandsIFstatement)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaKissvmStatementsCommandsIFstatement")
