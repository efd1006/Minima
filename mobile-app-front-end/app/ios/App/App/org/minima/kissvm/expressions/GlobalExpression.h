//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/expressions/GlobalExpression.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaKissvmExpressionsGlobalExpression")
#ifdef RESTRICT_OrgMinimaKissvmExpressionsGlobalExpression
#define INCLUDE_ALL_OrgMinimaKissvmExpressionsGlobalExpression 0
#else
#define INCLUDE_ALL_OrgMinimaKissvmExpressionsGlobalExpression 1
#endif
#undef RESTRICT_OrgMinimaKissvmExpressionsGlobalExpression

#if !defined (OrgMinimaKissvmExpressionsGlobalExpression_) && (INCLUDE_ALL_OrgMinimaKissvmExpressionsGlobalExpression || defined(INCLUDE_OrgMinimaKissvmExpressionsGlobalExpression))
#define OrgMinimaKissvmExpressionsGlobalExpression_

#define RESTRICT_OrgMinimaKissvmExpressionsExpression 1
#define INCLUDE_OrgMinimaKissvmExpressionsExpression 1
#include "org/minima/kissvm/expressions/Expression.h"

@class OrgMinimaKissvmContract;
@class OrgMinimaKissvmValuesValue;

@interface OrgMinimaKissvmExpressionsGlobalExpression : NSObject < OrgMinimaKissvmExpressionsExpression > {
 @public
  NSString *mGlobalType_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)zType;

- (OrgMinimaKissvmValuesValue *)getValueWithOrgMinimaKissvmContract:(OrgMinimaKissvmContract *)zContract;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaKissvmExpressionsGlobalExpression)

J2OBJC_FIELD_SETTER(OrgMinimaKissvmExpressionsGlobalExpression, mGlobalType_, NSString *)

FOUNDATION_EXPORT void OrgMinimaKissvmExpressionsGlobalExpression_initWithNSString_(OrgMinimaKissvmExpressionsGlobalExpression *self, NSString *zType);

FOUNDATION_EXPORT OrgMinimaKissvmExpressionsGlobalExpression *new_OrgMinimaKissvmExpressionsGlobalExpression_initWithNSString_(NSString *zType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmExpressionsGlobalExpression *create_OrgMinimaKissvmExpressionsGlobalExpression_initWithNSString_(NSString *zType);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaKissvmExpressionsGlobalExpression)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaKissvmExpressionsGlobalExpression")
