//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/statements/StatementBlock.java
//

#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "org/minima/kissvm/Contract.h"
#include "org/minima/kissvm/statements/Statement.h"
#include "org/minima/kissvm/statements/StatementBlock.h"

@implementation OrgMinimaKissvmStatementsStatementBlock

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)zStatements {
  OrgMinimaKissvmStatementsStatementBlock_initWithJavaUtilList_(self, zStatements);
  return self;
}

- (void)runWithOrgMinimaKissvmContract:(OrgMinimaKissvmContract *)zContract {
  for (id<OrgMinimaKissvmStatementsStatement> __strong stat in nil_chk(mStatements_)) {
    if ([((OrgMinimaKissvmContract *) nil_chk(zContract)) isSuccessSet]) {
      return;
    }
    [zContract incrementInstructions];
    [((id<OrgMinimaKissvmStatementsStatement>) nil_chk(stat)) executeWithOrgMinimaKissvmContract:zContract];
  }
}

- (void)dealloc {
  RELEASE_(mStatements_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(runWithOrgMinimaKissvmContract:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mStatements_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<Lorg/minima/kissvm/statements/Statement;>;)V", "run", "LOrgMinimaKissvmContract;", "LOrgMinimaKissvmExceptionsExecutionException;", "Ljava/util/List<Lorg/minima/kissvm/statements/Statement;>;" };
  static const J2ObjcClassInfo _OrgMinimaKissvmStatementsStatementBlock = { "StatementBlock", "org.minima.kissvm.statements", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgMinimaKissvmStatementsStatementBlock;
}

@end

void OrgMinimaKissvmStatementsStatementBlock_initWithJavaUtilList_(OrgMinimaKissvmStatementsStatementBlock *self, id<JavaUtilList> zStatements) {
  NSObject_init(self);
  JreStrongAssign(&self->mStatements_, zStatements);
}

OrgMinimaKissvmStatementsStatementBlock *new_OrgMinimaKissvmStatementsStatementBlock_initWithJavaUtilList_(id<JavaUtilList> zStatements) {
  J2OBJC_NEW_IMPL(OrgMinimaKissvmStatementsStatementBlock, initWithJavaUtilList_, zStatements)
}

OrgMinimaKissvmStatementsStatementBlock *create_OrgMinimaKissvmStatementsStatementBlock_initWithJavaUtilList_(id<JavaUtilList> zStatements) {
  J2OBJC_CREATE_IMPL(OrgMinimaKissvmStatementsStatementBlock, initWithJavaUtilList_, zStatements)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaKissvmStatementsStatementBlock)
