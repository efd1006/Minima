//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/values/NumberValue.java
//

#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "org/minima/kissvm/values/NumberValue.h"
#include "org/minima/kissvm/values/Value.h"
#include "org/minima/objects/base/MiniData.h"
#include "org/minima/objects/base/MiniNumber.h"

@implementation OrgMinimaKissvmValuesNumberValue

- (instancetype)initWithInt:(jint)zValue {
  OrgMinimaKissvmValuesNumberValue_initWithInt_(self, zValue);
  return self;
}

- (instancetype)initWithLong:(jlong)zValue {
  OrgMinimaKissvmValuesNumberValue_initWithLong_(self, zValue);
  return self;
}

- (instancetype)initWithDouble:(jdouble)zValue {
  OrgMinimaKissvmValuesNumberValue_initWithDouble_(self, zValue);
  return self;
}

- (instancetype)initWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zValue {
  OrgMinimaKissvmValuesNumberValue_initWithOrgMinimaObjectsBaseMiniNumber_(self, zValue);
  return self;
}

- (instancetype)initWithNSString:(NSString *)zNumber {
  OrgMinimaKissvmValuesNumberValue_initWithNSString_(self, zNumber);
  return self;
}

- (jint)getValueType {
  return OrgMinimaKissvmValuesNumberValue_VALUE_NUMBER;
}

- (jboolean)isEqualWithOrgMinimaKissvmValuesValue:(OrgMinimaKissvmValuesValue *)zValue {
  return [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) isEqualWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaKissvmValuesValue *) nil_chk(zValue)) getNumber]];
}

- (jboolean)isLessWithOrgMinimaKissvmValuesValue:(OrgMinimaKissvmValuesValue *)zValue {
  return [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) isLessWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaKissvmValuesValue *) nil_chk(zValue)) getNumber]];
}

- (jboolean)isLessEqualWithOrgMinimaKissvmValuesValue:(OrgMinimaKissvmValuesValue *)zValue {
  return [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) isLessEqualWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaKissvmValuesValue *) nil_chk(zValue)) getNumber]];
}

- (jboolean)isMoreWithOrgMinimaKissvmValuesValue:(OrgMinimaKissvmValuesValue *)zValue {
  return [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) isMoreWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaKissvmValuesValue *) nil_chk(zValue)) getNumber]];
}

- (jboolean)isMoreEqualWithOrgMinimaKissvmValuesValue:(OrgMinimaKissvmValuesValue *)zValue {
  return [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) isMoreEqualWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaKissvmValuesValue *) nil_chk(zValue)) getNumber]];
}

- (OrgMinimaKissvmValuesValue *)addWithOrgMinimaKissvmValuesValue:(OrgMinimaKissvmValuesValue *)zValue {
  return create_OrgMinimaKissvmValuesNumberValue_initWithOrgMinimaObjectsBaseMiniNumber_([((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) addWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaKissvmValuesValue *) nil_chk(zValue)) getNumber]]);
}

- (OrgMinimaKissvmValuesValue *)subWithOrgMinimaKissvmValuesValue:(OrgMinimaKissvmValuesValue *)zValue {
  return create_OrgMinimaKissvmValuesNumberValue_initWithOrgMinimaObjectsBaseMiniNumber_([((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) subWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaKissvmValuesValue *) nil_chk(zValue)) getNumber]]);
}

- (OrgMinimaKissvmValuesValue *)multWithOrgMinimaKissvmValuesValue:(OrgMinimaKissvmValuesValue *)zValue {
  return create_OrgMinimaKissvmValuesNumberValue_initWithOrgMinimaObjectsBaseMiniNumber_([((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) multWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaKissvmValuesValue *) nil_chk(zValue)) getNumber]]);
}

- (OrgMinimaKissvmValuesValue *)divWithOrgMinimaKissvmValuesValue:(OrgMinimaKissvmValuesValue *)zValue {
  return create_OrgMinimaKissvmValuesNumberValue_initWithOrgMinimaObjectsBaseMiniNumber_([((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) divWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaKissvmValuesValue *) nil_chk(zValue)) getNumber]]);
}

- (NSString *)description {
  return [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mNumber_)) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 6, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaKissvmValuesValue;", 0x1, 11, 6, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaKissvmValuesValue;", 0x1, 12, 6, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaKissvmValuesValue;", 0x1, 13, 6, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaKissvmValuesValue;", 0x1, 14, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 15, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithLong:);
  methods[2].selector = @selector(initWithDouble:);
  methods[3].selector = @selector(initWithOrgMinimaObjectsBaseMiniNumber:);
  methods[4].selector = @selector(initWithNSString:);
  methods[5].selector = @selector(getValueType);
  methods[6].selector = @selector(isEqualWithOrgMinimaKissvmValuesValue:);
  methods[7].selector = @selector(isLessWithOrgMinimaKissvmValuesValue:);
  methods[8].selector = @selector(isLessEqualWithOrgMinimaKissvmValuesValue:);
  methods[9].selector = @selector(isMoreWithOrgMinimaKissvmValuesValue:);
  methods[10].selector = @selector(isMoreEqualWithOrgMinimaKissvmValuesValue:);
  methods[11].selector = @selector(addWithOrgMinimaKissvmValuesValue:);
  methods[12].selector = @selector(subWithOrgMinimaKissvmValuesValue:);
  methods[13].selector = @selector(multWithOrgMinimaKissvmValuesValue:);
  methods[14].selector = @selector(divWithOrgMinimaKissvmValuesValue:);
  methods[15].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VALUE_NUMBER", "I", .constantValue.asInt = OrgMinimaKissvmValuesNumberValue_VALUE_NUMBER, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "J", "D", "LOrgMinimaObjectsBaseMiniNumber;", "LNSString;", "isEqual", "LOrgMinimaKissvmValuesValue;", "isLess", "isLessEqual", "isMore", "isMoreEqual", "add", "sub", "mult", "div", "toString" };
  static const J2ObjcClassInfo _OrgMinimaKissvmValuesNumberValue = { "NumberValue", "org.minima.kissvm.values", ptrTable, methods, fields, 7, 0x1, 16, 1, -1, -1, -1, -1, -1 };
  return &_OrgMinimaKissvmValuesNumberValue;
}

@end

void OrgMinimaKissvmValuesNumberValue_initWithInt_(OrgMinimaKissvmValuesNumberValue *self, jint zValue) {
  OrgMinimaKissvmValuesNumberValue_initWithNSString_(self, JavaLangInteger_toStringWithInt_(zValue));
}

OrgMinimaKissvmValuesNumberValue *new_OrgMinimaKissvmValuesNumberValue_initWithInt_(jint zValue) {
  J2OBJC_NEW_IMPL(OrgMinimaKissvmValuesNumberValue, initWithInt_, zValue)
}

OrgMinimaKissvmValuesNumberValue *create_OrgMinimaKissvmValuesNumberValue_initWithInt_(jint zValue) {
  J2OBJC_CREATE_IMPL(OrgMinimaKissvmValuesNumberValue, initWithInt_, zValue)
}

void OrgMinimaKissvmValuesNumberValue_initWithLong_(OrgMinimaKissvmValuesNumberValue *self, jlong zValue) {
  OrgMinimaKissvmValuesNumberValue_initWithNSString_(self, JavaLangLong_toStringWithLong_(zValue));
}

OrgMinimaKissvmValuesNumberValue *new_OrgMinimaKissvmValuesNumberValue_initWithLong_(jlong zValue) {
  J2OBJC_NEW_IMPL(OrgMinimaKissvmValuesNumberValue, initWithLong_, zValue)
}

OrgMinimaKissvmValuesNumberValue *create_OrgMinimaKissvmValuesNumberValue_initWithLong_(jlong zValue) {
  J2OBJC_CREATE_IMPL(OrgMinimaKissvmValuesNumberValue, initWithLong_, zValue)
}

void OrgMinimaKissvmValuesNumberValue_initWithDouble_(OrgMinimaKissvmValuesNumberValue *self, jdouble zValue) {
  OrgMinimaKissvmValuesNumberValue_initWithNSString_(self, JavaLangDouble_toStringWithDouble_(zValue));
}

OrgMinimaKissvmValuesNumberValue *new_OrgMinimaKissvmValuesNumberValue_initWithDouble_(jdouble zValue) {
  J2OBJC_NEW_IMPL(OrgMinimaKissvmValuesNumberValue, initWithDouble_, zValue)
}

OrgMinimaKissvmValuesNumberValue *create_OrgMinimaKissvmValuesNumberValue_initWithDouble_(jdouble zValue) {
  J2OBJC_CREATE_IMPL(OrgMinimaKissvmValuesNumberValue, initWithDouble_, zValue)
}

void OrgMinimaKissvmValuesNumberValue_initWithOrgMinimaObjectsBaseMiniNumber_(OrgMinimaKissvmValuesNumberValue *self, OrgMinimaObjectsBaseMiniNumber *zValue) {
  OrgMinimaKissvmValuesNumberValue_initWithNSString_(self, [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(zValue)) description]);
}

OrgMinimaKissvmValuesNumberValue *new_OrgMinimaKissvmValuesNumberValue_initWithOrgMinimaObjectsBaseMiniNumber_(OrgMinimaObjectsBaseMiniNumber *zValue) {
  J2OBJC_NEW_IMPL(OrgMinimaKissvmValuesNumberValue, initWithOrgMinimaObjectsBaseMiniNumber_, zValue)
}

OrgMinimaKissvmValuesNumberValue *create_OrgMinimaKissvmValuesNumberValue_initWithOrgMinimaObjectsBaseMiniNumber_(OrgMinimaObjectsBaseMiniNumber *zValue) {
  J2OBJC_CREATE_IMPL(OrgMinimaKissvmValuesNumberValue, initWithOrgMinimaObjectsBaseMiniNumber_, zValue)
}

void OrgMinimaKissvmValuesNumberValue_initWithNSString_(OrgMinimaKissvmValuesNumberValue *self, NSString *zNumber) {
  OrgMinimaKissvmValuesValue_init(self);
  JreStrongAssignAndConsume(&self->mNumber_, new_OrgMinimaObjectsBaseMiniNumber_initWithNSString_(zNumber));
  JreStrongAssign(&self->mData_, OrgMinimaObjectsBaseMiniData_getMiniDataVersionWithOrgMinimaUtilsStreamable_(self->mNumber_));
}

OrgMinimaKissvmValuesNumberValue *new_OrgMinimaKissvmValuesNumberValue_initWithNSString_(NSString *zNumber) {
  J2OBJC_NEW_IMPL(OrgMinimaKissvmValuesNumberValue, initWithNSString_, zNumber)
}

OrgMinimaKissvmValuesNumberValue *create_OrgMinimaKissvmValuesNumberValue_initWithNSString_(NSString *zNumber) {
  J2OBJC_CREATE_IMPL(OrgMinimaKissvmValuesNumberValue, initWithNSString_, zNumber)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaKissvmValuesNumberValue)
