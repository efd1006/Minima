//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/exceptions/MinimaException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaKissvmExceptionsMinimaException")
#ifdef RESTRICT_OrgMinimaKissvmExceptionsMinimaException
#define INCLUDE_ALL_OrgMinimaKissvmExceptionsMinimaException 0
#else
#define INCLUDE_ALL_OrgMinimaKissvmExceptionsMinimaException 1
#endif
#undef RESTRICT_OrgMinimaKissvmExceptionsMinimaException

#if !defined (OrgMinimaKissvmExceptionsMinimaException_) && (INCLUDE_ALL_OrgMinimaKissvmExceptionsMinimaException || defined(INCLUDE_OrgMinimaKissvmExceptionsMinimaException))
#define OrgMinimaKissvmExceptionsMinimaException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaLangThrowable;

@interface OrgMinimaKissvmExceptionsMinimaException : JavaLangException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)zError;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaKissvmExceptionsMinimaException)

FOUNDATION_EXPORT void OrgMinimaKissvmExceptionsMinimaException_initWithNSString_(OrgMinimaKissvmExceptionsMinimaException *self, NSString *zError);

FOUNDATION_EXPORT OrgMinimaKissvmExceptionsMinimaException *new_OrgMinimaKissvmExceptionsMinimaException_initWithNSString_(NSString *zError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmExceptionsMinimaException *create_OrgMinimaKissvmExceptionsMinimaException_initWithNSString_(NSString *zError);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaKissvmExceptionsMinimaException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaKissvmExceptionsMinimaException")
