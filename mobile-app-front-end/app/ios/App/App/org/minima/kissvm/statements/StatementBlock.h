//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/statements/StatementBlock.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaKissvmStatementsStatementBlock")
#ifdef RESTRICT_OrgMinimaKissvmStatementsStatementBlock
#define INCLUDE_ALL_OrgMinimaKissvmStatementsStatementBlock 0
#else
#define INCLUDE_ALL_OrgMinimaKissvmStatementsStatementBlock 1
#endif
#undef RESTRICT_OrgMinimaKissvmStatementsStatementBlock

#if !defined (OrgMinimaKissvmStatementsStatementBlock_) && (INCLUDE_ALL_OrgMinimaKissvmStatementsStatementBlock || defined(INCLUDE_OrgMinimaKissvmStatementsStatementBlock))
#define OrgMinimaKissvmStatementsStatementBlock_

@class OrgMinimaKissvmContract;
@protocol JavaUtilList;

@interface OrgMinimaKissvmStatementsStatementBlock : NSObject {
 @public
  id<JavaUtilList> mStatements_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)zStatements;

- (void)runWithOrgMinimaKissvmContract:(OrgMinimaKissvmContract *)zContract;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaKissvmStatementsStatementBlock)

J2OBJC_FIELD_SETTER(OrgMinimaKissvmStatementsStatementBlock, mStatements_, id<JavaUtilList>)

FOUNDATION_EXPORT void OrgMinimaKissvmStatementsStatementBlock_initWithJavaUtilList_(OrgMinimaKissvmStatementsStatementBlock *self, id<JavaUtilList> zStatements);

FOUNDATION_EXPORT OrgMinimaKissvmStatementsStatementBlock *new_OrgMinimaKissvmStatementsStatementBlock_initWithJavaUtilList_(id<JavaUtilList> zStatements) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmStatementsStatementBlock *create_OrgMinimaKissvmStatementsStatementBlock_initWithJavaUtilList_(id<JavaUtilList> zStatements);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaKissvmStatementsStatementBlock)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaKissvmStatementsStatementBlock")
