//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/statements/commands/EXECstatement.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/util/List.h"
#include "org/minima/kissvm/Contract.h"
#include "org/minima/kissvm/exceptions/ExecutionException.h"
#include "org/minima/kissvm/expressions/Expression.h"
#include "org/minima/kissvm/statements/StatementBlock.h"
#include "org/minima/kissvm/statements/StatementParser.h"
#include "org/minima/kissvm/statements/commands/EXECstatement.h"
#include "org/minima/kissvm/tokens/Token.h"
#include "org/minima/kissvm/values/ScriptValue.h"
#include "org/minima/kissvm/values/Value.h"

@implementation OrgMinimaKissvmStatementsCommandsEXECstatement

- (instancetype)initWithOrgMinimaKissvmExpressionsExpression:(id<OrgMinimaKissvmExpressionsExpression>)zScript {
  OrgMinimaKissvmStatementsCommandsEXECstatement_initWithOrgMinimaKissvmExpressionsExpression_(self, zScript);
  return self;
}

- (void)executeWithOrgMinimaKissvmContract:(OrgMinimaKissvmContract *)zContract {
  OrgMinimaKissvmValuesScriptValue *script = (OrgMinimaKissvmValuesScriptValue *) cast_chk([((id<OrgMinimaKissvmExpressionsExpression>) nil_chk(mScript_)) getValueWithOrgMinimaKissvmContract:zContract], [OrgMinimaKissvmValuesScriptValue class]);
  @try {
    id<JavaUtilList> tokens = OrgMinimaKissvmTokensToken_tokenizeWithNSString_([((OrgMinimaKissvmValuesScriptValue *) nil_chk(script)) description]);
    OrgMinimaKissvmStatementsStatementBlock *mBlock = OrgMinimaKissvmStatementsStatementParser_parseTokensWithJavaUtilList_(tokens);
    [((OrgMinimaKissvmContract *) nil_chk(zContract)) traceLogWithNSString:JreStrcat("$$$", @"EXEC [ ", [script description], @" ]")];
    [((OrgMinimaKissvmStatementsStatementBlock *) nil_chk(mBlock)) runWithOrgMinimaKissvmContract:zContract];
  }
  @catch (JavaLangException *exc) {
    @throw create_OrgMinimaKissvmExceptionsExecutionException_initWithNSString_([exc description]);
  }
}

- (NSString *)description {
  return JreStrcat("$@", @"EXEC ", mScript_);
}

- (void)dealloc {
  RELEASE_(mScript_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgMinimaKissvmExpressionsExpression:);
  methods[1].selector = @selector(executeWithOrgMinimaKissvmContract:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mScript_", "LOrgMinimaKissvmExpressionsExpression;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaKissvmExpressionsExpression;", "execute", "LOrgMinimaKissvmContract;", "LOrgMinimaKissvmExceptionsExecutionException;", "toString" };
  static const J2ObjcClassInfo _OrgMinimaKissvmStatementsCommandsEXECstatement = { "EXECstatement", "org.minima.kissvm.statements.commands", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgMinimaKissvmStatementsCommandsEXECstatement;
}

@end

void OrgMinimaKissvmStatementsCommandsEXECstatement_initWithOrgMinimaKissvmExpressionsExpression_(OrgMinimaKissvmStatementsCommandsEXECstatement *self, id<OrgMinimaKissvmExpressionsExpression> zScript) {
  NSObject_init(self);
  JreStrongAssign(&self->mScript_, zScript);
}

OrgMinimaKissvmStatementsCommandsEXECstatement *new_OrgMinimaKissvmStatementsCommandsEXECstatement_initWithOrgMinimaKissvmExpressionsExpression_(id<OrgMinimaKissvmExpressionsExpression> zScript) {
  J2OBJC_NEW_IMPL(OrgMinimaKissvmStatementsCommandsEXECstatement, initWithOrgMinimaKissvmExpressionsExpression_, zScript)
}

OrgMinimaKissvmStatementsCommandsEXECstatement *create_OrgMinimaKissvmStatementsCommandsEXECstatement_initWithOrgMinimaKissvmExpressionsExpression_(id<OrgMinimaKissvmExpressionsExpression> zScript) {
  J2OBJC_CREATE_IMPL(OrgMinimaKissvmStatementsCommandsEXECstatement, initWithOrgMinimaKissvmExpressionsExpression_, zScript)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaKissvmStatementsCommandsEXECstatement)
