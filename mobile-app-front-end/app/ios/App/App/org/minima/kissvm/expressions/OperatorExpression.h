//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/kissvm/expressions/OperatorExpression.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaKissvmExpressionsOperatorExpression")
#ifdef RESTRICT_OrgMinimaKissvmExpressionsOperatorExpression
#define INCLUDE_ALL_OrgMinimaKissvmExpressionsOperatorExpression 0
#else
#define INCLUDE_ALL_OrgMinimaKissvmExpressionsOperatorExpression 1
#endif
#undef RESTRICT_OrgMinimaKissvmExpressionsOperatorExpression

#if !defined (OrgMinimaKissvmExpressionsOperatorExpression_) && (INCLUDE_ALL_OrgMinimaKissvmExpressionsOperatorExpression || defined(INCLUDE_OrgMinimaKissvmExpressionsOperatorExpression))
#define OrgMinimaKissvmExpressionsOperatorExpression_

#define RESTRICT_OrgMinimaKissvmExpressionsExpression 1
#define INCLUDE_OrgMinimaKissvmExpressionsExpression 1
#include "org/minima/kissvm/expressions/Expression.h"

@class OrgMinimaKissvmContract;
@class OrgMinimaKissvmValuesValue;

@interface OrgMinimaKissvmExpressionsOperatorExpression : NSObject < OrgMinimaKissvmExpressionsExpression > {
 @public
  jint mOperatorType_;
  id<OrgMinimaKissvmExpressionsExpression> mLeft_;
  id<OrgMinimaKissvmExpressionsExpression> mRight_;
}

#pragma mark Public

- (instancetype)initWithOrgMinimaKissvmExpressionsExpression:(id<OrgMinimaKissvmExpressionsExpression>)zLeft
                    withOrgMinimaKissvmExpressionsExpression:(id<OrgMinimaKissvmExpressionsExpression>)zRight
                                                     withInt:(jint)zOperator;

- (instancetype)initWithOrgMinimaKissvmExpressionsExpression:(id<OrgMinimaKissvmExpressionsExpression>)zLeft
                                                     withInt:(jint)zOperator;

- (OrgMinimaKissvmValuesValue *)getValueWithOrgMinimaKissvmContract:(OrgMinimaKissvmContract *)zContract;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaKissvmExpressionsOperatorExpression)

J2OBJC_FIELD_SETTER(OrgMinimaKissvmExpressionsOperatorExpression, mLeft_, id<OrgMinimaKissvmExpressionsExpression>)
J2OBJC_FIELD_SETTER(OrgMinimaKissvmExpressionsOperatorExpression, mRight_, id<OrgMinimaKissvmExpressionsExpression>)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_ADD(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_ADD 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_ADD, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_SUB(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_SUB 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_SUB, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_MUL(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_MUL 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_MUL, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_DIV(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_DIV 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_DIV, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_NEG(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_NEG 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_NEG, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_SHIFTL(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_SHIFTL 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_SHIFTL, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_SHIFTR(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_SHIFTR 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_SHIFTR, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_MODULO(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_MODULO 7
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_MODULO, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_AND(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_AND 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_AND, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_OR(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_OR 9
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_OR, jint)

inline jint OrgMinimaKissvmExpressionsOperatorExpression_get_OPERATOR_XOR(void);
#define OrgMinimaKissvmExpressionsOperatorExpression_OPERATOR_XOR 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaKissvmExpressionsOperatorExpression, OPERATOR_XOR, jint)

FOUNDATION_EXPORT void OrgMinimaKissvmExpressionsOperatorExpression_initWithOrgMinimaKissvmExpressionsExpression_withInt_(OrgMinimaKissvmExpressionsOperatorExpression *self, id<OrgMinimaKissvmExpressionsExpression> zLeft, jint zOperator);

FOUNDATION_EXPORT OrgMinimaKissvmExpressionsOperatorExpression *new_OrgMinimaKissvmExpressionsOperatorExpression_initWithOrgMinimaKissvmExpressionsExpression_withInt_(id<OrgMinimaKissvmExpressionsExpression> zLeft, jint zOperator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmExpressionsOperatorExpression *create_OrgMinimaKissvmExpressionsOperatorExpression_initWithOrgMinimaKissvmExpressionsExpression_withInt_(id<OrgMinimaKissvmExpressionsExpression> zLeft, jint zOperator);

FOUNDATION_EXPORT void OrgMinimaKissvmExpressionsOperatorExpression_initWithOrgMinimaKissvmExpressionsExpression_withOrgMinimaKissvmExpressionsExpression_withInt_(OrgMinimaKissvmExpressionsOperatorExpression *self, id<OrgMinimaKissvmExpressionsExpression> zLeft, id<OrgMinimaKissvmExpressionsExpression> zRight, jint zOperator);

FOUNDATION_EXPORT OrgMinimaKissvmExpressionsOperatorExpression *new_OrgMinimaKissvmExpressionsOperatorExpression_initWithOrgMinimaKissvmExpressionsExpression_withOrgMinimaKissvmExpressionsExpression_withInt_(id<OrgMinimaKissvmExpressionsExpression> zLeft, id<OrgMinimaKissvmExpressionsExpression> zRight, jint zOperator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaKissvmExpressionsOperatorExpression *create_OrgMinimaKissvmExpressionsOperatorExpression_initWithOrgMinimaKissvmExpressionsExpression_withOrgMinimaKissvmExpressionsExpression_withInt_(id<OrgMinimaKissvmExpressionsExpression> zLeft, id<OrgMinimaKissvmExpressionsExpression> zRight, jint zOperator);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaKissvmExpressionsOperatorExpression)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaKissvmExpressionsOperatorExpression")
