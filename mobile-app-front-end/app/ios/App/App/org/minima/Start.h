//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/Start.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaStart")
#ifdef RESTRICT_OrgMinimaStart
#define INCLUDE_ALL_OrgMinimaStart 0
#else
#define INCLUDE_ALL_OrgMinimaStart 1
#endif
#undef RESTRICT_OrgMinimaStart

#if !defined (OrgMinimaStart_) && (INCLUDE_ALL_OrgMinimaStart || defined(INCLUDE_OrgMinimaStart))
#define OrgMinimaStart_

@class IOSObjectArray;
@class OrgMinimaSystemMain;

@interface OrgMinimaStart : NSObject {
 @public
  NSString *mConfFolder_;
}

#pragma mark Public

- (instancetype)init;

- (void)fireStarterWithNSString:(NSString *)zConfFolder;

+ (OrgMinimaSystemMain *)getServer;

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaStart)

J2OBJC_FIELD_SETTER(OrgMinimaStart, mConfFolder_, NSString *)

inline OrgMinimaSystemMain *OrgMinimaStart_get_mMainServer(void);
inline OrgMinimaSystemMain *OrgMinimaStart_set_mMainServer(OrgMinimaSystemMain *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMinimaSystemMain *OrgMinimaStart_mMainServer;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaStart, mMainServer, OrgMinimaSystemMain *)

FOUNDATION_EXPORT OrgMinimaSystemMain *OrgMinimaStart_getServer(void);

FOUNDATION_EXPORT void OrgMinimaStart_init(OrgMinimaStart *self);

FOUNDATION_EXPORT OrgMinimaStart *new_OrgMinimaStart_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaStart *create_OrgMinimaStart_init(void);

FOUNDATION_EXPORT void OrgMinimaStart_mainWithNSStringArray_(IOSObjectArray *zArgs);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaStart)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaStart")
