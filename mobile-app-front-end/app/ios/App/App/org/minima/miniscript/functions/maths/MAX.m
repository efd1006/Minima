//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/functions/maths/MAX.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/minima/miniscript/Contract.h"
#include "org/minima/miniscript/expressions/Expression.h"
#include "org/minima/miniscript/functions/MinimaFunction.h"
#include "org/minima/miniscript/functions/maths/MAX.h"
#include "org/minima/miniscript/values/Value.h"
#include "org/minima/objects/base/MiniNumber.h"

@implementation OrgMinimaMiniscriptFunctionsMathsMAX

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaMiniscriptFunctionsMathsMAX_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgMinimaMiniscriptValuesValue *)runFunctionWithOrgMinimaMiniscriptContract:(OrgMinimaMiniscriptContract *)zContract {
  JavaUtilArrayList *params = [self getAllParameters];
  jboolean first = true;
  OrgMinimaMiniscriptValuesValue *max = nil;
  for (id<OrgMinimaMiniscriptExpressionsExpression> __strong exp in nil_chk(params)) {
    OrgMinimaMiniscriptValuesValue *chk = [((id<OrgMinimaMiniscriptExpressionsExpression>) nil_chk(exp)) getValueWithOrgMinimaMiniscriptContract:zContract];
    if (first) {
      first = false;
      max = chk;
    }
    else {
      if ([((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaMiniscriptValuesValue *) nil_chk(chk)) getNumber])) isMoreWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaMiniscriptValuesValue *) nil_chk(max)) getNumber]]) {
        max = chk;
      }
    }
  }
  return max;
}

- (OrgMinimaMiniscriptFunctionsMinimaFunction *)getNewFunction {
  return create_OrgMinimaMiniscriptFunctionsMathsMAX_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaMiniscriptValuesValue;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgMinimaMiniscriptFunctionsMinimaFunction;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(runFunctionWithOrgMinimaMiniscriptContract:);
  methods[2].selector = @selector(getNewFunction);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "runFunction", "LOrgMinimaMiniscriptContract;", "LOrgMinimaMiniscriptExceptionsExecutionException;" };
  static const J2ObjcClassInfo _OrgMinimaMiniscriptFunctionsMathsMAX = { "MAX", "org.minima.miniscript.functions.maths", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaMiniscriptFunctionsMathsMAX;
}

@end

void OrgMinimaMiniscriptFunctionsMathsMAX_init(OrgMinimaMiniscriptFunctionsMathsMAX *self) {
  OrgMinimaMiniscriptFunctionsMinimaFunction_initWithNSString_(self, @"MAX");
}

OrgMinimaMiniscriptFunctionsMathsMAX *new_OrgMinimaMiniscriptFunctionsMathsMAX_init() {
  J2OBJC_NEW_IMPL(OrgMinimaMiniscriptFunctionsMathsMAX, init)
}

OrgMinimaMiniscriptFunctionsMathsMAX *create_OrgMinimaMiniscriptFunctionsMathsMAX_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaMiniscriptFunctionsMathsMAX, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaMiniscriptFunctionsMathsMAX)
