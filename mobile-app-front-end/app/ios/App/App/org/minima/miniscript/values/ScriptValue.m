//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/values/ScriptValue.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/nio/charset/Charset.h"
#include "org/minima/miniscript/Contract.h"
#include "org/minima/miniscript/values/HEXValue.h"
#include "org/minima/miniscript/values/ScriptValue.h"
#include "org/minima/miniscript/values/Value.h"

@implementation OrgMinimaMiniscriptValuesScriptValue

- (instancetype)initWithNSString:(NSString *)zScript {
  OrgMinimaMiniscriptValuesScriptValue_initWithNSString_(self, zScript);
  return self;
}

- (NSString *)description {
  return mScript_;
}

- (jint)getValueType {
  return OrgMinimaMiniscriptValuesScriptValue_VALUE_SCRIPT;
}

- (OrgMinimaMiniscriptValuesValue *)addWithOrgMinimaMiniscriptValuesValue:(OrgMinimaMiniscriptValuesValue *)zValue {
  NSString *sum = JreStrcat("$C$", mScript_, ' ', [NSString java_stringWithBytes:[((OrgMinimaMiniscriptValuesValue *) nil_chk(zValue)) getRawData] charset:JavaNioCharsetCharset_forNameWithNSString_(@"US-ASCII")]);
  return create_OrgMinimaMiniscriptValuesScriptValue_initWithNSString_(sum);
}

- (void)dealloc {
  RELEASE_(mScript_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaMiniscriptValuesValue;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(getValueType);
  methods[3].selector = @selector(addWithOrgMinimaMiniscriptValuesValue:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VALUE_SCRIPT", "I", .constantValue.asInt = OrgMinimaMiniscriptValuesScriptValue_VALUE_SCRIPT, 0x19, -1, -1, -1, -1 },
    { "mScript_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "toString", "add", "LOrgMinimaMiniscriptValuesValue;" };
  static const J2ObjcClassInfo _OrgMinimaMiniscriptValuesScriptValue = { "ScriptValue", "org.minima.miniscript.values", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_OrgMinimaMiniscriptValuesScriptValue;
}

@end

void OrgMinimaMiniscriptValuesScriptValue_initWithNSString_(OrgMinimaMiniscriptValuesScriptValue *self, NSString *zScript) {
  OrgMinimaMiniscriptValuesHEXValue_initWithByteArray_(self, [((NSString *) nil_chk(OrgMinimaMiniscriptContract_cleanScriptWithNSString_(zScript))) java_getBytesWithCharset:JavaNioCharsetCharset_forNameWithNSString_(@"US-ASCII")]);
  JreStrongAssign(&self->mScript_, [NSString java_stringWithBytes:[self getRawData] charset:JavaNioCharsetCharset_forNameWithNSString_(@"US-ASCII")]);
}

OrgMinimaMiniscriptValuesScriptValue *new_OrgMinimaMiniscriptValuesScriptValue_initWithNSString_(NSString *zScript) {
  J2OBJC_NEW_IMPL(OrgMinimaMiniscriptValuesScriptValue, initWithNSString_, zScript)
}

OrgMinimaMiniscriptValuesScriptValue *create_OrgMinimaMiniscriptValuesScriptValue_initWithNSString_(NSString *zScript) {
  J2OBJC_CREATE_IMPL(OrgMinimaMiniscriptValuesScriptValue, initWithNSString_, zScript)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaMiniscriptValuesScriptValue)
