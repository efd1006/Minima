//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/exceptions/MinimaException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/minima/miniscript/exceptions/MinimaException.h"

@implementation OrgMinimaMiniscriptExceptionsMinimaException

- (instancetype)initWithNSString:(NSString *)zError {
  OrgMinimaMiniscriptExceptionsMinimaException_initWithNSString_(self, zError);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _OrgMinimaMiniscriptExceptionsMinimaException = { "MinimaException", "org.minima.miniscript.exceptions", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaMiniscriptExceptionsMinimaException;
}

@end

void OrgMinimaMiniscriptExceptionsMinimaException_initWithNSString_(OrgMinimaMiniscriptExceptionsMinimaException *self, NSString *zError) {
  JavaLangException_initWithNSString_(self, zError);
}

OrgMinimaMiniscriptExceptionsMinimaException *new_OrgMinimaMiniscriptExceptionsMinimaException_initWithNSString_(NSString *zError) {
  J2OBJC_NEW_IMPL(OrgMinimaMiniscriptExceptionsMinimaException, initWithNSString_, zError)
}

OrgMinimaMiniscriptExceptionsMinimaException *create_OrgMinimaMiniscriptExceptionsMinimaException_initWithNSString_(NSString *zError) {
  J2OBJC_CREATE_IMPL(OrgMinimaMiniscriptExceptionsMinimaException, initWithNSString_, zError)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaMiniscriptExceptionsMinimaException)
