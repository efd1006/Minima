//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/statements/StatementBlock.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaMiniscriptStatementsStatementBlock")
#ifdef RESTRICT_OrgMinimaMiniscriptStatementsStatementBlock
#define INCLUDE_ALL_OrgMinimaMiniscriptStatementsStatementBlock 0
#else
#define INCLUDE_ALL_OrgMinimaMiniscriptStatementsStatementBlock 1
#endif
#undef RESTRICT_OrgMinimaMiniscriptStatementsStatementBlock

#if !defined (OrgMinimaMiniscriptStatementsStatementBlock_) && (INCLUDE_ALL_OrgMinimaMiniscriptStatementsStatementBlock || defined(INCLUDE_OrgMinimaMiniscriptStatementsStatementBlock))
#define OrgMinimaMiniscriptStatementsStatementBlock_

@class OrgMinimaMiniscriptContract;
@protocol JavaUtilList;

@interface OrgMinimaMiniscriptStatementsStatementBlock : NSObject {
 @public
  id<JavaUtilList> mStatements_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)zStatements;

- (void)runWithOrgMinimaMiniscriptContract:(OrgMinimaMiniscriptContract *)zContract;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaMiniscriptStatementsStatementBlock)

J2OBJC_FIELD_SETTER(OrgMinimaMiniscriptStatementsStatementBlock, mStatements_, id<JavaUtilList>)

FOUNDATION_EXPORT void OrgMinimaMiniscriptStatementsStatementBlock_initWithJavaUtilList_(OrgMinimaMiniscriptStatementsStatementBlock *self, id<JavaUtilList> zStatements);

FOUNDATION_EXPORT OrgMinimaMiniscriptStatementsStatementBlock *new_OrgMinimaMiniscriptStatementsStatementBlock_initWithJavaUtilList_(id<JavaUtilList> zStatements) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaMiniscriptStatementsStatementBlock *create_OrgMinimaMiniscriptStatementsStatementBlock_initWithJavaUtilList_(id<JavaUtilList> zStatements);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaMiniscriptStatementsStatementBlock)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaMiniscriptStatementsStatementBlock")
