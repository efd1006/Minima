//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/tokens/MASTRecurse.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaMiniscriptTokensMASTRecurse")
#ifdef RESTRICT_OrgMinimaMiniscriptTokensMASTRecurse
#define INCLUDE_ALL_OrgMinimaMiniscriptTokensMASTRecurse 0
#else
#define INCLUDE_ALL_OrgMinimaMiniscriptTokensMASTRecurse 1
#endif
#undef RESTRICT_OrgMinimaMiniscriptTokensMASTRecurse

#if !defined (OrgMinimaMiniscriptTokensMASTRecurse_) && (INCLUDE_ALL_OrgMinimaMiniscriptTokensMASTRecurse || defined(INCLUDE_OrgMinimaMiniscriptTokensMASTRecurse))
#define OrgMinimaMiniscriptTokensMASTRecurse_

@class IOSObjectArray;
@class JavaUtilHashtable;
@class OrgMinimaObjectsBaseMiniHash;

@interface OrgMinimaMiniscriptTokensMASTRecurse : NSObject

#pragma mark Public

- (instancetype)init;

- (NSString *)getInternalMASTWithNSString:(NSString *)zRamScript;

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs;

+ (OrgMinimaObjectsBaseMiniHash *)MASTWithNSString:(NSString *)zRamScript
                             withJavaUtilHashtable:(JavaUtilHashtable *)zTable;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaMiniscriptTokensMASTRecurse)

FOUNDATION_EXPORT void OrgMinimaMiniscriptTokensMASTRecurse_init(OrgMinimaMiniscriptTokensMASTRecurse *self);

FOUNDATION_EXPORT OrgMinimaMiniscriptTokensMASTRecurse *new_OrgMinimaMiniscriptTokensMASTRecurse_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaMiniscriptTokensMASTRecurse *create_OrgMinimaMiniscriptTokensMASTRecurse_init(void);

FOUNDATION_EXPORT OrgMinimaObjectsBaseMiniHash *OrgMinimaMiniscriptTokensMASTRecurse_MASTWithNSString_withJavaUtilHashtable_(NSString *zRamScript, JavaUtilHashtable *zTable);

FOUNDATION_EXPORT void OrgMinimaMiniscriptTokensMASTRecurse_mainWithNSStringArray_(IOSObjectArray *zArgs);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaMiniscriptTokensMASTRecurse)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaMiniscriptTokensMASTRecurse")
