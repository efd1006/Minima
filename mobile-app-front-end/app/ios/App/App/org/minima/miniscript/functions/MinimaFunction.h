//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/functions/MinimaFunction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaMiniscriptFunctionsMinimaFunction")
#ifdef RESTRICT_OrgMinimaMiniscriptFunctionsMinimaFunction
#define INCLUDE_ALL_OrgMinimaMiniscriptFunctionsMinimaFunction 0
#else
#define INCLUDE_ALL_OrgMinimaMiniscriptFunctionsMinimaFunction 1
#endif
#undef RESTRICT_OrgMinimaMiniscriptFunctionsMinimaFunction

#if !defined (OrgMinimaMiniscriptFunctionsMinimaFunction_) && (INCLUDE_ALL_OrgMinimaMiniscriptFunctionsMinimaFunction || defined(INCLUDE_OrgMinimaMiniscriptFunctionsMinimaFunction))
#define OrgMinimaMiniscriptFunctionsMinimaFunction_

@class IOSObjectArray;
@class JavaUtilArrayList;
@class OrgMinimaMiniscriptContract;
@class OrgMinimaMiniscriptValuesValue;
@protocol OrgMinimaMiniscriptExpressionsExpression;

@interface OrgMinimaMiniscriptFunctionsMinimaFunction : NSObject {
 @public
  JavaUtilArrayList *mParameters_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)zName;

- (void)addParameterWithOrgMinimaMiniscriptExpressionsExpression:(id<OrgMinimaMiniscriptExpressionsExpression>)zParam;

- (JavaUtilArrayList *)getAllParameters;

+ (OrgMinimaMiniscriptFunctionsMinimaFunction *)getFunctionWithNSString:(NSString *)zFunction;

- (NSString *)getName;

- (OrgMinimaMiniscriptFunctionsMinimaFunction *)getNewFunction;

- (id<OrgMinimaMiniscriptExpressionsExpression>)getParameterWithInt:(jint)zParamNum;

- (jint)getParameterNum;

- (OrgMinimaMiniscriptValuesValue *)runFunctionWithOrgMinimaMiniscriptContract:(OrgMinimaMiniscriptContract *)zContract;

@end

J2OBJC_STATIC_INIT(OrgMinimaMiniscriptFunctionsMinimaFunction)

J2OBJC_FIELD_SETTER(OrgMinimaMiniscriptFunctionsMinimaFunction, mParameters_, JavaUtilArrayList *)

inline IOSObjectArray *OrgMinimaMiniscriptFunctionsMinimaFunction_get_ALL_FUNCTIONS(void);
inline IOSObjectArray *OrgMinimaMiniscriptFunctionsMinimaFunction_set_ALL_FUNCTIONS(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgMinimaMiniscriptFunctionsMinimaFunction_ALL_FUNCTIONS;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaMiniscriptFunctionsMinimaFunction, ALL_FUNCTIONS, IOSObjectArray *)

FOUNDATION_EXPORT void OrgMinimaMiniscriptFunctionsMinimaFunction_initWithNSString_(OrgMinimaMiniscriptFunctionsMinimaFunction *self, NSString *zName);

FOUNDATION_EXPORT OrgMinimaMiniscriptFunctionsMinimaFunction *OrgMinimaMiniscriptFunctionsMinimaFunction_getFunctionWithNSString_(NSString *zFunction);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaMiniscriptFunctionsMinimaFunction)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaMiniscriptFunctionsMinimaFunction")
