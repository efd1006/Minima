//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/functions/base/GET.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/minima/miniscript/Contract.h"
#include "org/minima/miniscript/expressions/Expression.h"
#include "org/minima/miniscript/functions/MinimaFunction.h"
#include "org/minima/miniscript/functions/base/GET.h"
#include "org/minima/miniscript/values/NumberValue.h"
#include "org/minima/miniscript/values/Value.h"

@implementation OrgMinimaMiniscriptFunctionsBaseGET

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaMiniscriptFunctionsBaseGET_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgMinimaMiniscriptValuesValue *)runFunctionWithOrgMinimaMiniscriptContract:(OrgMinimaMiniscriptContract *)zContract {
  NSString *ps = @"";
  JavaUtilArrayList *params = [self getAllParameters];
  for (id<OrgMinimaMiniscriptExpressionsExpression> __strong exp in nil_chk(params)) {
    JreStrAppend(&ps, "$C", [((NSString *) nil_chk([((OrgMinimaMiniscriptValuesValue *) nil_chk([((id<OrgMinimaMiniscriptExpressionsExpression>) nil_chk(exp)) getValueWithOrgMinimaMiniscriptContract:zContract])) description])) java_trim], ',');
  }
  OrgMinimaMiniscriptValuesValue *val = [((OrgMinimaMiniscriptContract *) nil_chk(zContract)) getVariableWithNSString:ps];
  if (val == nil) {
    return create_OrgMinimaMiniscriptValuesNumberValue_initWithInt_(0);
  }
  return val;
}

- (OrgMinimaMiniscriptFunctionsMinimaFunction *)getNewFunction {
  return create_OrgMinimaMiniscriptFunctionsBaseGET_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaMiniscriptValuesValue;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgMinimaMiniscriptFunctionsMinimaFunction;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(runFunctionWithOrgMinimaMiniscriptContract:);
  methods[2].selector = @selector(getNewFunction);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "runFunction", "LOrgMinimaMiniscriptContract;", "LOrgMinimaMiniscriptExceptionsExecutionException;" };
  static const J2ObjcClassInfo _OrgMinimaMiniscriptFunctionsBaseGET = { "GET", "org.minima.miniscript.functions.base", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaMiniscriptFunctionsBaseGET;
}

@end

void OrgMinimaMiniscriptFunctionsBaseGET_init(OrgMinimaMiniscriptFunctionsBaseGET *self) {
  OrgMinimaMiniscriptFunctionsMinimaFunction_initWithNSString_(self, @"GET");
}

OrgMinimaMiniscriptFunctionsBaseGET *new_OrgMinimaMiniscriptFunctionsBaseGET_init() {
  J2OBJC_NEW_IMPL(OrgMinimaMiniscriptFunctionsBaseGET, init)
}

OrgMinimaMiniscriptFunctionsBaseGET *create_OrgMinimaMiniscriptFunctionsBaseGET_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaMiniscriptFunctionsBaseGET, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaMiniscriptFunctionsBaseGET)
