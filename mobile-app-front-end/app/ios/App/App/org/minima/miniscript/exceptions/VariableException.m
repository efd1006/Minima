//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/exceptions/VariableException.java
//

#include "J2ObjC_source.h"
#include "org/minima/miniscript/exceptions/MinimaException.h"
#include "org/minima/miniscript/exceptions/VariableException.h"

@implementation OrgMinimaMiniscriptExceptionsVariableException

- (instancetype)initWithNSString:(NSString *)zError {
  OrgMinimaMiniscriptExceptionsVariableException_initWithNSString_(self, zError);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _OrgMinimaMiniscriptExceptionsVariableException = { "VariableException", "org.minima.miniscript.exceptions", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaMiniscriptExceptionsVariableException;
}

@end

void OrgMinimaMiniscriptExceptionsVariableException_initWithNSString_(OrgMinimaMiniscriptExceptionsVariableException *self, NSString *zError) {
  OrgMinimaMiniscriptExceptionsMinimaException_initWithNSString_(self, zError);
}

OrgMinimaMiniscriptExceptionsVariableException *new_OrgMinimaMiniscriptExceptionsVariableException_initWithNSString_(NSString *zError) {
  J2OBJC_NEW_IMPL(OrgMinimaMiniscriptExceptionsVariableException, initWithNSString_, zError)
}

OrgMinimaMiniscriptExceptionsVariableException *create_OrgMinimaMiniscriptExceptionsVariableException_initWithNSString_(NSString *zError) {
  J2OBJC_CREATE_IMPL(OrgMinimaMiniscriptExceptionsVariableException, initWithNSString_, zError)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaMiniscriptExceptionsVariableException)
