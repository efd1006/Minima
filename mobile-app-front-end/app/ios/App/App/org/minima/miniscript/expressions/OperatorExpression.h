//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/expressions/OperatorExpression.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaMiniscriptExpressionsOperatorExpression")
#ifdef RESTRICT_OrgMinimaMiniscriptExpressionsOperatorExpression
#define INCLUDE_ALL_OrgMinimaMiniscriptExpressionsOperatorExpression 0
#else
#define INCLUDE_ALL_OrgMinimaMiniscriptExpressionsOperatorExpression 1
#endif
#undef RESTRICT_OrgMinimaMiniscriptExpressionsOperatorExpression

#if !defined (OrgMinimaMiniscriptExpressionsOperatorExpression_) && (INCLUDE_ALL_OrgMinimaMiniscriptExpressionsOperatorExpression || defined(INCLUDE_OrgMinimaMiniscriptExpressionsOperatorExpression))
#define OrgMinimaMiniscriptExpressionsOperatorExpression_

#define RESTRICT_OrgMinimaMiniscriptExpressionsExpression 1
#define INCLUDE_OrgMinimaMiniscriptExpressionsExpression 1
#include "org/minima/miniscript/expressions/Expression.h"

@class OrgMinimaMiniscriptContract;
@class OrgMinimaMiniscriptValuesValue;

@interface OrgMinimaMiniscriptExpressionsOperatorExpression : NSObject < OrgMinimaMiniscriptExpressionsExpression > {
 @public
  jint mOperatorType_;
  id<OrgMinimaMiniscriptExpressionsExpression> mLeft_;
  id<OrgMinimaMiniscriptExpressionsExpression> mRight_;
}

#pragma mark Public

- (instancetype)initWithOrgMinimaMiniscriptExpressionsExpression:(id<OrgMinimaMiniscriptExpressionsExpression>)zLeft
                    withOrgMinimaMiniscriptExpressionsExpression:(id<OrgMinimaMiniscriptExpressionsExpression>)zRight
                                                         withInt:(jint)zOperator;

- (instancetype)initWithOrgMinimaMiniscriptExpressionsExpression:(id<OrgMinimaMiniscriptExpressionsExpression>)zLeft
                                                         withInt:(jint)zOperator;

- (OrgMinimaMiniscriptValuesValue *)getValueWithOrgMinimaMiniscriptContract:(OrgMinimaMiniscriptContract *)zContract;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaMiniscriptExpressionsOperatorExpression)

J2OBJC_FIELD_SETTER(OrgMinimaMiniscriptExpressionsOperatorExpression, mLeft_, id<OrgMinimaMiniscriptExpressionsExpression>)
J2OBJC_FIELD_SETTER(OrgMinimaMiniscriptExpressionsOperatorExpression, mRight_, id<OrgMinimaMiniscriptExpressionsExpression>)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_ADD(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_ADD 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_ADD, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_SUB(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_SUB 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_SUB, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_MUL(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_MUL 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_MUL, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_DIV(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_DIV 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_DIV, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_NEG(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_NEG 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_NEG, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_SHIFTL(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_SHIFTL 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_SHIFTL, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_SHIFTR(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_SHIFTR 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_SHIFTR, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_MODULO(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_MODULO 7
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_MODULO, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_AND(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_AND 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_AND, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_OR(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_OR 9
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_OR, jint)

inline jint OrgMinimaMiniscriptExpressionsOperatorExpression_get_OPERATOR_XOR(void);
#define OrgMinimaMiniscriptExpressionsOperatorExpression_OPERATOR_XOR 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaMiniscriptExpressionsOperatorExpression, OPERATOR_XOR, jint)

FOUNDATION_EXPORT void OrgMinimaMiniscriptExpressionsOperatorExpression_initWithOrgMinimaMiniscriptExpressionsExpression_withInt_(OrgMinimaMiniscriptExpressionsOperatorExpression *self, id<OrgMinimaMiniscriptExpressionsExpression> zLeft, jint zOperator);

FOUNDATION_EXPORT OrgMinimaMiniscriptExpressionsOperatorExpression *new_OrgMinimaMiniscriptExpressionsOperatorExpression_initWithOrgMinimaMiniscriptExpressionsExpression_withInt_(id<OrgMinimaMiniscriptExpressionsExpression> zLeft, jint zOperator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaMiniscriptExpressionsOperatorExpression *create_OrgMinimaMiniscriptExpressionsOperatorExpression_initWithOrgMinimaMiniscriptExpressionsExpression_withInt_(id<OrgMinimaMiniscriptExpressionsExpression> zLeft, jint zOperator);

FOUNDATION_EXPORT void OrgMinimaMiniscriptExpressionsOperatorExpression_initWithOrgMinimaMiniscriptExpressionsExpression_withOrgMinimaMiniscriptExpressionsExpression_withInt_(OrgMinimaMiniscriptExpressionsOperatorExpression *self, id<OrgMinimaMiniscriptExpressionsExpression> zLeft, id<OrgMinimaMiniscriptExpressionsExpression> zRight, jint zOperator);

FOUNDATION_EXPORT OrgMinimaMiniscriptExpressionsOperatorExpression *new_OrgMinimaMiniscriptExpressionsOperatorExpression_initWithOrgMinimaMiniscriptExpressionsExpression_withOrgMinimaMiniscriptExpressionsExpression_withInt_(id<OrgMinimaMiniscriptExpressionsExpression> zLeft, id<OrgMinimaMiniscriptExpressionsExpression> zRight, jint zOperator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaMiniscriptExpressionsOperatorExpression *create_OrgMinimaMiniscriptExpressionsOperatorExpression_initWithOrgMinimaMiniscriptExpressionsExpression_withOrgMinimaMiniscriptExpressionsExpression_withInt_(id<OrgMinimaMiniscriptExpressionsExpression> zLeft, id<OrgMinimaMiniscriptExpressionsExpression> zRight, jint zOperator);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaMiniscriptExpressionsOperatorExpression)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaMiniscriptExpressionsOperatorExpression")
