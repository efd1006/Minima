//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/expressions/FunctionExpression.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/minima/miniscript/Contract.h"
#include "org/minima/miniscript/expressions/FunctionExpression.h"
#include "org/minima/miniscript/functions/MinimaFunction.h"
#include "org/minima/miniscript/values/Value.h"

@implementation OrgMinimaMiniscriptExpressionsFunctionExpression

- (instancetype)initWithOrgMinimaMiniscriptFunctionsMinimaFunction:(OrgMinimaMiniscriptFunctionsMinimaFunction *)zFunction {
  OrgMinimaMiniscriptExpressionsFunctionExpression_initWithOrgMinimaMiniscriptFunctionsMinimaFunction_(self, zFunction);
  return self;
}

- (OrgMinimaMiniscriptValuesValue *)getValueWithOrgMinimaMiniscriptContract:(OrgMinimaMiniscriptContract *)zContract {
  [((OrgMinimaMiniscriptContract *) nil_chk(zContract)) countInstructions];
  return [((OrgMinimaMiniscriptFunctionsMinimaFunction *) nil_chk(mFunction_)) runFunctionWithOrgMinimaMiniscriptContract:zContract];
}

- (NSString *)description {
  return JreStrcat("$$$@", @"function:", [((OrgMinimaMiniscriptFunctionsMinimaFunction *) nil_chk(mFunction_)) getName], @", params:", [((OrgMinimaMiniscriptFunctionsMinimaFunction *) nil_chk(mFunction_)) getAllParameters]);
}

- (void)dealloc {
  RELEASE_(mFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaMiniscriptValuesValue;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgMinimaMiniscriptFunctionsMinimaFunction:);
  methods[1].selector = @selector(getValueWithOrgMinimaMiniscriptContract:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mFunction_", "LOrgMinimaMiniscriptFunctionsMinimaFunction;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaMiniscriptFunctionsMinimaFunction;", "getValue", "LOrgMinimaMiniscriptContract;", "LOrgMinimaMiniscriptExceptionsExecutionException;", "toString" };
  static const J2ObjcClassInfo _OrgMinimaMiniscriptExpressionsFunctionExpression = { "FunctionExpression", "org.minima.miniscript.expressions", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgMinimaMiniscriptExpressionsFunctionExpression;
}

@end

void OrgMinimaMiniscriptExpressionsFunctionExpression_initWithOrgMinimaMiniscriptFunctionsMinimaFunction_(OrgMinimaMiniscriptExpressionsFunctionExpression *self, OrgMinimaMiniscriptFunctionsMinimaFunction *zFunction) {
  NSObject_init(self);
  JreStrongAssign(&self->mFunction_, zFunction);
}

OrgMinimaMiniscriptExpressionsFunctionExpression *new_OrgMinimaMiniscriptExpressionsFunctionExpression_initWithOrgMinimaMiniscriptFunctionsMinimaFunction_(OrgMinimaMiniscriptFunctionsMinimaFunction *zFunction) {
  J2OBJC_NEW_IMPL(OrgMinimaMiniscriptExpressionsFunctionExpression, initWithOrgMinimaMiniscriptFunctionsMinimaFunction_, zFunction)
}

OrgMinimaMiniscriptExpressionsFunctionExpression *create_OrgMinimaMiniscriptExpressionsFunctionExpression_initWithOrgMinimaMiniscriptFunctionsMinimaFunction_(OrgMinimaMiniscriptFunctionsMinimaFunction *zFunction) {
  J2OBJC_CREATE_IMPL(OrgMinimaMiniscriptExpressionsFunctionExpression, initWithOrgMinimaMiniscriptFunctionsMinimaFunction_, zFunction)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaMiniscriptExpressionsFunctionExpression)
