//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/miniscript/functions/base/RPLVAR.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/minima/miniscript/Contract.h"
#include "org/minima/miniscript/expressions/Expression.h"
#include "org/minima/miniscript/functions/MinimaFunction.h"
#include "org/minima/miniscript/functions/base/RPLVAR.h"
#include "org/minima/miniscript/tokens/Token.h"
#include "org/minima/miniscript/values/ScriptValue.h"
#include "org/minima/miniscript/values/Value.h"

@implementation OrgMinimaMiniscriptFunctionsBaseRPLVAR

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaMiniscriptFunctionsBaseRPLVAR_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgMinimaMiniscriptValuesValue *)runFunctionWithOrgMinimaMiniscriptContract:(OrgMinimaMiniscriptContract *)zContract {
  OrgMinimaMiniscriptValuesScriptValue *script = (OrgMinimaMiniscriptValuesScriptValue *) cast_chk([((id<OrgMinimaMiniscriptExpressionsExpression>) nil_chk([self getParameterWithInt:0])) getValueWithOrgMinimaMiniscriptContract:zContract], [OrgMinimaMiniscriptValuesScriptValue class]);
  NSString *ss = [((OrgMinimaMiniscriptValuesScriptValue *) nil_chk(script)) description];
  OrgMinimaMiniscriptValuesScriptValue *var = (OrgMinimaMiniscriptValuesScriptValue *) cast_chk([((id<OrgMinimaMiniscriptExpressionsExpression>) nil_chk([self getParameterWithInt:1])) getValueWithOrgMinimaMiniscriptContract:zContract], [OrgMinimaMiniscriptValuesScriptValue class]);
  OrgMinimaMiniscriptValuesScriptValue *exp = (OrgMinimaMiniscriptValuesScriptValue *) cast_chk([((id<OrgMinimaMiniscriptExpressionsExpression>) nil_chk([self getParameterWithInt:2])) getValueWithOrgMinimaMiniscriptContract:zContract], [OrgMinimaMiniscriptValuesScriptValue class]);
  NSString *search = JreStrcat("$@$", @"LET ", var, @" = ");
  jint len = [search java_length];
  jint index = [((NSString *) nil_chk(ss)) java_indexOfString:search];
  if (index == -1) {
    return create_OrgMinimaMiniscriptValuesScriptValue_initWithNSString_(ss);
  }
  jint start = index + len;
  jint end = [((NSString *) nil_chk([script description])) java_length];
  {
    IOSObjectArray *a__ = JreLoadStatic(OrgMinimaMiniscriptTokensToken, TOKENS_COMMAND);
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *command = *b__++;
      jint comm = [ss java_indexOfString:command fromIndex:start];
      if (comm != -1) {
        if (comm < end) {
          end = comm;
        }
      }
    }
  }
  NSString *ret = [ss java_substring:0 endIndex:start];
  JreStrAppend(&ret, "C$C", ' ', [((OrgMinimaMiniscriptValuesScriptValue *) nil_chk(exp)) description], ' ');
  JreStrAppend(&ret, "$", [ss java_substring:end]);
  return create_OrgMinimaMiniscriptValuesScriptValue_initWithNSString_(ret);
}

- (OrgMinimaMiniscriptFunctionsMinimaFunction *)getNewFunction {
  return create_OrgMinimaMiniscriptFunctionsBaseRPLVAR_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaMiniscriptValuesValue;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgMinimaMiniscriptFunctionsMinimaFunction;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(runFunctionWithOrgMinimaMiniscriptContract:);
  methods[2].selector = @selector(getNewFunction);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "runFunction", "LOrgMinimaMiniscriptContract;", "LOrgMinimaMiniscriptExceptionsExecutionException;" };
  static const J2ObjcClassInfo _OrgMinimaMiniscriptFunctionsBaseRPLVAR = { "RPLVAR", "org.minima.miniscript.functions.base", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaMiniscriptFunctionsBaseRPLVAR;
}

@end

void OrgMinimaMiniscriptFunctionsBaseRPLVAR_init(OrgMinimaMiniscriptFunctionsBaseRPLVAR *self) {
  OrgMinimaMiniscriptFunctionsMinimaFunction_initWithNSString_(self, @"RPLVAR");
}

OrgMinimaMiniscriptFunctionsBaseRPLVAR *new_OrgMinimaMiniscriptFunctionsBaseRPLVAR_init() {
  J2OBJC_NEW_IMPL(OrgMinimaMiniscriptFunctionsBaseRPLVAR, init)
}

OrgMinimaMiniscriptFunctionsBaseRPLVAR *create_OrgMinimaMiniscriptFunctionsBaseRPLVAR_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaMiniscriptFunctionsBaseRPLVAR, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaMiniscriptFunctionsBaseRPLVAR)
