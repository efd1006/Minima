//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/system/backup/SyncPackage.java
//

#include "J2ObjC_source.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutputStream.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "org/minima/database/mmr/MMRSet.h"
#include "org/minima/database/txpowtree/BlockTree.h"
#include "org/minima/database/txpowtree/BlockTreeNode.h"
#include "org/minima/database/txpowtree/MultiLevelCascadeTree.h"
#include "org/minima/objects/TxPOW.h"
#include "org/minima/objects/base/MiniNumber.h"
#include "org/minima/system/backup/SyncPackage.h"
#include "org/minima/system/backup/SyncPacket.h"

@implementation OrgMinimaSystemBackupSyncPackage

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaSystemBackupSyncPackage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setCascadeNodeWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zNumber {
  mCascadeNode_ = zNumber;
}

- (OrgMinimaObjectsBaseMiniNumber *)getCascadeNode {
  return mCascadeNode_;
}

- (JavaUtilArrayList *)getAllNodes {
  return mNodes_;
}

- (JavaMathBigInteger *)calculateWeight {
  OrgMinimaDatabaseTxpowtreeBlockTree *blktree = new_OrgMinimaDatabaseTxpowtreeBlockTree_init();
  for (OrgMinimaSystemBackupSyncPacket * __strong spack in nil_chk(mNodes_)) {
    OrgMinimaObjectsTxPOW *txpow = [((OrgMinimaSystemBackupSyncPacket *) nil_chk(spack)) getTxPOW];
    OrgMinimaDatabaseMmrMMRSet *mmr = [spack getMMRSet];
    jboolean cascade = [spack isCascade];
    OrgMinimaDatabaseTxpowtreeBlockTreeNode *node = new_OrgMinimaDatabaseTxpowtreeBlockTreeNode_initWithOrgMinimaObjectsTxPOW_(txpow);
    [node setCascadeWithBoolean:cascade];
    [node setStateWithInt:OrgMinimaDatabaseTxpowtreeBlockTreeNode_BLOCKSTATE_VALID];
    [node setMMRsetWithOrgMinimaDatabaseMmrMMRSet:mmr];
    [blktree hardAddNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:node withBoolean:true];
    if ([((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk(txpow)) getBlockNumber])) isEqualWithOrgMinimaObjectsBaseMiniNumber:[self getCascadeNode]]) {
      [blktree hardSetCascadeNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:node];
    }
  }
  OrgMinimaDatabaseTxpowtreeMultiLevelCascadeTree *casc = new_OrgMinimaDatabaseTxpowtreeMultiLevelCascadeTree_initWithOrgMinimaDatabaseTxpowtreeBlockTree_(blktree);
  (void) [casc cascadedTree];
  OrgMinimaDatabaseTxpowtreeBlockTree *newtree = [casc getCascadeTree];
  JavaMathBigInteger *totweight = [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(newtree)) getChainRoot])) getTotalWeight];
  return totweight;
}

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut {
  jint len = [((JavaUtilArrayList *) nil_chk(mNodes_)) size];
  [((JavaIoDataOutputStream *) nil_chk(zOut)) writeIntWithInt:len];
  for (OrgMinimaSystemBackupSyncPacket * __strong node in nil_chk(mNodes_)) {
    [((OrgMinimaSystemBackupSyncPacket *) nil_chk(node)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  }
  [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(mCascadeNode_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
}

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  jint len = [((JavaIoDataInputStream *) nil_chk(zIn)) readInt];
  for (jint i = 0; i < len; i++) {
    OrgMinimaSystemBackupSyncPacket *node = new_OrgMinimaSystemBackupSyncPacket_init();
    [node readDataStreamWithJavaIoDataInputStream:zIn];
    [((JavaUtilArrayList *) nil_chk(mNodes_)) addWithId:node];
  }
  mCascadeNode_ = OrgMinimaObjectsBaseMiniNumber_ReadFromStreamWithJavaIoDataInputStream_(zIn);
}

- (NSString *)description {
  NSString *ret = @"";
  for (OrgMinimaSystemBackupSyncPacket * __strong node in nil_chk(mNodes_)) {
    (void) JreStrAppendStrong(&ret, "@C", node, ',');
  }
  return ret;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setCascadeNodeWithOrgMinimaObjectsBaseMiniNumber:);
  methods[2].selector = @selector(getCascadeNode);
  methods[3].selector = @selector(getAllNodes);
  methods[4].selector = @selector(calculateWeight);
  methods[5].selector = @selector(writeDataStreamWithJavaIoDataOutputStream:);
  methods[6].selector = @selector(readDataStreamWithJavaIoDataInputStream:);
  methods[7].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mCascadeNode_", "LOrgMinimaObjectsBaseMiniNumber;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mNodes_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x0, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "setCascadeNode", "LOrgMinimaObjectsBaseMiniNumber;", "()Ljava/util/ArrayList<Lorg/minima/system/backup/SyncPacket;>;", "writeDataStream", "LJavaIoDataOutputStream;", "LJavaIoIOException;", "readDataStream", "LJavaIoDataInputStream;", "toString", "Ljava/util/ArrayList<Lorg/minima/system/backup/SyncPacket;>;" };
  static const J2ObjcClassInfo _OrgMinimaSystemBackupSyncPackage = { "SyncPackage", "org.minima.system.backup", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgMinimaSystemBackupSyncPackage;
}

@end

void OrgMinimaSystemBackupSyncPackage_init(OrgMinimaSystemBackupSyncPackage *self) {
  NSObject_init(self);
  self->mNodes_ = new_JavaUtilArrayList_init();
  self->mCascadeNode_ = JreLoadStatic(OrgMinimaObjectsBaseMiniNumber, ZERO);
}

OrgMinimaSystemBackupSyncPackage *new_OrgMinimaSystemBackupSyncPackage_init() {
  J2OBJC_NEW_IMPL(OrgMinimaSystemBackupSyncPackage, init)
}

OrgMinimaSystemBackupSyncPackage *create_OrgMinimaSystemBackupSyncPackage_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaSystemBackupSyncPackage, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaSystemBackupSyncPackage)
