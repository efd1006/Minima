//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/system/input/CommandFunction.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/minima/system/Main.h"
#include "org/minima/system/input/CommandFunction.h"
#include "org/minima/system/input/InputHandler.h"
#include "org/minima/system/input/functions/backup.h"
#include "org/minima/system/input/functions/balance.h"
#include "org/minima/system/input/functions/coins.h"
#include "org/minima/system/input/functions/connect.h"
#include "org/minima/system/input/functions/createtoken.h"
#include "org/minima/system/input/functions/disconnect.h"
#include "org/minima/system/input/functions/gimme50.h"
#include "org/minima/system/input/functions/help.h"
#include "org/minima/system/input/functions/intro.h"
#include "org/minima/system/input/functions/keys.h"
#include "org/minima/system/input/functions/minetrans.h"
#include "org/minima/system/input/functions/newaddress.h"
#include "org/minima/system/input/functions/newscript.h"
#include "org/minima/system/input/functions/printchain.h"
#include "org/minima/system/input/functions/printtree.h"
#include "org/minima/system/input/functions/quit.h"
#include "org/minima/system/input/functions/reconnect.h"
#include "org/minima/system/input/functions/runscript.h"
#include "org/minima/system/input/functions/send.h"
#include "org/minima/system/input/functions/status.h"
#include "org/minima/system/input/functions/test.h"
#include "org/minima/system/input/functions/trace.h"
#include "org/minima/system/input/functions/transfer/exportkey.h"
#include "org/minima/system/input/functions/transfer/importkey.h"
#include "org/minima/system/input/functions/tutorial.h"
#include "org/minima/system/input/functions/txns/txncreate.h"
#include "org/minima/system/input/functions/txns/txndelete.h"
#include "org/minima/system/input/functions/txns/txninput.h"
#include "org/minima/system/input/functions/txns/txnlist.h"
#include "org/minima/system/input/functions/txns/txnoutput.h"
#include "org/minima/system/input/functions/txns/txnpost.h"
#include "org/minima/system/input/functions/txns/txnsign.h"
#include "org/minima/system/input/functions/txns/txnvalidate.h"
#include "org/minima/system/input/functions/txpowinfo.h"
#include "org/minima/system/input/functions/weblink.h"
#include "org/minima/utils/ResponseStream.h"
#include "org/minima/utils/messages/Message.h"

@interface OrgMinimaSystemInputCommandFunction () {
 @public
  NSString *mName_;
  OrgMinimaSystemMain *mMain_;
}

@end

J2OBJC_FIELD_SETTER(OrgMinimaSystemInputCommandFunction, mName_, NSString *)
J2OBJC_FIELD_SETTER(OrgMinimaSystemInputCommandFunction, mMain_, OrgMinimaSystemMain *)

J2OBJC_INITIALIZED_DEFN(OrgMinimaSystemInputCommandFunction)

IOSObjectArray *OrgMinimaSystemInputCommandFunction_ALL_FUNCTIONS;

@implementation OrgMinimaSystemInputCommandFunction

- (instancetype)initWithNSString:(NSString *)zName {
  OrgMinimaSystemInputCommandFunction_initWithNSString_(self, zName);
  return self;
}

- (OrgMinimaUtilsMessagesMessage *)getResponseMessageWithNSString:(NSString *)zMessageType {
  OrgMinimaUtilsMessagesMessage *msg = create_OrgMinimaUtilsMessagesMessage_initWithNSString_(zMessageType);
  [msg addObjectWithNSString:OrgMinimaSystemInputInputHandler_INPUT_RESPONSE withId:mResponse_];
  return msg;
}

- (void)setHelpWithNSString:(NSString *)zParams
               withNSString:(NSString *)zSimple
               withNSString:(NSString *)zDescription {
  JreStrongAssign(&mParams_, zParams);
  JreStrongAssign(&mSimple_, zSimple);
  JreStrongAssign(&mDescription_, zDescription);
}

- (NSString *)getName {
  return mName_;
}

- (NSString *)getParams {
  return mParams_;
}

- (NSString *)getSimple {
  return mSimple_;
}

- (NSString *)getDescription {
  return mDescription_;
}

- (void)setMainHandlerWithOrgMinimaSystemMain:(OrgMinimaSystemMain *)zMainHandler {
  JreStrongAssign(&mMain_, zMainHandler);
}

- (OrgMinimaSystemMain *)getMainHandler {
  return mMain_;
}

- (void)setResponseStreamWithOrgMinimaUtilsResponseStream:(OrgMinimaUtilsResponseStream *)zResponse {
  JreStrongAssign(&mResponse_, zResponse);
}

- (OrgMinimaUtilsResponseStream *)getResponseStream {
  return mResponse_;
}

- (void)doFunctionWithNSStringArray:(IOSObjectArray *)zInput {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (OrgMinimaSystemInputCommandFunction *)getNewFunction {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (OrgMinimaSystemInputCommandFunction *)getFunctionWithNSString:(NSString *)zFunction {
  return OrgMinimaSystemInputCommandFunction_getFunctionWithNSString_(zFunction);
}

- (void)dealloc {
  RELEASE_(mName_);
  RELEASE_(mMain_);
  RELEASE_(mParams_);
  RELEASE_(mSimple_);
  RELEASE_(mDescription_);
  RELEASE_(mResponse_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaUtilsMessagesMessage;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaSystemMain;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaUtilsResponseStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 8, 9, 10, -1, -1, -1 },
    { NULL, "LOrgMinimaSystemInputCommandFunction;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaSystemInputCommandFunction;", 0x9, 11, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getResponseMessageWithNSString:);
  methods[2].selector = @selector(setHelpWithNSString:withNSString:withNSString:);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(getParams);
  methods[5].selector = @selector(getSimple);
  methods[6].selector = @selector(getDescription);
  methods[7].selector = @selector(setMainHandlerWithOrgMinimaSystemMain:);
  methods[8].selector = @selector(getMainHandler);
  methods[9].selector = @selector(setResponseStreamWithOrgMinimaUtilsResponseStream:);
  methods[10].selector = @selector(getResponseStream);
  methods[11].selector = @selector(doFunctionWithNSStringArray:);
  methods[12].selector = @selector(getNewFunction);
  methods[13].selector = @selector(getFunctionWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ALL_FUNCTIONS", "[LOrgMinimaSystemInputCommandFunction;", .constantValue.asLong = 0, 0x9, -1, 12, -1, -1 },
    { "mName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mMain_", "LOrgMinimaSystemMain;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mParams_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mSimple_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mDescription_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mResponse_", "LOrgMinimaUtilsResponseStream;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "getResponseMessage", "setHelp", "LNSString;LNSString;LNSString;", "setMainHandler", "LOrgMinimaSystemMain;", "setResponseStream", "LOrgMinimaUtilsResponseStream;", "doFunction", "[LNSString;", "LJavaLangException;", "getFunction", &OrgMinimaSystemInputCommandFunction_ALL_FUNCTIONS };
  static const J2ObjcClassInfo _OrgMinimaSystemInputCommandFunction = { "CommandFunction", "org.minima.system.input", ptrTable, methods, fields, 7, 0x401, 14, 7, -1, -1, -1, -1, -1 };
  return &_OrgMinimaSystemInputCommandFunction;
}

+ (void)initialize {
  if (self == [OrgMinimaSystemInputCommandFunction class]) {
    JreStrongAssignAndConsume(&OrgMinimaSystemInputCommandFunction_ALL_FUNCTIONS, [IOSObjectArray newArrayWithObjects:(id[]){ create_OrgMinimaSystemInputFunctionsbackup_init(), create_OrgMinimaSystemInputFunctionsbalance_init(), create_OrgMinimaSystemInputFunctionsconnect_init(), create_OrgMinimaSystemInputFunctionscreatetoken_init(), create_OrgMinimaSystemInputFunctionsdisconnect_init(), create_OrgMinimaSystemInputFunctionsweblink_init(), create_OrgMinimaSystemInputFunctionsgimme50_init(), create_OrgMinimaSystemInputFunctionshelp_init(), create_OrgMinimaSystemInputFunctionsintro_init(), create_OrgMinimaSystemInputFunctionsminetrans_init(), create_OrgMinimaSystemInputFunctionsnewaddress_init(), create_OrgMinimaSystemInputFunctionscoins_init(), create_OrgMinimaSystemInputFunctionstxpowinfo_init(), create_OrgMinimaSystemInputFunctionskeys_init(), create_OrgMinimaSystemInputFunctionsnewscript_init(), create_OrgMinimaSystemInputFunctionsprintchain_init(), create_OrgMinimaSystemInputFunctionsprinttree_init(), create_OrgMinimaSystemInputFunctionsquit_init(), create_OrgMinimaSystemInputFunctionsreconnect_init(), create_OrgMinimaSystemInputFunctionsrunscript_init(), create_OrgMinimaSystemInputFunctionssend_init(), create_OrgMinimaSystemInputFunctionsstatus_init(), create_OrgMinimaSystemInputFunctionstest_init(), create_OrgMinimaSystemInputFunctionstrace_init(), create_OrgMinimaSystemInputFunctionstutorial_init(), create_OrgMinimaSystemInputFunctionsTransferexportkey_init(), create_OrgMinimaSystemInputFunctionsTransferimportkey_init(), create_OrgMinimaSystemInputFunctionsTxnstxncreate_init(), create_OrgMinimaSystemInputFunctionsTxnstxndelete_init(), create_OrgMinimaSystemInputFunctionsTxnstxninput_init(), create_OrgMinimaSystemInputFunctionsTxnstxnlist_init(), create_OrgMinimaSystemInputFunctionsTxnstxnoutput_init(), create_OrgMinimaSystemInputFunctionsTxnstxnpost_init(), create_OrgMinimaSystemInputFunctionsTxnstxnsign_init(), create_OrgMinimaSystemInputFunctionsTxnstxnvalidate_init() } count:35 type:OrgMinimaSystemInputCommandFunction_class_()]);
    J2OBJC_SET_INITIALIZED(OrgMinimaSystemInputCommandFunction)
  }
}

@end

void OrgMinimaSystemInputCommandFunction_initWithNSString_(OrgMinimaSystemInputCommandFunction *self, NSString *zName) {
  NSObject_init(self);
  JreStrongAssign(&self->mName_, zName);
  [self setHelpWithNSString:@"" withNSString:@"" withNSString:@""];
}

OrgMinimaSystemInputCommandFunction *OrgMinimaSystemInputCommandFunction_getFunctionWithNSString_(NSString *zFunction) {
  OrgMinimaSystemInputCommandFunction_initialize();
  {
    IOSObjectArray *a__ = OrgMinimaSystemInputCommandFunction_ALL_FUNCTIONS;
    OrgMinimaSystemInputCommandFunction * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgMinimaSystemInputCommandFunction * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgMinimaSystemInputCommandFunction *func = *b__++;
      if ([((NSString *) nil_chk([((OrgMinimaSystemInputCommandFunction *) nil_chk(func)) getName])) java_equalsIgnoreCase:zFunction]) {
        return [func getNewFunction];
      }
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaSystemInputCommandFunction)
