//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/system/tx/TXMiner.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/Random.h"
#include "org/minima/objects/Difficulty.h"
#include "org/minima/objects/TxPOW.h"
#include "org/minima/objects/base/MiniData32.h"
#include "org/minima/objects/base/MiniNumber.h"
#include "org/minima/system/Main.h"
#include "org/minima/system/SystemHandler.h"
#include "org/minima/system/brains/ConsensusHandler.h"
#include "org/minima/system/tx/TXMiner.h"
#include "org/minima/utils/Crypto.h"
#include "org/minima/utils/MinimaLogger.h"
#include "org/minima/utils/messages/Message.h"

NSString *OrgMinimaSystemTxTXMiner_TXMINER_TESTHASHING = @"MINE_TESTHASHING";
NSString *OrgMinimaSystemTxTXMiner_TXMINER_MINETXPOW = @"MINE_TXPOW";

@implementation OrgMinimaSystemTxTXMiner

- (instancetype)initWithOrgMinimaSystemMain:(OrgMinimaSystemMain *)zMain {
  OrgMinimaSystemTxTXMiner_initWithOrgMinimaSystemMain_(self, zMain);
  return self;
}

- (void)processMessageWithOrgMinimaUtilsMessagesMessage:(OrgMinimaUtilsMessagesMessage *)zMessage {
  if ([((OrgMinimaUtilsMessagesMessage *) nil_chk(zMessage)) isMessageTypeWithNSString:OrgMinimaSystemTxTXMiner_TXMINER_MINETXPOW]) {
    OrgMinimaObjectsTxPOW *txpow = (OrgMinimaObjectsTxPOW *) cast_chk([zMessage getObjectWithNSString:@"txpow"], [OrgMinimaObjectsTxPOW class]);
    OrgMinimaObjectsDifficulty *txdiff = create_OrgMinimaObjectsDifficulty_initWithInt_([((OrgMinimaObjectsTxPOW *) nil_chk(txpow)) getTxnDifficulty]);
    JavaUtilRandom *rand = create_JavaUtilRandom_init();
    OrgMinimaObjectsBaseMiniNumber *nonce = JreLoadStatic(OrgMinimaObjectsBaseMiniNumber, ZERO);
    OrgMinimaObjectsBaseMiniData32 *hash_ = nil;
    jboolean mining = true;
    while (mining) {
      [txpow setNonceWithOrgMinimaObjectsBaseMiniNumber:nonce];
      hash_ = [((OrgMinimaUtilsCrypto *) nil_chk(OrgMinimaUtilsCrypto_getInstance())) hashObjectWithOrgMinimaUtilsStreamable:txpow];
      if ([txdiff isOKWithOrgMinimaObjectsBaseMiniData32:hash_]) {
        mining = false;
      }
      nonce = [((OrgMinimaObjectsBaseMiniNumber *) nil_chk(nonce)) increment];
    }
    [txpow calculateTXPOWID];
    OrgMinimaUtilsMessagesMessage *msg = [create_OrgMinimaUtilsMessagesMessage_initWithNSString_(OrgMinimaSystemBrainsConsensusHandler_CONSENSUS_PRE_PROCESSTXPOW) addObjectWithNSString:@"txpow" withId:txpow];
    [((OrgMinimaSystemBrainsConsensusHandler *) nil_chk([((OrgMinimaSystemMain *) nil_chk([self getMainHandler])) getConsensusHandler])) PostMessageWithOrgMinimaUtilsMessagesMessage:msg];
  }
  else if ([zMessage isMessageTypeWithNSString:OrgMinimaSystemTxTXMiner_TXMINER_TESTHASHING]) {
    jlong timenow = JavaLangSystem_currentTimeMillis();
    IOSByteArray *data = [IOSByteArray arrayWithLength:32];
    OrgMinimaUtilsMinimaLogger_logWithNSString_(@"Testing hashing on this machine.. please wait..");
    for (jint i = 0; i < 10000000; i++) {
      IOSByteArray *hash_ = [((OrgMinimaUtilsCrypto *) nil_chk(OrgMinimaUtilsCrypto_getInstance())) hashDataWithByteArray:data];
    }
    jdouble diff = (jdouble) (JavaLangSystem_currentTimeMillis() - timenow) / (jdouble) 1000;
    OrgMinimaUtilsMinimaLogger_logWithNSString_(JreStrcat("$D$", @"Finished. 10,000,000 hashes took ", diff, @" seconds"));
    jdouble speed = (10000000 / diff) / 1000000;
    OrgMinimaUtilsMinimaLogger_logWithNSString_(JreStrcat("$D$", @"Speed : ", speed, @" MHashes/sec"));
  }
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs {
  OrgMinimaSystemTxTXMiner_mainWithNSStringArray_(zArgs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgMinimaSystemMain:);
  methods[1].selector = @selector(processMessageWithOrgMinimaUtilsMessagesMessage:);
  methods[2].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_TXN", "I", .constantValue.asInt = OrgMinimaSystemTxTXMiner_BASE_TXN, 0x19, -1, -1, -1, -1 },
    { "BASE_BLOCK", "I", .constantValue.asInt = OrgMinimaSystemTxTXMiner_BASE_BLOCK, 0x19, -1, -1, -1, -1 },
    { "TXMINER_TESTHASHING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "TXMINER_MINETXPOW", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaSystemMain;", "processMessage", "LOrgMinimaUtilsMessagesMessage;", "LJavaLangException;", "main", "[LNSString;", &OrgMinimaSystemTxTXMiner_TXMINER_TESTHASHING, &OrgMinimaSystemTxTXMiner_TXMINER_MINETXPOW };
  static const J2ObjcClassInfo _OrgMinimaSystemTxTXMiner = { "TXMiner", "org.minima.system.tx", ptrTable, methods, fields, 7, 0x1, 3, 4, -1, -1, -1, -1, -1 };
  return &_OrgMinimaSystemTxTXMiner;
}

@end

void OrgMinimaSystemTxTXMiner_initWithOrgMinimaSystemMain_(OrgMinimaSystemTxTXMiner *self, OrgMinimaSystemMain *zMain) {
  OrgMinimaSystemSystemHandler_initWithOrgMinimaSystemMain_withNSString_(self, zMain, @"TXMINER");
}

OrgMinimaSystemTxTXMiner *new_OrgMinimaSystemTxTXMiner_initWithOrgMinimaSystemMain_(OrgMinimaSystemMain *zMain) {
  J2OBJC_NEW_IMPL(OrgMinimaSystemTxTXMiner, initWithOrgMinimaSystemMain_, zMain)
}

OrgMinimaSystemTxTXMiner *create_OrgMinimaSystemTxTXMiner_initWithOrgMinimaSystemMain_(OrgMinimaSystemMain *zMain) {
  J2OBJC_CREATE_IMPL(OrgMinimaSystemTxTXMiner, initWithOrgMinimaSystemMain_, zMain)
}

void OrgMinimaSystemTxTXMiner_mainWithNSStringArray_(IOSObjectArray *zArgs) {
  OrgMinimaSystemTxTXMiner_initialize();
  for (jint i = 0; i < 256; i++) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("I$@", i, @" \t: ", create_OrgMinimaObjectsDifficulty_initWithInt_(i))];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaSystemTxTXMiner)
