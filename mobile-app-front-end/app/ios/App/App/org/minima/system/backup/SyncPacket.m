//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/system/backup/SyncPacket.java
//

#include "J2ObjC_source.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutputStream.h"
#include "org/minima/database/mmr/MMRSet.h"
#include "org/minima/database/txpowtree/BlockTreeNode.h"
#include "org/minima/objects/TxPOW.h"
#include "org/minima/objects/base/MiniByte.h"
#include "org/minima/system/backup/SyncPacket.h"

@implementation OrgMinimaSystemBackupSyncPacket

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaSystemBackupSyncPacket_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode {
  OrgMinimaSystemBackupSyncPacket_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, zNode);
  return self;
}

- (instancetype)initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode
                                                    withBoolean:(jboolean)zClearMMR {
  OrgMinimaSystemBackupSyncPacket_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withBoolean_(self, zNode, zClearMMR);
  return self;
}

- (OrgMinimaDatabaseMmrMMRSet *)getMMRSet {
  return mMMR_;
}

- (OrgMinimaObjectsTxPOW *)getTxPOW {
  return mTxPOW_;
}

- (jboolean)isCascade {
  return mCascadeNode_;
}

- (NSString *)description {
  return JreStrcat("$ZC@", @"MMR:", (!mCascadeNode_), ' ', mTxPOW_);
}

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut {
  [((OrgMinimaObjectsTxPOW *) nil_chk(mTxPOW_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  if (mCascadeNode_) {
    [((OrgMinimaObjectsBaseMiniByte *) nil_chk(JreLoadStatic(OrgMinimaObjectsBaseMiniByte, TRUE))) writeDataStreamWithJavaIoDataOutputStream:zOut];
  }
  else {
    [((OrgMinimaObjectsBaseMiniByte *) nil_chk(JreLoadStatic(OrgMinimaObjectsBaseMiniByte, FALSE))) writeDataStreamWithJavaIoDataOutputStream:zOut];
  }
  if (mMMR_ == nil) {
    [((OrgMinimaObjectsBaseMiniByte *) nil_chk(JreLoadStatic(OrgMinimaObjectsBaseMiniByte, FALSE))) writeDataStreamWithJavaIoDataOutputStream:zOut];
  }
  else {
    [((OrgMinimaObjectsBaseMiniByte *) nil_chk(JreLoadStatic(OrgMinimaObjectsBaseMiniByte, TRUE))) writeDataStreamWithJavaIoDataOutputStream:zOut];
    [((OrgMinimaDatabaseMmrMMRSet *) nil_chk(mMMR_)) writeDataStreamWithJavaIoDataOutputStream:zOut];
  }
}

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn {
  mTxPOW_ = new_OrgMinimaObjectsTxPOW_init();
  [mTxPOW_ readDataStreamWithJavaIoDataInputStream:zIn];
  OrgMinimaObjectsBaseMiniByte *casc = OrgMinimaObjectsBaseMiniByte_ReadFromStreamWithJavaIoDataInputStream_(zIn);
  mCascadeNode_ = [((OrgMinimaObjectsBaseMiniByte *) nil_chk(casc)) isTrue];
  OrgMinimaObjectsBaseMiniByte *mmr = OrgMinimaObjectsBaseMiniByte_ReadFromStreamWithJavaIoDataInputStream_(zIn);
  mMMR_ = nil;
  if ([((OrgMinimaObjectsBaseMiniByte *) nil_chk(mmr)) isTrue]) {
    mMMR_ = new_OrgMinimaDatabaseMmrMMRSet_init();
    [mMMR_ readDataStreamWithJavaIoDataInputStream:zIn];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaDatabaseMmrMMRSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsTxPOW;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:);
  methods[2].selector = @selector(initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:withBoolean:);
  methods[3].selector = @selector(getMMRSet);
  methods[4].selector = @selector(getTxPOW);
  methods[5].selector = @selector(isCascade);
  methods[6].selector = @selector(description);
  methods[7].selector = @selector(writeDataStreamWithJavaIoDataOutputStream:);
  methods[8].selector = @selector(readDataStreamWithJavaIoDataInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mTxPOW_", "LOrgMinimaObjectsTxPOW;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mCascadeNode_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mMMR_", "LOrgMinimaDatabaseMmrMMRSet;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;Z", "toString", "writeDataStream", "LJavaIoDataOutputStream;", "LJavaIoIOException;", "readDataStream", "LJavaIoDataInputStream;" };
  static const J2ObjcClassInfo _OrgMinimaSystemBackupSyncPacket = { "SyncPacket", "org.minima.system.backup", ptrTable, methods, fields, 7, 0x1, 9, 3, -1, -1, -1, -1, -1 };
  return &_OrgMinimaSystemBackupSyncPacket;
}

@end

void OrgMinimaSystemBackupSyncPacket_init(OrgMinimaSystemBackupSyncPacket *self) {
  NSObject_init(self);
}

OrgMinimaSystemBackupSyncPacket *new_OrgMinimaSystemBackupSyncPacket_init() {
  J2OBJC_NEW_IMPL(OrgMinimaSystemBackupSyncPacket, init)
}

OrgMinimaSystemBackupSyncPacket *create_OrgMinimaSystemBackupSyncPacket_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaSystemBackupSyncPacket, init)
}

void OrgMinimaSystemBackupSyncPacket_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaSystemBackupSyncPacket *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode) {
  OrgMinimaSystemBackupSyncPacket_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withBoolean_(self, zNode, false);
}

OrgMinimaSystemBackupSyncPacket *new_OrgMinimaSystemBackupSyncPacket_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode) {
  J2OBJC_NEW_IMPL(OrgMinimaSystemBackupSyncPacket, initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_, zNode)
}

OrgMinimaSystemBackupSyncPacket *create_OrgMinimaSystemBackupSyncPacket_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode) {
  J2OBJC_CREATE_IMPL(OrgMinimaSystemBackupSyncPacket, initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_, zNode)
}

void OrgMinimaSystemBackupSyncPacket_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withBoolean_(OrgMinimaSystemBackupSyncPacket *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode, jboolean zClearMMR) {
  NSObject_init(self);
  self->mTxPOW_ = [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zNode)) getTxPow];
  self->mCascadeNode_ = [zNode isCascade];
  if (zClearMMR) {
    self->mMMR_ = nil;
  }
  else {
    self->mMMR_ = [zNode getMMRSet];
  }
}

OrgMinimaSystemBackupSyncPacket *new_OrgMinimaSystemBackupSyncPacket_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withBoolean_(OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode, jboolean zClearMMR) {
  J2OBJC_NEW_IMPL(OrgMinimaSystemBackupSyncPacket, initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withBoolean_, zNode, zClearMMR)
}

OrgMinimaSystemBackupSyncPacket *create_OrgMinimaSystemBackupSyncPacket_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withBoolean_(OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode, jboolean zClearMMR) {
  J2OBJC_CREATE_IMPL(OrgMinimaSystemBackupSyncPacket, initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withBoolean_, zNode, zClearMMR)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaSystemBackupSyncPacket)
