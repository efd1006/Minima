//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/system/network/minidapps/DAPPServer.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/net/BindException.h"
#include "java/net/ServerSocket.h"
#include "java/net/Socket.h"
#include "java/net/SocketException.h"
#include "org/minima/system/network/minidapps/DAPPHandler.h"
#include "org/minima/system/network/minidapps/DAPPManager.h"
#include "org/minima/system/network/minidapps/DAPPServer.h"
#include "org/minima/utils/MinimaLogger.h"

@implementation OrgMinimaSystemNetworkMinidappsDAPPServer

- (instancetype)initWithInt:(jint)zPort
withOrgMinimaSystemNetworkMinidappsDAPPManager:(OrgMinimaSystemNetworkMinidappsDAPPManager *)zDAPPMAnager {
  OrgMinimaSystemNetworkMinidappsDAPPServer_initWithInt_withOrgMinimaSystemNetworkMinidappsDAPPManager_(self, zPort, zDAPPMAnager);
  return self;
}

- (jint)getPort {
  return mPort_;
}

- (NSString *)getHost {
  return mHost_;
}

- (void)stop {
  mRunning_ = false;
  @try {
    if (mServerSocket_ != nil) {
      [mServerSocket_ close];
    }
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
  }
}

- (void)run {
  @try {
    mServerSocket_ = new_JavaNetServerSocket_initWithInt_(mPort_);
    while (mRunning_) {
      JavaNetSocket *clientsock = [((JavaNetServerSocket *) nil_chk(mServerSocket_)) accept];
      OrgMinimaSystemNetworkMinidappsDAPPHandler *rpc = new_OrgMinimaSystemNetworkMinidappsDAPPHandler_initWithJavaNetSocket_withOrgMinimaSystemNetworkMinidappsDAPPManager_(clientsock, mDAPPMAnager_);
      JavaLangThread *rpcthread = new_JavaLangThread_initWithJavaLangRunnable_(rpc);
      [rpcthread start];
    }
  }
  @catch (JavaNetBindException *e) {
    OrgMinimaUtilsMinimaLogger_logWithNSString_(JreStrcat("$I$", @"DAPPServer : Port ", mPort_, @" already in use!.. restart required.."));
  }
  @catch (JavaNetSocketException *e) {
    if (mRunning_) {
      OrgMinimaUtilsMinimaLogger_logWithNSString_(JreStrcat("$@", @"DAPPServer : Socket Shutdown.. ", e));
    }
  }
  @catch (JavaIoIOException *e) {
    [e printStackTrace];
  }
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"DAPP Server stopped"];
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs {
  OrgMinimaSystemNetworkMinidappsDAPPServer_mainWithNSStringArray_(zArgs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withOrgMinimaSystemNetworkMinidappsDAPPManager:);
  methods[1].selector = @selector(getPort);
  methods[2].selector = @selector(getHost);
  methods[3].selector = @selector(stop);
  methods[4].selector = @selector(run);
  methods[5].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mServerSocket_", "LJavaNetServerSocket;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mDAPPMAnager_", "LOrgMinimaSystemNetworkMinidappsDAPPManager;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mPort_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mHost_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mRunning_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILOrgMinimaSystemNetworkMinidappsDAPPManager;", "main", "[LNSString;" };
  static const J2ObjcClassInfo _OrgMinimaSystemNetworkMinidappsDAPPServer = { "DAPPServer", "org.minima.system.network.minidapps", ptrTable, methods, fields, 7, 0x1, 6, 5, -1, -1, -1, -1, -1 };
  return &_OrgMinimaSystemNetworkMinidappsDAPPServer;
}

@end

void OrgMinimaSystemNetworkMinidappsDAPPServer_initWithInt_withOrgMinimaSystemNetworkMinidappsDAPPManager_(OrgMinimaSystemNetworkMinidappsDAPPServer *self, jint zPort, OrgMinimaSystemNetworkMinidappsDAPPManager *zDAPPMAnager) {
  NSObject_init(self);
  self->mRunning_ = true;
  self->mPort_ = zPort;
  self->mHost_ = @"127.0.0.1";
  self->mDAPPMAnager_ = zDAPPMAnager;
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$CI", @"DAPP Server started on ", self->mHost_, ':', self->mPort_)];
}

OrgMinimaSystemNetworkMinidappsDAPPServer *new_OrgMinimaSystemNetworkMinidappsDAPPServer_initWithInt_withOrgMinimaSystemNetworkMinidappsDAPPManager_(jint zPort, OrgMinimaSystemNetworkMinidappsDAPPManager *zDAPPMAnager) {
  J2OBJC_NEW_IMPL(OrgMinimaSystemNetworkMinidappsDAPPServer, initWithInt_withOrgMinimaSystemNetworkMinidappsDAPPManager_, zPort, zDAPPMAnager)
}

OrgMinimaSystemNetworkMinidappsDAPPServer *create_OrgMinimaSystemNetworkMinidappsDAPPServer_initWithInt_withOrgMinimaSystemNetworkMinidappsDAPPManager_(jint zPort, OrgMinimaSystemNetworkMinidappsDAPPManager *zDAPPMAnager) {
  J2OBJC_CREATE_IMPL(OrgMinimaSystemNetworkMinidappsDAPPServer, initWithInt_withOrgMinimaSystemNetworkMinidappsDAPPManager_, zPort, zDAPPMAnager)
}

void OrgMinimaSystemNetworkMinidappsDAPPServer_mainWithNSStringArray_(IOSObjectArray *zArgs) {
  OrgMinimaSystemNetworkMinidappsDAPPServer_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Finished.."];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaSystemNetworkMinidappsDAPPServer)
