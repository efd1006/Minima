//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/system/network/NetClient.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaSystemNetworkNetClient")
#ifdef RESTRICT_OrgMinimaSystemNetworkNetClient
#define INCLUDE_ALL_OrgMinimaSystemNetworkNetClient 0
#else
#define INCLUDE_ALL_OrgMinimaSystemNetworkNetClient 1
#endif
#undef RESTRICT_OrgMinimaSystemNetworkNetClient

#if !defined (OrgMinimaSystemNetworkNetClient_) && (INCLUDE_ALL_OrgMinimaSystemNetworkNetClient || defined(INCLUDE_OrgMinimaSystemNetworkNetClient))
#define OrgMinimaSystemNetworkNetClient_

#define RESTRICT_OrgMinimaUtilsMessagesMessageProcessor 1
#define INCLUDE_OrgMinimaUtilsMessagesMessageProcessor 1
#include "org/minima/utils/messages/MessageProcessor.h"

@class JavaIoDataOutputStream;
@class JavaLangThread;
@class JavaNetSocket;
@class OrgMinimaSystemNetworkNetClientReader;
@class OrgMinimaSystemNetworkNetworkHandler;
@class OrgMinimaUtilsJsonJSONObject;
@class OrgMinimaUtilsMessagesMessage;
@protocol OrgMinimaUtilsStreamable;

@interface OrgMinimaSystemNetworkNetClient : OrgMinimaUtilsMessagesMessageProcessor {
 @public
  OrgMinimaSystemNetworkNetworkHandler *mNetworkMain_;
  JavaNetSocket *mSocket_;
  JavaIoDataOutputStream *mOutput_;
  JavaLangThread *mInputThread_;
  OrgMinimaSystemNetworkNetClientReader *mInputReader_;
  NSString *mUID_;
  NSString *mHost_;
  jint mPort_;
  jboolean mReconnect_;
  jint mReconnectAttempts_;
  jboolean mStartOK_;
}

#pragma mark Public

- (instancetype)initWithJavaNetSocket:(JavaNetSocket *)zSock
withOrgMinimaSystemNetworkNetworkHandler:(OrgMinimaSystemNetworkNetworkHandler *)zNetwork;

- (instancetype)initWithNSString:(NSString *)zHost
                         withInt:(jint)zPort
withOrgMinimaSystemNetworkNetworkHandler:(OrgMinimaSystemNetworkNetworkHandler *)zNetwork;

- (NSString *)getHost;

- (OrgMinimaSystemNetworkNetworkHandler *)getNetworkHandler;

- (jint)getPort;

- (JavaNetSocket *)getSocket;

- (NSString *)getUID;

- (jboolean)isReconnect;

- (void)noReconnect;

- (OrgMinimaUtilsJsonJSONObject *)toJSON;

- (NSString *)description;

#pragma mark Protected

- (void)processMessageWithOrgMinimaUtilsMessagesMessage:(OrgMinimaUtilsMessagesMessage *)zMessage;

- (void)sendMessageWithOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zMessageType
                   withOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zMessage;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaSystemNetworkNetClient)

J2OBJC_FIELD_SETTER(OrgMinimaSystemNetworkNetClient, mNetworkMain_, OrgMinimaSystemNetworkNetworkHandler *)
J2OBJC_FIELD_SETTER(OrgMinimaSystemNetworkNetClient, mSocket_, JavaNetSocket *)
J2OBJC_FIELD_SETTER(OrgMinimaSystemNetworkNetClient, mOutput_, JavaIoDataOutputStream *)
J2OBJC_FIELD_SETTER(OrgMinimaSystemNetworkNetClient, mInputThread_, JavaLangThread *)
J2OBJC_FIELD_SETTER(OrgMinimaSystemNetworkNetClient, mInputReader_, OrgMinimaSystemNetworkNetClientReader *)
J2OBJC_FIELD_SETTER(OrgMinimaSystemNetworkNetClient, mUID_, NSString *)
J2OBJC_FIELD_SETTER(OrgMinimaSystemNetworkNetClient, mHost_, NSString *)

inline NSString *OrgMinimaSystemNetworkNetClient_get_NETCLIENT_STARTUP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMinimaSystemNetworkNetClient_NETCLIENT_STARTUP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaSystemNetworkNetClient, NETCLIENT_STARTUP, NSString *)

inline NSString *OrgMinimaSystemNetworkNetClient_get_NETCLIENT_SHUTDOWN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMinimaSystemNetworkNetClient_NETCLIENT_SHUTDOWN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaSystemNetworkNetClient, NETCLIENT_SHUTDOWN, NSString *)

inline NSString *OrgMinimaSystemNetworkNetClient_get_NETCLIENT_SENDOBJECT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMinimaSystemNetworkNetClient_NETCLIENT_SENDOBJECT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaSystemNetworkNetClient, NETCLIENT_SENDOBJECT, NSString *)

inline NSString *OrgMinimaSystemNetworkNetClient_get_NETCLIENT_SENDTXPOW(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMinimaSystemNetworkNetClient_NETCLIENT_SENDTXPOW;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaSystemNetworkNetClient, NETCLIENT_SENDTXPOW, NSString *)

FOUNDATION_EXPORT void OrgMinimaSystemNetworkNetClient_initWithNSString_withInt_withOrgMinimaSystemNetworkNetworkHandler_(OrgMinimaSystemNetworkNetClient *self, NSString *zHost, jint zPort, OrgMinimaSystemNetworkNetworkHandler *zNetwork);

FOUNDATION_EXPORT OrgMinimaSystemNetworkNetClient *new_OrgMinimaSystemNetworkNetClient_initWithNSString_withInt_withOrgMinimaSystemNetworkNetworkHandler_(NSString *zHost, jint zPort, OrgMinimaSystemNetworkNetworkHandler *zNetwork) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaSystemNetworkNetClient *create_OrgMinimaSystemNetworkNetClient_initWithNSString_withInt_withOrgMinimaSystemNetworkNetworkHandler_(NSString *zHost, jint zPort, OrgMinimaSystemNetworkNetworkHandler *zNetwork);

FOUNDATION_EXPORT void OrgMinimaSystemNetworkNetClient_initWithJavaNetSocket_withOrgMinimaSystemNetworkNetworkHandler_(OrgMinimaSystemNetworkNetClient *self, JavaNetSocket *zSock, OrgMinimaSystemNetworkNetworkHandler *zNetwork);

FOUNDATION_EXPORT OrgMinimaSystemNetworkNetClient *new_OrgMinimaSystemNetworkNetClient_initWithJavaNetSocket_withOrgMinimaSystemNetworkNetworkHandler_(JavaNetSocket *zSock, OrgMinimaSystemNetworkNetworkHandler *zNetwork) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaSystemNetworkNetClient *create_OrgMinimaSystemNetworkNetClient_initWithJavaNetSocket_withOrgMinimaSystemNetworkNetworkHandler_(JavaNetSocket *zSock, OrgMinimaSystemNetworkNetworkHandler *zNetwork);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaSystemNetworkNetClient)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaSystemNetworkNetClient")
