//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/system/input/InputHandler.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/minima/system/Main.h"
#include "org/minima/system/SystemHandler.h"
#include "org/minima/system/input/CommandFunction.h"
#include "org/minima/system/input/InputHandler.h"
#include "org/minima/system/input/InputMessage.h"
#include "org/minima/system/input/functions/intro.h"
#include "org/minima/utils/ResponseStream.h"
#include "org/minima/utils/json/JSONObject.h"
#include "org/minima/utils/messages/Message.h"

NSString *OrgMinimaSystemInputInputHandler_INPUT_COMMAND = @"_**input_command**_";
NSString *OrgMinimaSystemInputInputHandler_INPUT_FUNCTION = @"_**input_function**_";
NSString *OrgMinimaSystemInputInputHandler_INPUT_RESPONSE = @"_**outstream**_";

@implementation OrgMinimaSystemInputInputHandler

- (instancetype)initWithOrgMinimaSystemMain:(OrgMinimaSystemMain *)zMain {
  OrgMinimaSystemInputInputHandler_initWithOrgMinimaSystemMain_(self, zMain);
  return self;
}

- (void)processMessageWithOrgMinimaUtilsMessagesMessage:(OrgMinimaUtilsMessagesMessage *)zMessage {
  if ([((OrgMinimaUtilsMessagesMessage *) nil_chk(zMessage)) isMessageTypeWithNSString:OrgMinimaSystemInputInputHandler_INPUT_COMMAND]) {
    NSString *input = [zMessage getStringWithNSString:OrgMinimaSystemInputInputHandler_INPUT_FUNCTION];
    OrgMinimaUtilsResponseStream *output = (OrgMinimaUtilsResponseStream *) cast_chk([zMessage getObjectWithNSString:OrgMinimaSystemInputInputHandler_INPUT_RESPONSE], [OrgMinimaUtilsResponseStream class]);
    [((OrgMinimaUtilsResponseStream *) nil_chk(output)) setFunctionWithNSString:input];
    IOSObjectArray *inputs = OrgMinimaSystemInputInputMessage_splitStringWithNSString_(input);
    OrgMinimaSystemInputCommandFunction *found = OrgMinimaSystemInputCommandFunction_getFunctionWithNSString_(IOSObjectArray_Get(nil_chk(inputs), 0));
    if (found == nil) {
      [output endStatusWithBoolean:false withNSString:JreStrcat("$$", @"Function not found : ", IOSObjectArray_Get(inputs, 0))];
    }
    else {
      @try {
        [found setResponseStreamWithOrgMinimaUtilsResponseStream:output];
        [found setMainHandlerWithOrgMinimaSystemMain:[self getMainHandler]];
        [found doFunctionWithNSStringArray:inputs];
      }
      @catch (JavaLangException *exc) {
        [output endStatusWithBoolean:false withNSString:[exc description]];
      }
    }
  }
}

+ (OrgMinimaUtilsMessagesMessage *)addResponseMesageWithOrgMinimaUtilsMessagesMessage:(OrgMinimaUtilsMessagesMessage *)zNewMessage
                                                    withOrgMinimaUtilsMessagesMessage:(OrgMinimaUtilsMessagesMessage *)zOriginal {
  return OrgMinimaSystemInputInputHandler_addResponseMesageWithOrgMinimaUtilsMessagesMessage_withOrgMinimaUtilsMessagesMessage_(zNewMessage, zOriginal);
}

+ (OrgMinimaUtilsJsonJSONObject *)getResponseJSONWithOrgMinimaUtilsMessagesMessage:(OrgMinimaUtilsMessagesMessage *)zMessage {
  return OrgMinimaSystemInputInputHandler_getResponseJSONWithOrgMinimaUtilsMessagesMessage_(zMessage);
}

+ (void)endResponseWithOrgMinimaUtilsMessagesMessage:(OrgMinimaUtilsMessagesMessage *)zMessage
                                         withBoolean:(jboolean)zValid
                                        withNSString:(NSString *)zStatusMessage {
  OrgMinimaSystemInputInputHandler_endResponseWithOrgMinimaUtilsMessagesMessage_withBoolean_withNSString_(zMessage, zValid, zStatusMessage);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgMinimaUtilsMessagesMessage;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaUtilsJsonJSONObject;", 0x9, 6, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgMinimaSystemMain:);
  methods[1].selector = @selector(processMessageWithOrgMinimaUtilsMessagesMessage:);
  methods[2].selector = @selector(addResponseMesageWithOrgMinimaUtilsMessagesMessage:withOrgMinimaUtilsMessagesMessage:);
  methods[3].selector = @selector(getResponseJSONWithOrgMinimaUtilsMessagesMessage:);
  methods[4].selector = @selector(endResponseWithOrgMinimaUtilsMessagesMessage:withBoolean:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INPUT_COMMAND", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "INPUT_FUNCTION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "INPUT_RESPONSE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaSystemMain;", "processMessage", "LOrgMinimaUtilsMessagesMessage;", "LJavaLangException;", "addResponseMesage", "LOrgMinimaUtilsMessagesMessage;LOrgMinimaUtilsMessagesMessage;", "getResponseJSON", "endResponse", "LOrgMinimaUtilsMessagesMessage;ZLNSString;", &OrgMinimaSystemInputInputHandler_INPUT_COMMAND, &OrgMinimaSystemInputInputHandler_INPUT_FUNCTION, &OrgMinimaSystemInputInputHandler_INPUT_RESPONSE };
  static const J2ObjcClassInfo _OrgMinimaSystemInputInputHandler = { "InputHandler", "org.minima.system.input", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_OrgMinimaSystemInputInputHandler;
}

@end

void OrgMinimaSystemInputInputHandler_initWithOrgMinimaSystemMain_(OrgMinimaSystemInputInputHandler *self, OrgMinimaSystemMain *zMain) {
  OrgMinimaSystemSystemHandler_initWithOrgMinimaSystemMain_withNSString_(self, zMain, @"INPUT");
  [create_OrgMinimaSystemInputFunctionsintro_init() doFunctionWithNSStringArray:[IOSObjectArray arrayWithLength:0 type:NSString_class_()]];
}

OrgMinimaSystemInputInputHandler *new_OrgMinimaSystemInputInputHandler_initWithOrgMinimaSystemMain_(OrgMinimaSystemMain *zMain) {
  J2OBJC_NEW_IMPL(OrgMinimaSystemInputInputHandler, initWithOrgMinimaSystemMain_, zMain)
}

OrgMinimaSystemInputInputHandler *create_OrgMinimaSystemInputInputHandler_initWithOrgMinimaSystemMain_(OrgMinimaSystemMain *zMain) {
  J2OBJC_CREATE_IMPL(OrgMinimaSystemInputInputHandler, initWithOrgMinimaSystemMain_, zMain)
}

OrgMinimaUtilsMessagesMessage *OrgMinimaSystemInputInputHandler_addResponseMesageWithOrgMinimaUtilsMessagesMessage_withOrgMinimaUtilsMessagesMessage_(OrgMinimaUtilsMessagesMessage *zNewMessage, OrgMinimaUtilsMessagesMessage *zOriginal) {
  OrgMinimaSystemInputInputHandler_initialize();
  if ([((OrgMinimaUtilsMessagesMessage *) nil_chk(zOriginal)) existsWithNSString:OrgMinimaSystemInputInputHandler_INPUT_RESPONSE]) {
    [((OrgMinimaUtilsMessagesMessage *) nil_chk(zNewMessage)) addObjectWithNSString:OrgMinimaSystemInputInputHandler_INPUT_RESPONSE withId:[zOriginal getObjectWithNSString:OrgMinimaSystemInputInputHandler_INPUT_RESPONSE]];
  }
  return zNewMessage;
}

OrgMinimaUtilsJsonJSONObject *OrgMinimaSystemInputInputHandler_getResponseJSONWithOrgMinimaUtilsMessagesMessage_(OrgMinimaUtilsMessagesMessage *zMessage) {
  OrgMinimaSystemInputInputHandler_initialize();
  if ([((OrgMinimaUtilsMessagesMessage *) nil_chk(zMessage)) existsWithNSString:OrgMinimaSystemInputInputHandler_INPUT_RESPONSE]) {
    OrgMinimaUtilsResponseStream *out = (OrgMinimaUtilsResponseStream *) cast_chk([zMessage getObjectWithNSString:OrgMinimaSystemInputInputHandler_INPUT_RESPONSE], [OrgMinimaUtilsResponseStream class]);
    return [((OrgMinimaUtilsResponseStream *) nil_chk(out)) getDataJSON];
  }
  else {
    return create_OrgMinimaUtilsJsonJSONObject_init();
  }
}

void OrgMinimaSystemInputInputHandler_endResponseWithOrgMinimaUtilsMessagesMessage_withBoolean_withNSString_(OrgMinimaUtilsMessagesMessage *zMessage, jboolean zValid, NSString *zStatusMessage) {
  OrgMinimaSystemInputInputHandler_initialize();
  if ([((OrgMinimaUtilsMessagesMessage *) nil_chk(zMessage)) existsWithNSString:OrgMinimaSystemInputInputHandler_INPUT_RESPONSE]) {
    OrgMinimaUtilsResponseStream *out = (OrgMinimaUtilsResponseStream *) cast_chk([zMessage getObjectWithNSString:OrgMinimaSystemInputInputHandler_INPUT_RESPONSE], [OrgMinimaUtilsResponseStream class]);
    [((OrgMinimaUtilsResponseStream *) nil_chk(out)) endStatusWithBoolean:zValid withNSString:zStatusMessage];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaSystemInputInputHandler)
