//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/system/network/nio/NIOMultiServer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaSystemNetworkNioNIOMultiServer")
#ifdef RESTRICT_OrgMinimaSystemNetworkNioNIOMultiServer
#define INCLUDE_ALL_OrgMinimaSystemNetworkNioNIOMultiServer 0
#else
#define INCLUDE_ALL_OrgMinimaSystemNetworkNioNIOMultiServer 1
#endif
#undef RESTRICT_OrgMinimaSystemNetworkNioNIOMultiServer

#if !defined (OrgMinimaSystemNetworkNioNIOMultiServer_) && (INCLUDE_ALL_OrgMinimaSystemNetworkNioNIOMultiServer || defined(INCLUDE_OrgMinimaSystemNetworkNioNIOMultiServer))
#define OrgMinimaSystemNetworkNioNIOMultiServer_

#define RESTRICT_OrgMinimaUtilsMessagesMessageProcessor 1
#define INCLUDE_OrgMinimaUtilsMessagesMessageProcessor 1
#include "org/minima/utils/messages/MessageProcessor.h"

@class JavaUtilArrayList;
@class OrgMinimaUtilsMessagesMessage;

@interface OrgMinimaSystemNetworkNioNIOMultiServer : OrgMinimaUtilsMessagesMessageProcessor {
 @public
  JavaUtilArrayList *mClients_;
}

#pragma mark Public

- (instancetype)init;

#pragma mark Protected

- (void)processMessageWithOrgMinimaUtilsMessagesMessage:(OrgMinimaUtilsMessagesMessage *)zMessage;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaSystemNetworkNioNIOMultiServer)

J2OBJC_FIELD_SETTER(OrgMinimaSystemNetworkNioNIOMultiServer, mClients_, JavaUtilArrayList *)

inline NSString *OrgMinimaSystemNetworkNioNIOMultiServer_get_NIOSERVER_INIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMinimaSystemNetworkNioNIOMultiServer_NIOSERVER_INIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaSystemNetworkNioNIOMultiServer, NIOSERVER_INIT, NSString *)

inline NSString *OrgMinimaSystemNetworkNioNIOMultiServer_get_NIOSERVER_CLOSE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMinimaSystemNetworkNioNIOMultiServer_NIOSERVER_CLOSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaSystemNetworkNioNIOMultiServer, NIOSERVER_CLOSE, NSString *)

inline NSString *OrgMinimaSystemNetworkNioNIOMultiServer_get_NIOSERVER_ACCEPT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMinimaSystemNetworkNioNIOMultiServer_NIOSERVER_ACCEPT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaSystemNetworkNioNIOMultiServer, NIOSERVER_ACCEPT, NSString *)

inline NSString *OrgMinimaSystemNetworkNioNIOMultiServer_get_NIOSERVER_READ(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMinimaSystemNetworkNioNIOMultiServer_NIOSERVER_READ;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaSystemNetworkNioNIOMultiServer, NIOSERVER_READ, NSString *)

inline NSString *OrgMinimaSystemNetworkNioNIOMultiServer_get_NIOSERVER_WRITE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMinimaSystemNetworkNioNIOMultiServer_NIOSERVER_WRITE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMinimaSystemNetworkNioNIOMultiServer, NIOSERVER_WRITE, NSString *)

FOUNDATION_EXPORT void OrgMinimaSystemNetworkNioNIOMultiServer_init(OrgMinimaSystemNetworkNioNIOMultiServer *self);

FOUNDATION_EXPORT OrgMinimaSystemNetworkNioNIOMultiServer *new_OrgMinimaSystemNetworkNioNIOMultiServer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaSystemNetworkNioNIOMultiServer *create_OrgMinimaSystemNetworkNioNIOMultiServer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaSystemNetworkNioNIOMultiServer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaSystemNetworkNioNIOMultiServer")
