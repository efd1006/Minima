//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/tests/cascader/Block.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaUtilsTestsCascaderBlock")
#ifdef RESTRICT_OrgMinimaUtilsTestsCascaderBlock
#define INCLUDE_ALL_OrgMinimaUtilsTestsCascaderBlock 0
#else
#define INCLUDE_ALL_OrgMinimaUtilsTestsCascaderBlock 1
#endif
#undef RESTRICT_OrgMinimaUtilsTestsCascaderBlock

#if !defined (OrgMinimaUtilsTestsCascaderBlock_) && (INCLUDE_ALL_OrgMinimaUtilsTestsCascaderBlock || defined(INCLUDE_OrgMinimaUtilsTestsCascaderBlock))
#define OrgMinimaUtilsTestsCascaderBlock_

@class IOSObjectArray;

@interface OrgMinimaUtilsTestsCascaderBlock : NSObject {
 @public
  jint mBaseBlockNumber_;
  jdouble mBasePrevBlockHash_;
  jdouble mBlockHash_;
  jint mMaxBlockLevel_;
  jint mCurrentBlockLevel_;
  IOSObjectArray *mBlockLevels_;
  jdouble mFinalWeight_;
  jdouble mFinalLevel_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)checkBlockLevelWithInt:(jint)zLevel;

- (jint)getBlockLevel;

- (void)printLevels;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaUtilsTestsCascaderBlock)

J2OBJC_FIELD_SETTER(OrgMinimaUtilsTestsCascaderBlock, mBlockLevels_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgMinimaUtilsTestsCascaderBlock_init(OrgMinimaUtilsTestsCascaderBlock *self);

FOUNDATION_EXPORT OrgMinimaUtilsTestsCascaderBlock *new_OrgMinimaUtilsTestsCascaderBlock_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsTestsCascaderBlock *create_OrgMinimaUtilsTestsCascaderBlock_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaUtilsTestsCascaderBlock)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaUtilsTestsCascaderBlock")
