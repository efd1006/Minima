//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/Maths.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/concurrent/TimeUnit.h"
#include "org/minima/utils/Maths.h"

J2OBJC_INITIALIZED_DEFN(OrgMinimaUtilsMaths)

JavaMathBigInteger *OrgMinimaUtilsMaths_BI_TWO;
JavaMathBigDecimal *OrgMinimaUtilsMaths_BD_TWO;

@implementation OrgMinimaUtilsMaths

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsMaths_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jdouble)log2WithDouble:(jdouble)zDD {
  return OrgMinimaUtilsMaths_log2WithDouble_(zDD);
}

+ (NSString *)getDataAsStringWithByteArray:(IOSByteArray *)zData {
  return OrgMinimaUtilsMaths_getDataAsStringWithByteArray_(zData);
}

+ (jdouble)log2BIWithJavaMathBigInteger:(JavaMathBigInteger *)val {
  return OrgMinimaUtilsMaths_log2BIWithJavaMathBigInteger_(val);
}

+ (NSString *)ConvertMilliToTimeWithLong:(jlong)zMilli {
  return OrgMinimaUtilsMaths_ConvertMilliToTimeWithLong_(zMilli);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(log2WithDouble:);
  methods[2].selector = @selector(getDataAsStringWithByteArray:);
  methods[3].selector = @selector(log2BIWithJavaMathBigInteger:);
  methods[4].selector = @selector(ConvertMilliToTimeWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BI_TWO", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "BD_TWO", "LJavaMathBigDecimal;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "log2", "D", "getDataAsString", "[B", "log2BI", "LJavaMathBigInteger;", "ConvertMilliToTime", "J", &OrgMinimaUtilsMaths_BI_TWO, &OrgMinimaUtilsMaths_BD_TWO };
  static const J2ObjcClassInfo _OrgMinimaUtilsMaths = { "Maths", "org.minima.utils", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsMaths;
}

+ (void)initialize {
  if (self == [OrgMinimaUtilsMaths class]) {
    JreStrongAssignAndConsume(&OrgMinimaUtilsMaths_BI_TWO, new_JavaMathBigInteger_initWithNSString_(@"2"));
    JreStrongAssignAndConsume(&OrgMinimaUtilsMaths_BD_TWO, new_JavaMathBigDecimal_initWithNSString_(@"2"));
    J2OBJC_SET_INITIALIZED(OrgMinimaUtilsMaths)
  }
}

@end

void OrgMinimaUtilsMaths_init(OrgMinimaUtilsMaths *self) {
  NSObject_init(self);
}

OrgMinimaUtilsMaths *new_OrgMinimaUtilsMaths_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsMaths, init)
}

OrgMinimaUtilsMaths *create_OrgMinimaUtilsMaths_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsMaths, init)
}

jdouble OrgMinimaUtilsMaths_log2WithDouble_(jdouble zDD) {
  OrgMinimaUtilsMaths_initialize();
  return JavaLangMath_log10WithDouble_(zDD) / JavaLangMath_log10WithDouble_(2);
}

NSString *OrgMinimaUtilsMaths_getDataAsStringWithByteArray_(IOSByteArray *zData) {
  OrgMinimaUtilsMaths_initialize();
  return JreStrcat("$$", @"0x", [((NSString *) nil_chk([create_JavaMathBigInteger_initWithInt_withByteArray_(1, zData) toStringWithInt:16])) uppercaseString]);
}

jdouble OrgMinimaUtilsMaths_log2BIWithJavaMathBigInteger_(JavaMathBigInteger *val) {
  OrgMinimaUtilsMaths_initialize();
  jint n = [((JavaMathBigInteger *) nil_chk(val)) bitLength];
  jlong mask = JreLShift64(1LL, 52);
  jlong mantissa = 0;
  jint j = 0;
  for (jint i = 1; i < 54; i++) {
    j = n - i;
    if (j < 0) break;
    if ([val testBitWithInt:j]) mantissa |= mask;
    JreURShiftAssignLong(&mask, 1);
  }
  if (j > 0 && [val testBitWithInt:j - 1]) mantissa++;
  jdouble f = mantissa / (jdouble) (JreLShift64(1LL, 52));
  return (n - 1 + JavaLangMath_logWithDouble_(f) * 1.44269504088896340735992468100189213742664595415298);
}

NSString *OrgMinimaUtilsMaths_ConvertMilliToTimeWithLong_(jlong zMilli) {
  OrgMinimaUtilsMaths_initialize();
  jlong milliseconds = zMilli;
  jlong dy = [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS))) toDaysWithLong:milliseconds];
  jlong yr = dy / 365;
  dy %= 365;
  jlong mn = dy / 30;
  dy %= 30;
  jlong wk = dy / 7;
  dy %= 7;
  jlong hr = [JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) toHoursWithLong:milliseconds] - [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, DAYS))) toHoursWithLong:[JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) toDaysWithLong:milliseconds]];
  jlong min = [JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) toMinutesWithLong:milliseconds] - [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, HOURS))) toMinutesWithLong:[JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) toHoursWithLong:milliseconds]];
  jlong sec = [JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) toSecondsWithLong:milliseconds] - [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, MINUTES))) toSecondsWithLong:[JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) toMinutesWithLong:milliseconds]];
  jlong ms = [JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) toMillisWithLong:milliseconds] - [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS))) toMillisWithLong:[JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) toSecondsWithLong:milliseconds]];
  return NSString_java_formatWithNSString_withNSObjectArray_(@"%d Years %d Months %d Weeks %d Days %d Hours %d Minutes %d Seconds %d Milliseconds", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(yr), JavaLangLong_valueOfWithLong_(mn), JavaLangLong_valueOfWithLong_(wk), JavaLangLong_valueOfWithLong_(dy), JavaLangLong_valueOfWithLong_(hr), JavaLangLong_valueOfWithLong_(min), JavaLangLong_valueOfWithLong_(sec), JavaLangLong_valueOfWithLong_(ms) } count:8 type:NSObject_class_()]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsMaths)
