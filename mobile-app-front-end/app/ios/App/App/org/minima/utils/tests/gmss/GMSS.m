//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/tests/gmss/GMSS.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/security/SecureRandom.h"
#include "org/minima/utils/MinimaLogger.h"
#include "org/minima/utils/tests/gmss/GMSS.h"

@implementation OrgMinimaUtilsTestsGmssGMSS

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsTestsGmssGMSS_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  OrgMinimaUtilsTestsGmssGMSS_mainWithNSStringArray_(args);
}

+ (NSString *)getHexStringWithByteArray:(IOSByteArray *)b {
  return OrgMinimaUtilsTestsGmssGMSS_getHexStringWithByteArray_(b);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  methods[2].selector = @selector(getHexStringWithByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "main", "[LNSString;", "getHexString", "[B" };
  static const J2ObjcClassInfo _OrgMinimaUtilsTestsGmssGMSS = { "GMSS", "org.minima.utils.tests.gmss", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsTestsGmssGMSS;
}

@end

void OrgMinimaUtilsTestsGmssGMSS_init(OrgMinimaUtilsTestsGmssGMSS *self) {
  NSObject_init(self);
}

OrgMinimaUtilsTestsGmssGMSS *new_OrgMinimaUtilsTestsGmssGMSS_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsTestsGmssGMSS, init)
}

OrgMinimaUtilsTestsGmssGMSS *create_OrgMinimaUtilsTestsGmssGMSS_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsTestsGmssGMSS, init)
}

void OrgMinimaUtilsTestsGmssGMSS_mainWithNSStringArray_(IOSObjectArray *args) {
  OrgMinimaUtilsTestsGmssGMSS_initialize();
  OrgMinimaUtilsMinimaLogger_logWithNSString_(@"Starting..");
  JavaSecuritySecureRandom *keyRandom = create_JavaSecuritySecureRandom_init();
  [keyRandom setSeedWithLong:10];
  IOSIntArray *defh = [IOSIntArray arrayWithInts:(jint[]){ 10, 10 } count:2];
  IOSIntArray *defw = [IOSIntArray arrayWithInts:(jint[]){ 8, 8 } count:2];
  IOSIntArray *defk = [IOSIntArray arrayWithInts:(jint[]){ 2, 2 } count:2];
}

NSString *OrgMinimaUtilsTestsGmssGMSS_getHexStringWithByteArray_(IOSByteArray *b) {
  OrgMinimaUtilsTestsGmssGMSS_initialize();
  NSString *result = @"";
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(b))->size_; i++) {
    JreStrAppend(&result, "$", [((NSString *) nil_chk(JavaLangInteger_toStringWithInt_withInt_((IOSByteArray_Get(b, i) & (jint) 0xff) + (jint) 0x100, 16))) java_substring:1]);
  }
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsTestsGmssGMSS)
