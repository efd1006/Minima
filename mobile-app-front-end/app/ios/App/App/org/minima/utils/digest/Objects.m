//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/digest/Objects.java
//

#include "J2ObjC_source.h"
#include "org/minima/utils/digest/Objects.h"

@implementation OrgMinimaUtilsDigestObjects

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsDigestObjects_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)areEqualWithId:(id)a
                    withId:(id)b {
  return OrgMinimaUtilsDigestObjects_areEqualWithId_withId_(a, b);
}

+ (jint)hashCodeWithId:(id)obj {
  return OrgMinimaUtilsDigestObjects_hashCodeWithId_(obj);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(areEqualWithId:withId:);
  methods[2].selector = @selector(hashCodeWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "areEqual", "LNSObject;LNSObject;", "hashCode", "LNSObject;" };
  static const J2ObjcClassInfo _OrgMinimaUtilsDigestObjects = { "Objects", "org.minima.utils.digest", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsDigestObjects;
}

@end

void OrgMinimaUtilsDigestObjects_init(OrgMinimaUtilsDigestObjects *self) {
  NSObject_init(self);
}

OrgMinimaUtilsDigestObjects *new_OrgMinimaUtilsDigestObjects_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsDigestObjects, init)
}

OrgMinimaUtilsDigestObjects *create_OrgMinimaUtilsDigestObjects_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsDigestObjects, init)
}

jboolean OrgMinimaUtilsDigestObjects_areEqualWithId_withId_(id a, id b) {
  OrgMinimaUtilsDigestObjects_initialize();
  return a == b || (nil != a && nil != b && [a isEqual:b]);
}

jint OrgMinimaUtilsDigestObjects_hashCodeWithId_(id obj) {
  OrgMinimaUtilsDigestObjects_initialize();
  return nil == obj ? 0 : ((jint) [obj hash]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsDigestObjects)
