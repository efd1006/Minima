//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/SuperBlockLevels.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "org/minima/GlobalParams.h"
#include "org/minima/objects/base/MiniData.h"
#include "org/minima/utils/Maths.h"
#include "org/minima/utils/SuperBlockLevels.h"

inline JavaMathBigInteger *OrgMinimaUtilsSuperBlockLevels_get_TWO(void);
inline JavaMathBigInteger *OrgMinimaUtilsSuperBlockLevels_set_TWO(JavaMathBigInteger *value);
static JavaMathBigInteger *OrgMinimaUtilsSuperBlockLevels_TWO;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaUtilsSuperBlockLevels, TWO, JavaMathBigInteger *)

J2OBJC_INITIALIZED_DEFN(OrgMinimaUtilsSuperBlockLevels)

OrgMinimaObjectsBaseMiniData *OrgMinimaUtilsSuperBlockLevels_GENESIS_HASH;

@implementation OrgMinimaUtilsSuperBlockLevels

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsSuperBlockLevels_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)getSuperLevelWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zDifficulty
                     withOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zActual {
  return OrgMinimaUtilsSuperBlockLevels_getSuperLevelWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_(zDifficulty, zActual);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs {
  OrgMinimaUtilsSuperBlockLevels_mainWithNSStringArray_(zArgs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getSuperLevelWithOrgMinimaObjectsBaseMiniData:withOrgMinimaObjectsBaseMiniData:);
  methods[2].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "GENESIS_HASH", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x9, -1, 4, -1, -1 },
    { "TWO", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0xa, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "getSuperLevel", "LOrgMinimaObjectsBaseMiniData;LOrgMinimaObjectsBaseMiniData;", "main", "[LNSString;", &OrgMinimaUtilsSuperBlockLevels_GENESIS_HASH, &OrgMinimaUtilsSuperBlockLevels_TWO };
  static const J2ObjcClassInfo _OrgMinimaUtilsSuperBlockLevels = { "SuperBlockLevels", "org.minima.utils", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsSuperBlockLevels;
}

+ (void)initialize {
  if (self == [OrgMinimaUtilsSuperBlockLevels class]) {
    JreStrongAssignAndConsume(&OrgMinimaUtilsSuperBlockLevels_GENESIS_HASH, new_OrgMinimaObjectsBaseMiniData_init());
    JreStrongAssignAndConsume(&OrgMinimaUtilsSuperBlockLevels_TWO, new_JavaMathBigInteger_initWithNSString_(@"2"));
    J2OBJC_SET_INITIALIZED(OrgMinimaUtilsSuperBlockLevels)
  }
}

@end

void OrgMinimaUtilsSuperBlockLevels_init(OrgMinimaUtilsSuperBlockLevels *self) {
  NSObject_init(self);
}

OrgMinimaUtilsSuperBlockLevels *new_OrgMinimaUtilsSuperBlockLevels_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsSuperBlockLevels, init)
}

OrgMinimaUtilsSuperBlockLevels *create_OrgMinimaUtilsSuperBlockLevels_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsSuperBlockLevels, init)
}

jint OrgMinimaUtilsSuperBlockLevels_getSuperLevelWithOrgMinimaObjectsBaseMiniData_withOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zDifficulty, OrgMinimaObjectsBaseMiniData *zActual) {
  OrgMinimaUtilsSuperBlockLevels_initialize();
  JavaMathBigInteger *supbig = [((JavaMathBigInteger *) nil_chk([((OrgMinimaObjectsBaseMiniData *) nil_chk(zDifficulty)) getDataValue])) divideWithJavaMathBigInteger:[((OrgMinimaObjectsBaseMiniData *) nil_chk(zActual)) getDataValue]];
  jint ll2 = JreFpToInt(OrgMinimaUtilsMaths_log2BIWithJavaMathBigInteger_(supbig));
  if (ll2 < 0) {
    ll2 = 0;
  }
  if (ll2 > OrgMinimaGlobalParams_MINIMA_CASCADE_LEVELS - 1) {
    ll2 = OrgMinimaGlobalParams_MINIMA_CASCADE_LEVELS - 1;
  }
  return ll2;
}

void OrgMinimaUtilsSuperBlockLevels_mainWithNSStringArray_(IOSObjectArray *zArgs) {
  OrgMinimaUtilsSuperBlockLevels_initialize();
  jlong ll0 = JavaLangMath_roundWithDouble_(OrgMinimaUtilsMaths_log2BIWithJavaMathBigInteger_(JreLoadStatic(JavaMathBigInteger, ZERO)));
  jlong ll1 = JavaLangMath_roundWithDouble_(OrgMinimaUtilsMaths_log2BIWithJavaMathBigInteger_(JreLoadStatic(JavaMathBigInteger, ONE)));
  jlong ll2 = JavaLangMath_roundWithDouble_(OrgMinimaUtilsMaths_log2BIWithJavaMathBigInteger_(OrgMinimaUtilsSuperBlockLevels_TWO));
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("JCJCJ", ll0, ' ', ll1, ' ', ll2)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsSuperBlockLevels)
