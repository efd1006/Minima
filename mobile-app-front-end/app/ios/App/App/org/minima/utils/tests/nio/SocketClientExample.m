//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/tests/nio/SocketClientExample.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/net/InetSocketAddress.h"
#include "java/nio/Buffer.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/channels/SocketChannel.h"
#include "org/minima/utils/tests/nio/SocketClientExample.h"

@implementation OrgMinimaUtilsTestsNioSocketClientExample

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsTestsNioSocketClientExample_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)startClient {
  JavaNetInetSocketAddress *hostAddress = create_JavaNetInetSocketAddress_initWithNSString_withInt_(@"127.0.0.1", 8090);
  JavaNioChannelsSocketChannel *client = JavaNioChannelsSocketChannel_openWithJavaNetSocketAddress_(hostAddress);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Client... started"];
  NSString *threadName = [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getName];
  IOSObjectArray *messages = [IOSObjectArray arrayWithObjects:(id[]){ JreStrcat("$$", threadName, @": test1"), JreStrcat("$$", threadName, @": test2"), JreStrcat("$$", threadName, @": test3") } count:3 type:NSString_class_()];
  for (jint i = 0; i < messages->size_; i++) {
    IOSByteArray *message = [[NSString stringWithString:IOSObjectArray_Get(messages, i)] java_getBytes];
    JavaNioByteBuffer *buffer = JavaNioByteBuffer_wrapWithByteArray_(message);
    [((JavaNioChannelsSocketChannel *) nil_chk(client)) writeWithJavaNioByteBuffer:buffer];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:IOSObjectArray_Get(messages, i)];
    [((JavaNioByteBuffer *) nil_chk(buffer)) clear];
    JavaLangThread_sleepWithLong_(5000);
  }
  [((JavaNioChannelsSocketChannel *) nil_chk(client)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(startClient);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoIOException;LJavaLangInterruptedException;" };
  static const J2ObjcClassInfo _OrgMinimaUtilsTestsNioSocketClientExample = { "SocketClientExample", "org.minima.utils.tests.nio", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsTestsNioSocketClientExample;
}

@end

void OrgMinimaUtilsTestsNioSocketClientExample_init(OrgMinimaUtilsTestsNioSocketClientExample *self) {
  NSObject_init(self);
}

OrgMinimaUtilsTestsNioSocketClientExample *new_OrgMinimaUtilsTestsNioSocketClientExample_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsTestsNioSocketClientExample, init)
}

OrgMinimaUtilsTestsNioSocketClientExample *create_OrgMinimaUtilsTestsNioSocketClientExample_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsTestsNioSocketClientExample, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsTestsNioSocketClientExample)
