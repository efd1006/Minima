//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/MerkleProof.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaUtilsMerkleProof")
#ifdef RESTRICT_OrgMinimaUtilsMerkleProof
#define INCLUDE_ALL_OrgMinimaUtilsMerkleProof 0
#else
#define INCLUDE_ALL_OrgMinimaUtilsMerkleProof 1
#endif
#undef RESTRICT_OrgMinimaUtilsMerkleProof

#if !defined (OrgMinimaUtilsMerkleProof_) && (INCLUDE_ALL_OrgMinimaUtilsMerkleProof || defined(INCLUDE_OrgMinimaUtilsMerkleProof))
#define OrgMinimaUtilsMerkleProof_

@class JavaUtilArrayList;
@class OrgMinimaObjectsBaseMiniData;
@class OrgMinimaObjectsBaseMiniHash;

@interface OrgMinimaUtilsMerkleProof : NSObject {
 @public
  OrgMinimaObjectsBaseMiniData *mData_;
  JavaUtilArrayList *mBranch_;
}

#pragma mark Public

- (instancetype)initWithOrgMinimaObjectsBaseMiniData:(OrgMinimaObjectsBaseMiniData *)zData;

- (void)addBranchHashWithOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)zHash
                                          withBoolean:(jboolean)zLeftRight;

- (OrgMinimaObjectsBaseMiniHash *)calculateFinalHash;

- (jint)getProofLen;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaUtilsMerkleProof)

J2OBJC_FIELD_SETTER(OrgMinimaUtilsMerkleProof, mData_, OrgMinimaObjectsBaseMiniData *)
J2OBJC_FIELD_SETTER(OrgMinimaUtilsMerkleProof, mBranch_, JavaUtilArrayList *)

FOUNDATION_EXPORT void OrgMinimaUtilsMerkleProof_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaUtilsMerkleProof *self, OrgMinimaObjectsBaseMiniData *zData);

FOUNDATION_EXPORT OrgMinimaUtilsMerkleProof *new_OrgMinimaUtilsMerkleProof_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsMerkleProof *create_OrgMinimaUtilsMerkleProof_initWithOrgMinimaObjectsBaseMiniData_(OrgMinimaObjectsBaseMiniData *zData);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaUtilsMerkleProof)

#endif

#if !defined (OrgMinimaUtilsMerkleProof_MerkleProofChunk_) && (INCLUDE_ALL_OrgMinimaUtilsMerkleProof || defined(INCLUDE_OrgMinimaUtilsMerkleProof_MerkleProofChunk))
#define OrgMinimaUtilsMerkleProof_MerkleProofChunk_

@class OrgMinimaObjectsBaseMiniByte;
@class OrgMinimaObjectsBaseMiniHash;
@class OrgMinimaUtilsMerkleProof;

@interface OrgMinimaUtilsMerkleProof_MerkleProofChunk : NSObject {
 @public
  OrgMinimaObjectsBaseMiniHash *mData_;
  OrgMinimaObjectsBaseMiniByte *mLeftRight_;
}

#pragma mark Public

- (instancetype)initWithOrgMinimaUtilsMerkleProof:(OrgMinimaUtilsMerkleProof *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaUtilsMerkleProof_MerkleProofChunk)

J2OBJC_FIELD_SETTER(OrgMinimaUtilsMerkleProof_MerkleProofChunk, mData_, OrgMinimaObjectsBaseMiniHash *)
J2OBJC_FIELD_SETTER(OrgMinimaUtilsMerkleProof_MerkleProofChunk, mLeftRight_, OrgMinimaObjectsBaseMiniByte *)

FOUNDATION_EXPORT void OrgMinimaUtilsMerkleProof_MerkleProofChunk_initWithOrgMinimaUtilsMerkleProof_(OrgMinimaUtilsMerkleProof_MerkleProofChunk *self, OrgMinimaUtilsMerkleProof *outer$);

FOUNDATION_EXPORT OrgMinimaUtilsMerkleProof_MerkleProofChunk *new_OrgMinimaUtilsMerkleProof_MerkleProofChunk_initWithOrgMinimaUtilsMerkleProof_(OrgMinimaUtilsMerkleProof *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsMerkleProof_MerkleProofChunk *create_OrgMinimaUtilsMerkleProof_MerkleProofChunk_initWithOrgMinimaUtilsMerkleProof_(OrgMinimaUtilsMerkleProof *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaUtilsMerkleProof_MerkleProofChunk)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaUtilsMerkleProof")
