//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/ResponseStream.java
//

#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "org/minima/utils/ResponseStream.h"
#include "org/minima/utils/json/JSONObject.h"

@implementation OrgMinimaUtilsResponseStream

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsResponseStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setLocalMachine {
  mIsLocal_ = true;
}

- (jboolean)isLocal {
  return mIsLocal_;
}

- (void)setFunctionWithNSString:(NSString *)zFunction {
  JreStrongAssign(&mFunction_, zFunction);
}

- (NSString *)getResponse {
  return mFinalResponse_;
}

- (OrgMinimaUtilsJsonJSONObject *)getDataJSON {
  return mDataJSON_;
}

- (OrgMinimaUtilsJsonJSONObject *)getFinalJSON {
  return mJSON_;
}

- (void)endStatusWithBoolean:(jboolean)zValid
                withNSString:(NSString *)zError {
  [((OrgMinimaUtilsJsonJSONObject *) nil_chk(mJSON_)) putWithId:@"status" withId:JavaLangBoolean_valueOfWithBoolean_(zValid)];
  [((OrgMinimaUtilsJsonJSONObject *) nil_chk(mJSON_)) putWithId:@"minifunc" withId:mFunction_];
  if (!zValid) {
    [((OrgMinimaUtilsJsonJSONObject *) nil_chk(mJSON_)) putWithId:@"error" withId:zError];
  }
  else {
    [((OrgMinimaUtilsJsonJSONObject *) nil_chk(mJSON_)) putWithId:@"message" withId:zError];
  }
  [((OrgMinimaUtilsJsonJSONObject *) nil_chk(mJSON_)) putWithId:@"response" withId:mDataJSON_];
  JreStrongAssign(&mFinalResponse_, [((NSString *) nil_chk([((OrgMinimaUtilsJsonJSONObject *) nil_chk(mJSON_)) description])) java_replaceAll:@"\\\\/" withReplacement:@"/"]);
  mFinished_ = true;
}

- (void)hardEndStatusWithNSString:(NSString *)zResult {
  JreStrongAssign(&mFinalResponse_, zResult);
  mFinished_ = true;
}

- (jboolean)isFinished {
  return mFinished_;
}

- (void)waitToFinish {
  jlong timestart = JavaLangSystem_currentTimeMillis();
  jlong timediff = 0;
  while (!mFinished_ && timediff < OrgMinimaUtilsResponseStream_MAX_WAITTIME) {
    @try {
      JavaLangThread_sleepWithLong_(100);
    }
    @catch (JavaLangInterruptedException *e) {
    }
    timediff = JavaLangSystem_currentTimeMillis() - timestart;
  }
}

- (void)dealloc {
  RELEASE_(mFunction_);
  RELEASE_(mJSON_);
  RELEASE_(mDataJSON_);
  RELEASE_(mFinalResponse_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaUtilsJsonJSONObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaUtilsJsonJSONObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setLocalMachine);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(setFunctionWithNSString:);
  methods[4].selector = @selector(getResponse);
  methods[5].selector = @selector(getDataJSON);
  methods[6].selector = @selector(getFinalJSON);
  methods[7].selector = @selector(endStatusWithBoolean:withNSString:);
  methods[8].selector = @selector(hardEndStatusWithNSString:);
  methods[9].selector = @selector(isFinished);
  methods[10].selector = @selector(waitToFinish);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_WAITTIME", "J", .constantValue.asLong = OrgMinimaUtilsResponseStream_MAX_WAITTIME, 0x19, -1, -1, -1, -1 },
    { "mFunction_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mJSON_", "LOrgMinimaUtilsJsonJSONObject;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mDataJSON_", "LOrgMinimaUtilsJsonJSONObject;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mFinished_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mFinalResponse_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mIsLocal_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setFunction", "LNSString;", "endStatus", "ZLNSString;", "hardEndStatus" };
  static const J2ObjcClassInfo _OrgMinimaUtilsResponseStream = { "ResponseStream", "org.minima.utils", ptrTable, methods, fields, 7, 0x1, 11, 7, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsResponseStream;
}

@end

void OrgMinimaUtilsResponseStream_init(OrgMinimaUtilsResponseStream *self) {
  NSObject_init(self);
  JreStrongAssign(&self->mFunction_, @"");
  JreStrongAssignAndConsume(&self->mJSON_, new_OrgMinimaUtilsJsonJSONObject_init());
  JreStrongAssignAndConsume(&self->mDataJSON_, new_OrgMinimaUtilsJsonJSONObject_init());
  self->mFinished_ = false;
  JreStrongAssign(&self->mFinalResponse_, @"");
  self->mIsLocal_ = false;
  self->mFinished_ = false;
}

OrgMinimaUtilsResponseStream *new_OrgMinimaUtilsResponseStream_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsResponseStream, init)
}

OrgMinimaUtilsResponseStream *create_OrgMinimaUtilsResponseStream_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsResponseStream, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsResponseStream)
