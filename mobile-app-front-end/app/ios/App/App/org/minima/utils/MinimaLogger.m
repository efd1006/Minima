//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/MinimaLogger.java
//

#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "org/minima/utils/MinimaLogger.h"

jboolean OrgMinimaUtilsMinimaLogger_LOGGING_ON = true;

@implementation OrgMinimaUtilsMinimaLogger

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsMinimaLogger_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)logWithNSString:(NSString *)zLog {
  OrgMinimaUtilsMinimaLogger_logWithNSString_(zLog);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGING_ON", "Z", .constantValue.asLong = 0, 0x9, -1, 2, -1, -1 },
    { "LOG_ERROR", "I", .constantValue.asInt = OrgMinimaUtilsMinimaLogger_LOG_ERROR, 0x19, -1, -1, -1, -1 },
    { "LOG_INFO", "I", .constantValue.asInt = OrgMinimaUtilsMinimaLogger_LOG_INFO, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", &OrgMinimaUtilsMinimaLogger_LOGGING_ON };
  static const J2ObjcClassInfo _OrgMinimaUtilsMinimaLogger = { "MinimaLogger", "org.minima.utils", ptrTable, methods, fields, 7, 0x1, 2, 3, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsMinimaLogger;
}

@end

void OrgMinimaUtilsMinimaLogger_init(OrgMinimaUtilsMinimaLogger *self) {
  NSObject_init(self);
}

OrgMinimaUtilsMinimaLogger *new_OrgMinimaUtilsMinimaLogger_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsMinimaLogger, init)
}

OrgMinimaUtilsMinimaLogger *create_OrgMinimaUtilsMinimaLogger_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsMinimaLogger, init)
}

void OrgMinimaUtilsMinimaLogger_logWithNSString_(NSString *zLog) {
  OrgMinimaUtilsMinimaLogger_initialize();
  if (OrgMinimaUtilsMinimaLogger_LOGGING_ON) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:zLog];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsMinimaLogger)
