//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/SeedPhrase.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/minima/utils/Maths.h"
#include "org/minima/utils/SeedPhrase.h"

@interface OrgMinimaUtilsSeedPhrase ()

+ (void)addFullNoun;

+ (void)addRandomWithNSStringArray:(IOSObjectArray *)zWordBlock;

@end

inline NSString *OrgMinimaUtilsSeedPhrase_get_mFinalSentance(void);
inline NSString *OrgMinimaUtilsSeedPhrase_set_mFinalSentance(NSString *value);
static NSString *OrgMinimaUtilsSeedPhrase_mFinalSentance;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaUtilsSeedPhrase, mFinalSentance, NSString *)

inline JavaMathBigInteger *OrgMinimaUtilsSeedPhrase_get_mTotalCount(void);
inline JavaMathBigInteger *OrgMinimaUtilsSeedPhrase_set_mTotalCount(JavaMathBigInteger *value);
static JavaMathBigInteger *OrgMinimaUtilsSeedPhrase_mTotalCount;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaUtilsSeedPhrase, mTotalCount, JavaMathBigInteger *)

inline JavaSecuritySecureRandom *OrgMinimaUtilsSeedPhrase_get_mSecRand(void);
inline JavaSecuritySecureRandom *OrgMinimaUtilsSeedPhrase_set_mSecRand(JavaSecuritySecureRandom *value);
static JavaSecuritySecureRandom *OrgMinimaUtilsSeedPhrase_mSecRand;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaUtilsSeedPhrase, mSecRand, JavaSecuritySecureRandom *)

__attribute__((unused)) static void OrgMinimaUtilsSeedPhrase_addFullNoun(void);

__attribute__((unused)) static void OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(IOSObjectArray *zWordBlock);

J2OBJC_INITIALIZED_DEFN(OrgMinimaUtilsSeedPhrase)

IOSObjectArray *OrgMinimaUtilsSeedPhrase_ARTICLE;
IOSObjectArray *OrgMinimaUtilsSeedPhrase_ADJS;
IOSObjectArray *OrgMinimaUtilsSeedPhrase_COLOUR;
IOSObjectArray *OrgMinimaUtilsSeedPhrase_NOUNS;
IOSObjectArray *OrgMinimaUtilsSeedPhrase_VERB;
IOSObjectArray *OrgMinimaUtilsSeedPhrase_CONJ;

@implementation OrgMinimaUtilsSeedPhrase

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsSeedPhrase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs {
  OrgMinimaUtilsSeedPhrase_mainWithNSStringArray_(zArgs);
}

+ (void)addFullNoun {
  OrgMinimaUtilsSeedPhrase_addFullNoun();
}

+ (void)addRandomWithNSStringArray:(IOSObjectArray *)zWordBlock {
  OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(zWordBlock);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  methods[2].selector = @selector(addFullNoun);
  methods[3].selector = @selector(addRandomWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ARTICLE", "[LNSString;", .constantValue.asLong = 0, 0x9, -1, 3, -1, -1 },
    { "ADJS", "[LNSString;", .constantValue.asLong = 0, 0x9, -1, 4, -1, -1 },
    { "COLOUR", "[LNSString;", .constantValue.asLong = 0, 0x9, -1, 5, -1, -1 },
    { "NOUNS", "[LNSString;", .constantValue.asLong = 0, 0x9, -1, 6, -1, -1 },
    { "VERB", "[LNSString;", .constantValue.asLong = 0, 0x9, -1, 7, -1, -1 },
    { "CONJ", "[LNSString;", .constantValue.asLong = 0, 0x9, -1, 8, -1, -1 },
    { "mFinalSentance", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
    { "mTotalCount", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0xa, -1, 10, -1, -1 },
    { "mSecRand", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0xa, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "main", "[LNSString;", "addRandom", &OrgMinimaUtilsSeedPhrase_ARTICLE, &OrgMinimaUtilsSeedPhrase_ADJS, &OrgMinimaUtilsSeedPhrase_COLOUR, &OrgMinimaUtilsSeedPhrase_NOUNS, &OrgMinimaUtilsSeedPhrase_VERB, &OrgMinimaUtilsSeedPhrase_CONJ, &OrgMinimaUtilsSeedPhrase_mFinalSentance, &OrgMinimaUtilsSeedPhrase_mTotalCount, &OrgMinimaUtilsSeedPhrase_mSecRand };
  static const J2ObjcClassInfo _OrgMinimaUtilsSeedPhrase = { "SeedPhrase", "org.minima.utils", ptrTable, methods, fields, 7, 0x1, 4, 9, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsSeedPhrase;
}

+ (void)initialize {
  if (self == [OrgMinimaUtilsSeedPhrase class]) {
    JreStrongAssignAndConsume(&OrgMinimaUtilsSeedPhrase_ARTICLE, [IOSObjectArray newArrayWithObjects:(id[]){ @"THE", @"A" } count:2 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgMinimaUtilsSeedPhrase_ADJS, [IOSObjectArray newArrayWithObjects:(id[]){ @"QUICK", @"SLOW", @"SLY", @"FAST", @"FAT", @"THIN", @"GREEDY", @"WARM", @"TIRED", @"CUNNING", @"SAD", @"HAPPY", @"LAZY", @"HUNGRY", @"LOVELY", @"NICE", @"SHINY", @"SCALY", @"FURRY" } count:19 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgMinimaUtilsSeedPhrase_COLOUR, [IOSObjectArray newArrayWithObjects:(id[]){ @"RED", @"GREEN", @"BLUE", @"YELLOW", @"BLACK", @"WHITE", @"PINK", @"ORANGE", @"GREY", @"BRONZE", @"GOLDEN", @"SILVER", @"METAL" } count:13 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgMinimaUtilsSeedPhrase_NOUNS, [IOSObjectArray newArrayWithObjects:(id[]){ @"CAT", @"DOG", @"BIRD", @"FISH", @"LION", @"HIPPO", @"WOLF", @"COW", @"MOUSE", @"TIGER", @"FOX", @"RABBIT", @"ZEBRA", @"DEER", @"MONKEY", @"GORILLA", @"APE", @"PARROT", @"SLUG", @"WORM", @"ELEPHANT", @"RAT" } count:22 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgMinimaUtilsSeedPhrase_VERB, [IOSObjectArray newArrayWithObjects:(id[]){ @"LICKED", @"TOUCHED", @"KICKED", @"LIKED", @"ATE", @"EYED", @"SAW", @"SNIFFED", @"PUSHED", @"PULLED", @"DRAGGED", @"DROPPED", @"CHEWED", @"PUNCHED", @"TICKLED", @"FLICKED", @"WASHED", @"TOUCHED" } count:18 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgMinimaUtilsSeedPhrase_CONJ, [IOSObjectArray newArrayWithObjects:(id[]){ @"AND", @"AS", @"BUT", @"WHEN", @"AFTER", @"BEFORE" } count:6 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(OrgMinimaUtilsSeedPhrase)
  }
}

@end

void OrgMinimaUtilsSeedPhrase_init(OrgMinimaUtilsSeedPhrase *self) {
  NSObject_init(self);
}

OrgMinimaUtilsSeedPhrase *new_OrgMinimaUtilsSeedPhrase_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsSeedPhrase, init)
}

OrgMinimaUtilsSeedPhrase *create_OrgMinimaUtilsSeedPhrase_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsSeedPhrase, init)
}

void OrgMinimaUtilsSeedPhrase_mainWithNSStringArray_(IOSObjectArray *zArgs) {
  OrgMinimaUtilsSeedPhrase_initialize();
  JreStrongAssignAndConsume(&OrgMinimaUtilsSeedPhrase_mSecRand, new_JavaSecuritySecureRandom_init());
  JreStrongAssign(&OrgMinimaUtilsSeedPhrase_mFinalSentance, @"");
  JreStrongAssign(&OrgMinimaUtilsSeedPhrase_mTotalCount, JreLoadStatic(JavaMathBigInteger, ONE));
  OrgMinimaUtilsSeedPhrase_addFullNoun();
  OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(OrgMinimaUtilsSeedPhrase_VERB);
  OrgMinimaUtilsSeedPhrase_addFullNoun();
  OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(OrgMinimaUtilsSeedPhrase_CONJ);
  OrgMinimaUtilsSeedPhrase_addFullNoun();
  OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(OrgMinimaUtilsSeedPhrase_VERB);
  OrgMinimaUtilsSeedPhrase_addFullNoun();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:[((NSString *) nil_chk(OrgMinimaUtilsSeedPhrase_mFinalSentance)) java_trim]];
  jdouble sec = OrgMinimaUtilsMaths_log2BIWithJavaMathBigInteger_(OrgMinimaUtilsSeedPhrase_mTotalCount);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Total possible : ", OrgMinimaUtilsSeedPhrase_mTotalCount)];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$D", @"Security 2^", sec)];
}

void OrgMinimaUtilsSeedPhrase_addFullNoun() {
  OrgMinimaUtilsSeedPhrase_initialize();
  OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(OrgMinimaUtilsSeedPhrase_ARTICLE);
  OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(OrgMinimaUtilsSeedPhrase_ADJS);
  OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(OrgMinimaUtilsSeedPhrase_COLOUR);
  OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(OrgMinimaUtilsSeedPhrase_NOUNS);
}

void OrgMinimaUtilsSeedPhrase_addRandomWithNSStringArray_(IOSObjectArray *zWordBlock) {
  OrgMinimaUtilsSeedPhrase_initialize();
  JreStrAppendStrong(&OrgMinimaUtilsSeedPhrase_mFinalSentance, "$C", IOSObjectArray_Get(zWordBlock, [((JavaSecuritySecureRandom *) nil_chk(OrgMinimaUtilsSeedPhrase_mSecRand)) nextIntWithInt:((IOSObjectArray *) nil_chk(zWordBlock))->size_]), ' ');
  JreStrongAssign(&OrgMinimaUtilsSeedPhrase_mTotalCount, [((JavaMathBigInteger *) nil_chk(OrgMinimaUtilsSeedPhrase_mTotalCount)) multiplyWithJavaMathBigInteger:create_JavaMathBigInteger_initWithNSString_(JreStrcat("I", zWordBlock->size_))]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsSeedPhrase)
