//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/digest/KeccakDigest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaUtilsDigestKeccakDigest")
#ifdef RESTRICT_OrgMinimaUtilsDigestKeccakDigest
#define INCLUDE_ALL_OrgMinimaUtilsDigestKeccakDigest 0
#else
#define INCLUDE_ALL_OrgMinimaUtilsDigestKeccakDigest 1
#endif
#undef RESTRICT_OrgMinimaUtilsDigestKeccakDigest

#if !defined (OrgMinimaUtilsDigestKeccakDigest_) && (INCLUDE_ALL_OrgMinimaUtilsDigestKeccakDigest || defined(INCLUDE_OrgMinimaUtilsDigestKeccakDigest))
#define OrgMinimaUtilsDigestKeccakDigest_

#define RESTRICT_OrgMinimaUtilsDigestExtendedDigest 1
#define INCLUDE_OrgMinimaUtilsDigestExtendedDigest 1
#include "org/minima/utils/digest/ExtendedDigest.h"

@class IOSByteArray;
@class IOSLongArray;

@interface OrgMinimaUtilsDigestKeccakDigest : NSObject < OrgMinimaUtilsDigestExtendedDigest > {
 @public
  IOSLongArray *state_;
  IOSByteArray *dataQueue_;
  jint rate_;
  jint bitsInQueue_;
  jint fixedOutputLength_;
  jboolean squeezing_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)bitLength;

- (instancetype)initWithOrgMinimaUtilsDigestKeccakDigest:(OrgMinimaUtilsDigestKeccakDigest *)source;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getByteLength;

- (jint)getDigestSize;

- (void)reset;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

#pragma mark Protected

- (void)absorbWithByteArray:(IOSByteArray *)data
                    withInt:(jint)off
                    withInt:(jint)len;

- (void)absorbBitsWithInt:(jint)data
                  withInt:(jint)bits;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff
                    withByte:(jbyte)partialByte
                     withInt:(jint)partialBits;

- (void)squeezeWithByteArray:(IOSByteArray *)output
                     withInt:(jint)offset
                    withLong:(jlong)outputLength;

@end

J2OBJC_STATIC_INIT(OrgMinimaUtilsDigestKeccakDigest)

J2OBJC_FIELD_SETTER(OrgMinimaUtilsDigestKeccakDigest, state_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgMinimaUtilsDigestKeccakDigest, dataQueue_, IOSByteArray *)

FOUNDATION_EXPORT void OrgMinimaUtilsDigestKeccakDigest_init(OrgMinimaUtilsDigestKeccakDigest *self);

FOUNDATION_EXPORT OrgMinimaUtilsDigestKeccakDigest *new_OrgMinimaUtilsDigestKeccakDigest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsDigestKeccakDigest *create_OrgMinimaUtilsDigestKeccakDigest_init(void);

FOUNDATION_EXPORT void OrgMinimaUtilsDigestKeccakDigest_initWithInt_(OrgMinimaUtilsDigestKeccakDigest *self, jint bitLength);

FOUNDATION_EXPORT OrgMinimaUtilsDigestKeccakDigest *new_OrgMinimaUtilsDigestKeccakDigest_initWithInt_(jint bitLength) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsDigestKeccakDigest *create_OrgMinimaUtilsDigestKeccakDigest_initWithInt_(jint bitLength);

FOUNDATION_EXPORT void OrgMinimaUtilsDigestKeccakDigest_initWithOrgMinimaUtilsDigestKeccakDigest_(OrgMinimaUtilsDigestKeccakDigest *self, OrgMinimaUtilsDigestKeccakDigest *source);

FOUNDATION_EXPORT OrgMinimaUtilsDigestKeccakDigest *new_OrgMinimaUtilsDigestKeccakDigest_initWithOrgMinimaUtilsDigestKeccakDigest_(OrgMinimaUtilsDigestKeccakDigest *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsDigestKeccakDigest *create_OrgMinimaUtilsDigestKeccakDigest_initWithOrgMinimaUtilsDigestKeccakDigest_(OrgMinimaUtilsDigestKeccakDigest *source);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaUtilsDigestKeccakDigest)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaUtilsDigestKeccakDigest")
