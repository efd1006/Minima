//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/digest/WinternitzOTSVerify.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaUtilsDigestWinternitzOTSVerify")
#ifdef RESTRICT_OrgMinimaUtilsDigestWinternitzOTSVerify
#define INCLUDE_ALL_OrgMinimaUtilsDigestWinternitzOTSVerify 0
#else
#define INCLUDE_ALL_OrgMinimaUtilsDigestWinternitzOTSVerify 1
#endif
#undef RESTRICT_OrgMinimaUtilsDigestWinternitzOTSVerify

#if !defined (OrgMinimaUtilsDigestWinternitzOTSVerify_) && (INCLUDE_ALL_OrgMinimaUtilsDigestWinternitzOTSVerify || defined(INCLUDE_OrgMinimaUtilsDigestWinternitzOTSVerify))
#define OrgMinimaUtilsDigestWinternitzOTSVerify_

@class IOSByteArray;
@protocol OrgMinimaUtilsDigestDigest;

@interface OrgMinimaUtilsDigestWinternitzOTSVerify : NSObject

#pragma mark Public

- (instancetype)initWithOrgMinimaUtilsDigestDigest:(id<OrgMinimaUtilsDigestDigest>)digest
                                           withInt:(jint)w;

- (jint)getLogWithInt:(jint)intValue;

- (jint)getSignatureLength;

- (IOSByteArray *)VerifyWithByteArray:(IOSByteArray *)message
                        withByteArray:(IOSByteArray *)signature;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaUtilsDigestWinternitzOTSVerify)

FOUNDATION_EXPORT void OrgMinimaUtilsDigestWinternitzOTSVerify_initWithOrgMinimaUtilsDigestDigest_withInt_(OrgMinimaUtilsDigestWinternitzOTSVerify *self, id<OrgMinimaUtilsDigestDigest> digest, jint w);

FOUNDATION_EXPORT OrgMinimaUtilsDigestWinternitzOTSVerify *new_OrgMinimaUtilsDigestWinternitzOTSVerify_initWithOrgMinimaUtilsDigestDigest_withInt_(id<OrgMinimaUtilsDigestDigest> digest, jint w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsDigestWinternitzOTSVerify *create_OrgMinimaUtilsDigestWinternitzOTSVerify_initWithOrgMinimaUtilsDigestDigest_withInt_(id<OrgMinimaUtilsDigestDigest> digest, jint w);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaUtilsDigestWinternitzOTSVerify)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaUtilsDigestWinternitzOTSVerify")
