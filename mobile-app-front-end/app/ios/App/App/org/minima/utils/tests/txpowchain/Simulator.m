//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/tests/txpowchain/Simulator.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "org/minima/utils/MinimaLogger.h"
#include "org/minima/utils/tests/txpowchain/Simulator.h"
#include "org/minima/utils/tests/txpowchain/User.h"

@implementation OrgMinimaUtilsTestsTxpowchainSimulator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsTestsTxpowchainSimulator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs {
  OrgMinimaUtilsTestsTxpowchainSimulator_mainWithNSStringArray_(zArgs);
}

+ (void)logWithNSString:(NSString *)zLog {
  OrgMinimaUtilsTestsTxpowchainSimulator_logWithNSString_(zLog);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  methods[2].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NUM_USERS", "I", .constantValue.asInt = OrgMinimaUtilsTestsTxpowchainSimulator_NUM_USERS, 0x19, -1, -1, -1, -1 },
    { "BLOCKTIME", "D", .constantValue.asDouble = OrgMinimaUtilsTestsTxpowchainSimulator_BLOCKTIME, 0x19, -1, -1, -1, -1 },
    { "DURATION", "D", .constantValue.asDouble = OrgMinimaUtilsTestsTxpowchainSimulator_DURATION, 0x19, -1, -1, -1, -1 },
    { "TXN_RELIABILITY", "D", .constantValue.asDouble = OrgMinimaUtilsTestsTxpowchainSimulator_TXN_RELIABILITY, 0x19, -1, -1, -1, -1 },
    { "RELIABILITY_DOWNTIME", "D", .constantValue.asDouble = OrgMinimaUtilsTestsTxpowchainSimulator_RELIABILITY_DOWNTIME, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "main", "[LNSString;", "log", "LNSString;" };
  static const J2ObjcClassInfo _OrgMinimaUtilsTestsTxpowchainSimulator = { "Simulator", "org.minima.utils.tests.txpowchain", ptrTable, methods, fields, 7, 0x1, 3, 5, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsTestsTxpowchainSimulator;
}

@end

void OrgMinimaUtilsTestsTxpowchainSimulator_init(OrgMinimaUtilsTestsTxpowchainSimulator *self) {
  NSObject_init(self);
}

OrgMinimaUtilsTestsTxpowchainSimulator *new_OrgMinimaUtilsTestsTxpowchainSimulator_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsTestsTxpowchainSimulator, init)
}

OrgMinimaUtilsTestsTxpowchainSimulator *create_OrgMinimaUtilsTestsTxpowchainSimulator_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsTestsTxpowchainSimulator, init)
}

void OrgMinimaUtilsTestsTxpowchainSimulator_mainWithNSStringArray_(IOSObjectArray *zArgs) {
  OrgMinimaUtilsTestsTxpowchainSimulator_initialize();
  JavaUtilArrayList *users = create_JavaUtilArrayList_init();
  for (jint i = 0; i < OrgMinimaUtilsTestsTxpowchainSimulator_NUM_USERS; i++) {
    [users addWithId:create_OrgMinimaUtilsTestsTxpowchainUser_initWithInt_(i + 1)];
  }
  OrgMinimaUtilsTestsTxpowchainSimulator_logWithNSString_(@"Starting simulation..\n");
  jlong timenow = JavaLangSystem_currentTimeMillis();
  jint currentBlock = 0;
  jint totalstales = 0;
  jint totaltxn = 0;
  for (jdouble timesecs = 0; timesecs < OrgMinimaUtilsTestsTxpowchainSimulator_DURATION; timesecs++) {
    for (OrgMinimaUtilsTestsTxpowchainUser * __strong user in users) {
      jint blockFound = [((OrgMinimaUtilsTestsTxpowchainUser *) nil_chk(user)) UpdateWithDouble:timesecs withInt:currentBlock];
      if (blockFound == -1) {
      }
      else if (blockFound == 0) {
        totaltxn++;
      }
      else {
        totaltxn++;
        if (blockFound <= currentBlock) {
          totalstales++;
        }
        else {
          currentBlock = blockFound;
        }
      }
    }
  }
  jlong timediff = JavaLangSystem_currentTimeMillis() - timenow;
  OrgMinimaUtilsTestsTxpowchainSimulator_logWithNSString_(JreStrcat("$J$", @"\nFinished simulation in ", timediff, @" milli secs"));
  jdouble totblock = (OrgMinimaUtilsTestsTxpowchainSimulator_DURATION / OrgMinimaUtilsTestsTxpowchainSimulator_BLOCKTIME);
  OrgMinimaUtilsTestsTxpowchainSimulator_logWithNSString_(JreStrcat("$I$D", @"\nTotal Blocks       : ", currentBlock, @" / ", totblock));
  OrgMinimaUtilsTestsTxpowchainSimulator_logWithNSString_(JreStrcat("$I$D", @"Total Transactions : ", totaltxn, @" / ", (OrgMinimaUtilsTestsTxpowchainSimulator_NUM_USERS * OrgMinimaUtilsTestsTxpowchainUser_TXN_PER_SEC * OrgMinimaUtilsTestsTxpowchainSimulator_DURATION)));
  OrgMinimaUtilsTestsTxpowchainSimulator_logWithNSString_(JreStrcat("$I$DC", @"Total Stales       : ", totalstales, @" .... ", ((totalstales / totblock) * 100), '%'));
}

void OrgMinimaUtilsTestsTxpowchainSimulator_logWithNSString_(NSString *zLog) {
  OrgMinimaUtilsTestsTxpowchainSimulator_initialize();
  OrgMinimaUtilsMinimaLogger_logWithNSString_(zLog);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsTestsTxpowchainSimulator)
