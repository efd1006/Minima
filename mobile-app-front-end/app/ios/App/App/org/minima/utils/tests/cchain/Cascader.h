//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/tests/cchain/Cascader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaUtilsTestsCchainCascader")
#ifdef RESTRICT_OrgMinimaUtilsTestsCchainCascader
#define INCLUDE_ALL_OrgMinimaUtilsTestsCchainCascader 0
#else
#define INCLUDE_ALL_OrgMinimaUtilsTestsCchainCascader 1
#endif
#undef RESTRICT_OrgMinimaUtilsTestsCchainCascader

#if !defined (OrgMinimaUtilsTestsCchainCascader_) && (INCLUDE_ALL_OrgMinimaUtilsTestsCchainCascader || defined(INCLUDE_OrgMinimaUtilsTestsCchainCascader))
#define OrgMinimaUtilsTestsCchainCascader_

@class IOSObjectArray;
@class JavaUtilArrayList;
@class OrgMinimaUtilsTestsCchainCChain;
@class OrgMinimaUtilsTestsCchainCChainBlock;

@interface OrgMinimaUtilsTestsCchainCascader : NSObject {
 @public
  OrgMinimaUtilsTestsCchainCChainBlock *mRoot_;
  OrgMinimaUtilsTestsCchainCChainBlock *mCurrent_;
  IOSObjectArray *mLatestBlocks_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgMinimaUtilsTestsCchainCChain:(OrgMinimaUtilsTestsCchainCChain *)zChain;

- (void)addBlockWithOrgMinimaUtilsTestsCchainCChainBlock:(OrgMinimaUtilsTestsCchainCChainBlock *)zBlock;

- (OrgMinimaUtilsTestsCchainCChain *)getAsCChain;

- (JavaUtilArrayList *)getAsList;

- (OrgMinimaUtilsTestsCchainCChainBlock *)getRoot;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaUtilsTestsCchainCascader)

J2OBJC_FIELD_SETTER(OrgMinimaUtilsTestsCchainCascader, mRoot_, OrgMinimaUtilsTestsCchainCChainBlock *)
J2OBJC_FIELD_SETTER(OrgMinimaUtilsTestsCchainCascader, mCurrent_, OrgMinimaUtilsTestsCchainCChainBlock *)
J2OBJC_FIELD_SETTER(OrgMinimaUtilsTestsCchainCascader, mLatestBlocks_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgMinimaUtilsTestsCchainCascader_init(OrgMinimaUtilsTestsCchainCascader *self);

FOUNDATION_EXPORT OrgMinimaUtilsTestsCchainCascader *new_OrgMinimaUtilsTestsCchainCascader_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsTestsCchainCascader *create_OrgMinimaUtilsTestsCchainCascader_init(void);

FOUNDATION_EXPORT void OrgMinimaUtilsTestsCchainCascader_initWithOrgMinimaUtilsTestsCchainCChain_(OrgMinimaUtilsTestsCchainCascader *self, OrgMinimaUtilsTestsCchainCChain *zChain);

FOUNDATION_EXPORT OrgMinimaUtilsTestsCchainCascader *new_OrgMinimaUtilsTestsCchainCascader_initWithOrgMinimaUtilsTestsCchainCChain_(OrgMinimaUtilsTestsCchainCChain *zChain) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsTestsCchainCascader *create_OrgMinimaUtilsTestsCchainCascader_initWithOrgMinimaUtilsTestsCchainCChain_(OrgMinimaUtilsTestsCchainCChain *zChain);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaUtilsTestsCchainCascader)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaUtilsTestsCchainCascader")
