//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/tests/numbers/SBlocks.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/minima/utils/MinimaLogger.h"
#include "org/minima/utils/tests/numbers/SBlocks.h"

@implementation OrgMinimaUtilsTestsNumbersSBlocks

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsTestsNumbersSBlocks_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs {
  OrgMinimaUtilsTestsNumbersSBlocks_mainWithNSStringArray_(zArgs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "main", "[LNSString;" };
  static const J2ObjcClassInfo _OrgMinimaUtilsTestsNumbersSBlocks = { "SBlocks", "org.minima.utils.tests.numbers", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsTestsNumbersSBlocks;
}

@end

void OrgMinimaUtilsTestsNumbersSBlocks_init(OrgMinimaUtilsTestsNumbersSBlocks *self) {
  NSObject_init(self);
}

OrgMinimaUtilsTestsNumbersSBlocks *new_OrgMinimaUtilsTestsNumbersSBlocks_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsTestsNumbersSBlocks, init)
}

OrgMinimaUtilsTestsNumbersSBlocks *create_OrgMinimaUtilsTestsNumbersSBlocks_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsTestsNumbersSBlocks, init)
}

void OrgMinimaUtilsTestsNumbersSBlocks_mainWithNSStringArray_(IOSObjectArray *zArgs) {
  OrgMinimaUtilsTestsNumbersSBlocks_initialize();
  jint max = 256;
  IOSObjectArray *sbl = [IOSObjectArray arrayWithLength:max type:JavaMathBigInteger_class_()];
  JavaMathBigInteger *two = create_JavaMathBigInteger_initWithNSString_(@"2");
  for (jint i = 0; i < max; i++) {
    IOSObjectArray_Set(sbl, i, [two powWithInt:i]);
    OrgMinimaUtilsMinimaLogger_logWithNSString_(JreStrcat("I$$", i, @")    0x", [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(sbl, i))) toStringWithInt:16]));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsTestsNumbersSBlocks)
