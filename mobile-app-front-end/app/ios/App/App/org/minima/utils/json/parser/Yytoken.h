//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/json/parser/Yytoken.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaUtilsJsonParserYytoken")
#ifdef RESTRICT_OrgMinimaUtilsJsonParserYytoken
#define INCLUDE_ALL_OrgMinimaUtilsJsonParserYytoken 0
#else
#define INCLUDE_ALL_OrgMinimaUtilsJsonParserYytoken 1
#endif
#undef RESTRICT_OrgMinimaUtilsJsonParserYytoken

#if !defined (OrgMinimaUtilsJsonParserYytoken_) && (INCLUDE_ALL_OrgMinimaUtilsJsonParserYytoken || defined(INCLUDE_OrgMinimaUtilsJsonParserYytoken))
#define OrgMinimaUtilsJsonParserYytoken_

@interface OrgMinimaUtilsJsonParserYytoken : NSObject {
 @public
  jint type_;
  id value_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)type
                     withId:(id)value;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaUtilsJsonParserYytoken)

J2OBJC_FIELD_SETTER(OrgMinimaUtilsJsonParserYytoken, value_, id)

inline jint OrgMinimaUtilsJsonParserYytoken_get_TYPE_VALUE(void);
#define OrgMinimaUtilsJsonParserYytoken_TYPE_VALUE 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaUtilsJsonParserYytoken, TYPE_VALUE, jint)

inline jint OrgMinimaUtilsJsonParserYytoken_get_TYPE_LEFT_BRACE(void);
#define OrgMinimaUtilsJsonParserYytoken_TYPE_LEFT_BRACE 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaUtilsJsonParserYytoken, TYPE_LEFT_BRACE, jint)

inline jint OrgMinimaUtilsJsonParserYytoken_get_TYPE_RIGHT_BRACE(void);
#define OrgMinimaUtilsJsonParserYytoken_TYPE_RIGHT_BRACE 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaUtilsJsonParserYytoken, TYPE_RIGHT_BRACE, jint)

inline jint OrgMinimaUtilsJsonParserYytoken_get_TYPE_LEFT_SQUARE(void);
#define OrgMinimaUtilsJsonParserYytoken_TYPE_LEFT_SQUARE 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaUtilsJsonParserYytoken, TYPE_LEFT_SQUARE, jint)

inline jint OrgMinimaUtilsJsonParserYytoken_get_TYPE_RIGHT_SQUARE(void);
#define OrgMinimaUtilsJsonParserYytoken_TYPE_RIGHT_SQUARE 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaUtilsJsonParserYytoken, TYPE_RIGHT_SQUARE, jint)

inline jint OrgMinimaUtilsJsonParserYytoken_get_TYPE_COMMA(void);
#define OrgMinimaUtilsJsonParserYytoken_TYPE_COMMA 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaUtilsJsonParserYytoken, TYPE_COMMA, jint)

inline jint OrgMinimaUtilsJsonParserYytoken_get_TYPE_COLON(void);
#define OrgMinimaUtilsJsonParserYytoken_TYPE_COLON 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaUtilsJsonParserYytoken, TYPE_COLON, jint)

inline jint OrgMinimaUtilsJsonParserYytoken_get_TYPE_EOF(void);
#define OrgMinimaUtilsJsonParserYytoken_TYPE_EOF -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgMinimaUtilsJsonParserYytoken, TYPE_EOF, jint)

FOUNDATION_EXPORT void OrgMinimaUtilsJsonParserYytoken_initWithInt_withId_(OrgMinimaUtilsJsonParserYytoken *self, jint type, id value);

FOUNDATION_EXPORT OrgMinimaUtilsJsonParserYytoken *new_OrgMinimaUtilsJsonParserYytoken_initWithInt_withId_(jint type, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaUtilsJsonParserYytoken *create_OrgMinimaUtilsJsonParserYytoken_initWithInt_withId_(jint type, id value);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaUtilsJsonParserYytoken)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaUtilsJsonParserYytoken")
