//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/Crypto.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/DataOutputStream.h"
#include "java/lang/Exception.h"
#include "java/math/BigInteger.h"
#include "org/minima/objects/base/MiniData.h"
#include "org/minima/utils/Crypto.h"
#include "org/minima/utils/Streamable.h"
#include "org/minima/utils/digest/Digest.h"
#include "org/minima/utils/digest/KeccakDigest.h"
#include "org/minima/utils/digest/SHA256Digest.h"

inline OrgMinimaUtilsCrypto *OrgMinimaUtilsCrypto_get_mCrypto(void);
inline OrgMinimaUtilsCrypto *OrgMinimaUtilsCrypto_set_mCrypto(OrgMinimaUtilsCrypto *value);
static OrgMinimaUtilsCrypto *OrgMinimaUtilsCrypto_mCrypto;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaUtilsCrypto, mCrypto, OrgMinimaUtilsCrypto *)

J2OBJC_INITIALIZED_DEFN(OrgMinimaUtilsCrypto)

JavaMathBigInteger *OrgMinimaUtilsCrypto_MAX_VAL;
OrgMinimaObjectsBaseMiniData *OrgMinimaUtilsCrypto_MAX_HASH;

@implementation OrgMinimaUtilsCrypto

+ (OrgMinimaUtilsCrypto *)getInstance {
  return OrgMinimaUtilsCrypto_getInstance();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsCrypto_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSByteArray *)hashDataWithByteArray:(IOSByteArray *)zData {
  return [self hashDataWithByteArray:zData withInt:512];
}

- (IOSByteArray *)hashDataWithByteArray:(IOSByteArray *)zData
                                withInt:(jint)zBitLength {
  @try {
    id<OrgMinimaUtilsDigestDigest> keccak = new_OrgMinimaUtilsDigestKeccakDigest_initWithInt_(zBitLength);
    IOSByteArray *output = [IOSByteArray newArrayWithLength:[keccak getDigestSize]];
    [keccak updateWithByteArray:zData withInt:0 withInt:((IOSByteArray *) nil_chk(zData))->size_];
    [keccak doFinalWithByteArray:output withInt:0];
    return output;
  }
  @catch (JavaLangException *exc) {
    [exc printStackTrace];
  }
  return nil;
}

- (IOSByteArray *)hashSHA2WithByteArray:(IOSByteArray *)zData {
  @try {
    id<OrgMinimaUtilsDigestDigest> sha2 = new_OrgMinimaUtilsDigestSHA256Digest_init();
    IOSByteArray *output = [IOSByteArray newArrayWithLength:[sha2 getDigestSize]];
    [sha2 updateWithByteArray:zData withInt:0 withInt:((IOSByteArray *) nil_chk(zData))->size_];
    [sha2 doFinalWithByteArray:output withInt:0];
    return output;
  }
  @catch (JavaLangException *exc) {
    [exc printStackTrace];
  }
  return nil;
}

- (OrgMinimaObjectsBaseMiniData *)hashObjectWithOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zObject {
  return [self hashObjectWithOrgMinimaUtilsStreamable:zObject withInt:512];
}

- (OrgMinimaObjectsBaseMiniData *)hashObjectWithOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zObject
                                                                 withInt:(jint)zBitLength {
  @try {
    JavaIoByteArrayOutputStream *baos = new_JavaIoByteArrayOutputStream_init();
    JavaIoDataOutputStream *dos = new_JavaIoDataOutputStream_initWithJavaIoOutputStream_(baos);
    [((id<OrgMinimaUtilsStreamable>) nil_chk(zObject)) writeDataStreamWithJavaIoDataOutputStream:dos];
    [dos flush];
    IOSByteArray *objdata = [baos toByteArray];
    IOSByteArray *hashdata = [self hashDataWithByteArray:objdata withInt:zBitLength];
    return new_OrgMinimaObjectsBaseMiniData_initWithByteArray_(hashdata);
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
  }
  return nil;
}

- (OrgMinimaObjectsBaseMiniData *)hashObjectsWithOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zLeftObject
                                             withOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zRightObject2 {
  return [self hashObjectsWithOrgMinimaUtilsStreamable:zLeftObject withOrgMinimaUtilsStreamable:zRightObject2 withInt:512];
}

- (OrgMinimaObjectsBaseMiniData *)hashObjectsWithOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zLeftObject
                                             withOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zRightObject2
                                                                  withInt:(jint)zBitLength {
  @try {
    JavaIoByteArrayOutputStream *baos = new_JavaIoByteArrayOutputStream_init();
    JavaIoDataOutputStream *dos = new_JavaIoDataOutputStream_initWithJavaIoOutputStream_(baos);
    [((id<OrgMinimaUtilsStreamable>) nil_chk(zLeftObject)) writeDataStreamWithJavaIoDataOutputStream:dos];
    [((id<OrgMinimaUtilsStreamable>) nil_chk(zRightObject2)) writeDataStreamWithJavaIoDataOutputStream:dos];
    [dos flush];
    IOSByteArray *objdata = [baos toByteArray];
    IOSByteArray *hashdata = [self hashDataWithByteArray:objdata withInt:zBitLength];
    return new_OrgMinimaObjectsBaseMiniData_initWithByteArray_(hashdata);
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
  }
  return nil;
}

- (OrgMinimaObjectsBaseMiniData *)hashAllObjectsWithOrgMinimaUtilsStreamableArray:(IOSObjectArray *)zObjects {
  @try {
    JavaIoByteArrayOutputStream *baos = new_JavaIoByteArrayOutputStream_init();
    JavaIoDataOutputStream *dos = new_JavaIoDataOutputStream_initWithJavaIoOutputStream_(baos);
    {
      IOSObjectArray *a__ = zObjects;
      id<OrgMinimaUtilsStreamable> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id<OrgMinimaUtilsStreamable> const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<OrgMinimaUtilsStreamable> object = *b__++;
        [((id<OrgMinimaUtilsStreamable>) nil_chk(object)) writeDataStreamWithJavaIoDataOutputStream:dos];
      }
    }
    [dos flush];
    IOSByteArray *objdata = [baos toByteArray];
    IOSByteArray *hashdata = [self hashDataWithByteArray:objdata];
    return new_OrgMinimaObjectsBaseMiniData_initWithByteArray_(hashdata);
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
  }
  return nil;
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs {
  OrgMinimaUtilsCrypto_mainWithNSStringArray_(zArgs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMinimaUtilsCrypto;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x1, 7, 9, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniData;", 0x81, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 12, 13, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstance);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(hashDataWithByteArray:);
  methods[3].selector = @selector(hashDataWithByteArray:withInt:);
  methods[4].selector = @selector(hashSHA2WithByteArray:);
  methods[5].selector = @selector(hashObjectWithOrgMinimaUtilsStreamable:);
  methods[6].selector = @selector(hashObjectWithOrgMinimaUtilsStreamable:withInt:);
  methods[7].selector = @selector(hashObjectsWithOrgMinimaUtilsStreamable:withOrgMinimaUtilsStreamable:);
  methods[8].selector = @selector(hashObjectsWithOrgMinimaUtilsStreamable:withOrgMinimaUtilsStreamable:withInt:);
  methods[9].selector = @selector(hashAllObjectsWithOrgMinimaUtilsStreamableArray:);
  methods[10].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_VAL", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "MAX_HASH", "LOrgMinimaObjectsBaseMiniData;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "mCrypto", "LOrgMinimaUtilsCrypto;", .constantValue.asLong = 0, 0xa, -1, 16, -1, -1 },
  };
  static const void *ptrTable[] = { "hashData", "[B", "[BI", "hashSHA2", "hashObject", "LOrgMinimaUtilsStreamable;", "LOrgMinimaUtilsStreamable;I", "hashObjects", "LOrgMinimaUtilsStreamable;LOrgMinimaUtilsStreamable;", "LOrgMinimaUtilsStreamable;LOrgMinimaUtilsStreamable;I", "hashAllObjects", "[LOrgMinimaUtilsStreamable;", "main", "[LNSString;", &OrgMinimaUtilsCrypto_MAX_VAL, &OrgMinimaUtilsCrypto_MAX_HASH, &OrgMinimaUtilsCrypto_mCrypto };
  static const J2ObjcClassInfo _OrgMinimaUtilsCrypto = { "Crypto", "org.minima.utils", ptrTable, methods, fields, 7, 0x1, 11, 3, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsCrypto;
}

+ (void)initialize {
  if (self == [OrgMinimaUtilsCrypto class]) {
    OrgMinimaUtilsCrypto_MAX_VAL = new_JavaMathBigInteger_initWithNSString_withInt_(@"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16);
    OrgMinimaUtilsCrypto_MAX_HASH = new_OrgMinimaObjectsBaseMiniData_initWithNSString_(@"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF");
    J2OBJC_SET_INITIALIZED(OrgMinimaUtilsCrypto)
  }
}

@end

OrgMinimaUtilsCrypto *OrgMinimaUtilsCrypto_getInstance() {
  OrgMinimaUtilsCrypto_initialize();
  if (OrgMinimaUtilsCrypto_mCrypto == nil) {
    OrgMinimaUtilsCrypto_mCrypto = new_OrgMinimaUtilsCrypto_init();
  }
  return OrgMinimaUtilsCrypto_mCrypto;
}

void OrgMinimaUtilsCrypto_init(OrgMinimaUtilsCrypto *self) {
  NSObject_init(self);
}

OrgMinimaUtilsCrypto *new_OrgMinimaUtilsCrypto_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsCrypto, init)
}

OrgMinimaUtilsCrypto *create_OrgMinimaUtilsCrypto_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsCrypto, init)
}

void OrgMinimaUtilsCrypto_mainWithNSStringArray_(IOSObjectArray *zArgs) {
  OrgMinimaUtilsCrypto_initialize();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsCrypto)
