//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/utils/Crypto.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/DataOutputStream.h"
#include "java/lang/Exception.h"
#include "java/security/MessageDigest.h"
#include "org/minima/objects/base/MiniHash.h"
#include "org/minima/utils/Crypto.h"
#include "org/minima/utils/Streamable.h"

@interface OrgMinimaUtilsCrypto ()

- (JavaSecurityMessageDigest *)getDigest;

@end

inline OrgMinimaUtilsCrypto *OrgMinimaUtilsCrypto_get_mCrypto(void);
inline OrgMinimaUtilsCrypto *OrgMinimaUtilsCrypto_set_mCrypto(OrgMinimaUtilsCrypto *value);
static OrgMinimaUtilsCrypto *OrgMinimaUtilsCrypto_mCrypto;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaUtilsCrypto, mCrypto, OrgMinimaUtilsCrypto *)

__attribute__((unused)) static JavaSecurityMessageDigest *OrgMinimaUtilsCrypto_getDigest(OrgMinimaUtilsCrypto *self);

jboolean OrgMinimaUtilsCrypto_USE_KECCAK = true;

@implementation OrgMinimaUtilsCrypto

+ (OrgMinimaUtilsCrypto *)getInstance {
  return OrgMinimaUtilsCrypto_getInstance();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaUtilsCrypto_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaSecurityMessageDigest *)getDigest {
  return OrgMinimaUtilsCrypto_getDigest(self);
}

- (IOSByteArray *)hashDataWithByteArray:(IOSByteArray *)zData {
  @try {
    return [((JavaSecurityMessageDigest *) nil_chk(OrgMinimaUtilsCrypto_getDigest(self))) digestWithByteArray:zData];
  }
  @catch (JavaLangException *exc) {
    [exc printStackTrace];
  }
  return nil;
}

- (IOSByteArray *)hashSHA2WithByteArray:(IOSByteArray *)zData {
  @try {
    return [((JavaSecurityMessageDigest *) nil_chk(OrgMinimaUtilsCrypto_getDigest(self))) digestWithByteArray:zData];
  }
  @catch (JavaLangException *exc) {
    [exc printStackTrace];
  }
  return nil;
}

- (OrgMinimaObjectsBaseMiniHash *)hashObjectWithOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zObject {
  @try {
    JavaIoByteArrayOutputStream *baos = create_JavaIoByteArrayOutputStream_init();
    JavaIoDataOutputStream *dos = create_JavaIoDataOutputStream_initWithJavaIoOutputStream_(baos);
    [((id<OrgMinimaUtilsStreamable>) nil_chk(zObject)) writeDataStreamWithJavaIoDataOutputStream:dos];
    [dos flush];
    IOSByteArray *objdata = [baos toByteArray];
    IOSByteArray *hashdata = [self hashDataWithByteArray:objdata];
    return create_OrgMinimaObjectsBaseMiniHash_initWithByteArray_(hashdata);
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
  }
  return nil;
}

- (OrgMinimaObjectsBaseMiniHash *)hashObjectsWithOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zLeftObject
                                             withOrgMinimaUtilsStreamable:(id<OrgMinimaUtilsStreamable>)zRightObject2 {
  @try {
    JavaIoByteArrayOutputStream *baos = create_JavaIoByteArrayOutputStream_init();
    JavaIoDataOutputStream *dos = create_JavaIoDataOutputStream_initWithJavaIoOutputStream_(baos);
    [((id<OrgMinimaUtilsStreamable>) nil_chk(zLeftObject)) writeDataStreamWithJavaIoDataOutputStream:dos];
    [((id<OrgMinimaUtilsStreamable>) nil_chk(zRightObject2)) writeDataStreamWithJavaIoDataOutputStream:dos];
    [dos flush];
    IOSByteArray *objdata = [baos toByteArray];
    IOSByteArray *hashdata = [self hashDataWithByteArray:objdata];
    return create_OrgMinimaObjectsBaseMiniHash_initWithByteArray_(hashdata);
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
  }
  return nil;
}

- (OrgMinimaObjectsBaseMiniHash *)hashAllObjectsWithOrgMinimaUtilsStreamableArray:(IOSObjectArray *)zObjects {
  @try {
    JavaIoByteArrayOutputStream *baos = create_JavaIoByteArrayOutputStream_init();
    JavaIoDataOutputStream *dos = create_JavaIoDataOutputStream_initWithJavaIoOutputStream_(baos);
    {
      IOSObjectArray *a__ = zObjects;
      id<OrgMinimaUtilsStreamable> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id<OrgMinimaUtilsStreamable> const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<OrgMinimaUtilsStreamable> object = *b__++;
        [((id<OrgMinimaUtilsStreamable>) nil_chk(object)) writeDataStreamWithJavaIoDataOutputStream:dos];
      }
    }
    [dos flush];
    IOSByteArray *objdata = [baos toByteArray];
    IOSByteArray *hashdata = [self hashDataWithByteArray:objdata];
    return create_OrgMinimaObjectsBaseMiniHash_initWithByteArray_(hashdata);
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
  }
  return nil;
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs {
  OrgMinimaUtilsCrypto_mainWithNSStringArray_(zArgs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMinimaUtilsCrypto;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityMessageDigest;", 0x2, -1, -1, 0, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniHash;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniHash;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniHash;", 0x81, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstance);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(getDigest);
  methods[3].selector = @selector(hashDataWithByteArray:);
  methods[4].selector = @selector(hashSHA2WithByteArray:);
  methods[5].selector = @selector(hashObjectWithOrgMinimaUtilsStreamable:);
  methods[6].selector = @selector(hashObjectsWithOrgMinimaUtilsStreamable:withOrgMinimaUtilsStreamable:);
  methods[7].selector = @selector(hashAllObjectsWithOrgMinimaUtilsStreamableArray:);
  methods[8].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "USE_KECCAK", "Z", .constantValue.asLong = 0, 0x9, -1, 12, -1, -1 },
    { "mCrypto", "LOrgMinimaUtilsCrypto;", .constantValue.asLong = 0, 0xa, -1, 13, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityNoSuchAlgorithmException;", "hashData", "[B", "hashSHA2", "hashObject", "LOrgMinimaUtilsStreamable;", "hashObjects", "LOrgMinimaUtilsStreamable;LOrgMinimaUtilsStreamable;", "hashAllObjects", "[LOrgMinimaUtilsStreamable;", "main", "[LNSString;", &OrgMinimaUtilsCrypto_USE_KECCAK, &OrgMinimaUtilsCrypto_mCrypto };
  static const J2ObjcClassInfo _OrgMinimaUtilsCrypto = { "Crypto", "org.minima.utils", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, -1, -1, -1, -1 };
  return &_OrgMinimaUtilsCrypto;
}

@end

OrgMinimaUtilsCrypto *OrgMinimaUtilsCrypto_getInstance() {
  OrgMinimaUtilsCrypto_initialize();
  if (OrgMinimaUtilsCrypto_mCrypto == nil) {
    JreStrongAssignAndConsume(&OrgMinimaUtilsCrypto_mCrypto, new_OrgMinimaUtilsCrypto_init());
  }
  return OrgMinimaUtilsCrypto_mCrypto;
}

void OrgMinimaUtilsCrypto_init(OrgMinimaUtilsCrypto *self) {
  NSObject_init(self);
}

OrgMinimaUtilsCrypto *new_OrgMinimaUtilsCrypto_init() {
  J2OBJC_NEW_IMPL(OrgMinimaUtilsCrypto, init)
}

OrgMinimaUtilsCrypto *create_OrgMinimaUtilsCrypto_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaUtilsCrypto, init)
}

JavaSecurityMessageDigest *OrgMinimaUtilsCrypto_getDigest(OrgMinimaUtilsCrypto *self) {
  return JavaSecurityMessageDigest_getInstanceWithNSString_(@"SHA-256");
}

void OrgMinimaUtilsCrypto_mainWithNSStringArray_(IOSObjectArray *zArgs) {
  OrgMinimaUtilsCrypto_initialize();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaUtilsCrypto)
