//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/database/mmr/MMRProof.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaDatabaseMmrMMRProof")
#ifdef RESTRICT_OrgMinimaDatabaseMmrMMRProof
#define INCLUDE_ALL_OrgMinimaDatabaseMmrMMRProof 0
#else
#define INCLUDE_ALL_OrgMinimaDatabaseMmrMMRProof 1
#endif
#undef RESTRICT_OrgMinimaDatabaseMmrMMRProof

#if !defined (OrgMinimaDatabaseMmrMMRProof_) && (INCLUDE_ALL_OrgMinimaDatabaseMmrMMRProof || defined(INCLUDE_OrgMinimaDatabaseMmrMMRProof))
#define OrgMinimaDatabaseMmrMMRProof_

#define RESTRICT_OrgMinimaUtilsStreamable 1
#define INCLUDE_OrgMinimaUtilsStreamable 1
#include "org/minima/utils/Streamable.h"

@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;
@class JavaUtilArrayList;
@class OrgMinimaDatabaseMmrMMRData;
@class OrgMinimaObjectsBaseMiniByte;
@class OrgMinimaObjectsBaseMiniData32;
@class OrgMinimaObjectsBaseMiniNumber;
@class OrgMinimaObjectsCoin;
@class OrgMinimaUtilsJsonJSONObject;

@interface OrgMinimaDatabaseMmrMMRProof : NSObject < OrgMinimaUtilsStreamable > {
 @public
  OrgMinimaObjectsBaseMiniNumber *mBlockTime_;
  OrgMinimaObjectsBaseMiniNumber *mEntryNumber_;
  OrgMinimaDatabaseMmrMMRData *mData_;
  JavaUtilArrayList *mProofChain_;
  JavaUtilArrayList *mLeftHash_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zEntryNumber
                       withOrgMinimaDatabaseMmrMMRData:(OrgMinimaDatabaseMmrMMRData *)zInitialData
                    withOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zBlockTime;

- (void)addHashWithOrgMinimaObjectsBaseMiniData32:(OrgMinimaObjectsBaseMiniData32 *)zHash
                                      withBoolean:(jboolean)zLeft;

- (OrgMinimaObjectsBaseMiniData32 *)calculateProof;

- (jboolean)checkCoinWithOrgMinimaObjectsCoin:(OrgMinimaObjectsCoin *)zCoin;

- (OrgMinimaObjectsBaseMiniNumber *)getBlockTime;

- (OrgMinimaObjectsBaseMiniNumber *)getEntryNumber;

- (OrgMinimaObjectsBaseMiniByte *)getLeftHashWithInt:(jint)zProof;

- (OrgMinimaDatabaseMmrMMRData *)getMMRData;

- (OrgMinimaObjectsBaseMiniData32 *)getProofWithInt:(jint)zProof;

- (jint)getProofLen;

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

+ (OrgMinimaDatabaseMmrMMRProof *)ReadFromStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

- (OrgMinimaUtilsJsonJSONObject *)toJSON;

- (NSString *)description;

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMinimaDatabaseMmrMMRProof)

J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMRProof, mBlockTime_, OrgMinimaObjectsBaseMiniNumber *)
J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMRProof, mEntryNumber_, OrgMinimaObjectsBaseMiniNumber *)
J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMRProof, mData_, OrgMinimaDatabaseMmrMMRData *)
J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMRProof, mProofChain_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMRProof, mLeftHash_, JavaUtilArrayList *)

FOUNDATION_EXPORT void OrgMinimaDatabaseMmrMMRProof_init(OrgMinimaDatabaseMmrMMRProof *self);

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRProof *new_OrgMinimaDatabaseMmrMMRProof_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRProof *create_OrgMinimaDatabaseMmrMMRProof_init(void);

FOUNDATION_EXPORT void OrgMinimaDatabaseMmrMMRProof_initWithOrgMinimaObjectsBaseMiniNumber_withOrgMinimaDatabaseMmrMMRData_withOrgMinimaObjectsBaseMiniNumber_(OrgMinimaDatabaseMmrMMRProof *self, OrgMinimaObjectsBaseMiniNumber *zEntryNumber, OrgMinimaDatabaseMmrMMRData *zInitialData, OrgMinimaObjectsBaseMiniNumber *zBlockTime);

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRProof *new_OrgMinimaDatabaseMmrMMRProof_initWithOrgMinimaObjectsBaseMiniNumber_withOrgMinimaDatabaseMmrMMRData_withOrgMinimaObjectsBaseMiniNumber_(OrgMinimaObjectsBaseMiniNumber *zEntryNumber, OrgMinimaDatabaseMmrMMRData *zInitialData, OrgMinimaObjectsBaseMiniNumber *zBlockTime) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRProof *create_OrgMinimaDatabaseMmrMMRProof_initWithOrgMinimaObjectsBaseMiniNumber_withOrgMinimaDatabaseMmrMMRData_withOrgMinimaObjectsBaseMiniNumber_(OrgMinimaObjectsBaseMiniNumber *zEntryNumber, OrgMinimaDatabaseMmrMMRData *zInitialData, OrgMinimaObjectsBaseMiniNumber *zBlockTime);

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRProof *OrgMinimaDatabaseMmrMMRProof_ReadFromStreamWithJavaIoDataInputStream_(JavaIoDataInputStream *zIn);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaDatabaseMmrMMRProof)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaDatabaseMmrMMRProof")
