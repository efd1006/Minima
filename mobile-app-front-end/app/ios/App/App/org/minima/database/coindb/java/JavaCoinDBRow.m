//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/database/coindb/java/JavaCoinDBRow.java
//

#include "J2ObjC_source.h"
#include "org/minima/database/coindb/java/JavaCoinDBRow.h"
#include "org/minima/objects/Coin.h"
#include "org/minima/objects/base/MiniInteger.h"
#include "org/minima/objects/base/MiniNumber.h"

@implementation OrgMinimaDatabaseCoindbJavaJavaCoinDBRow

- (instancetype)initWithOrgMinimaObjectsCoin:(OrgMinimaObjectsCoin *)zCoin {
  OrgMinimaDatabaseCoindbJavaJavaCoinDBRow_initWithOrgMinimaObjectsCoin_(self, zCoin);
  return self;
}

- (NSString *)description {
  return JreStrcat("$@$Z$Z$@C@", @"MMR:", [self getMMREntry], @" spent:", mIsSpent_, @" inblock:", mIsInBlock_, @" block:", mInBlockNumber_, ' ', mCoin_);
}

- (OrgMinimaObjectsCoin *)getCoin {
  return mCoin_;
}

- (void)setIsSpentWithBoolean:(jboolean)zSpent {
  mIsSpent_ = zSpent;
}

- (jboolean)isSpent {
  return mIsSpent_;
}

- (void)setInBlockNumberWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zInBlockNumber {
  mInBlockNumber_ = zInBlockNumber;
}

- (OrgMinimaObjectsBaseMiniNumber *)getInBlockNumber {
  return mInBlockNumber_;
}

- (void)setIsInBlockWithBoolean:(jboolean)zIn {
  mIsInBlock_ = zIn;
}

- (jboolean)isInBlock {
  return mIsInBlock_;
}

- (void)setMMREntryWithOrgMinimaObjectsBaseMiniInteger:(OrgMinimaObjectsBaseMiniInteger *)zEntry {
  mEntryNumber_ = zEntry;
}

- (OrgMinimaObjectsBaseMiniInteger *)getMMREntry {
  return mEntryNumber_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsCoin;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgMinimaObjectsCoin:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(getCoin);
  methods[3].selector = @selector(setIsSpentWithBoolean:);
  methods[4].selector = @selector(isSpent);
  methods[5].selector = @selector(setInBlockNumberWithOrgMinimaObjectsBaseMiniNumber:);
  methods[6].selector = @selector(getInBlockNumber);
  methods[7].selector = @selector(setIsInBlockWithBoolean:);
  methods[8].selector = @selector(isInBlock);
  methods[9].selector = @selector(setMMREntryWithOrgMinimaObjectsBaseMiniInteger:);
  methods[10].selector = @selector(getMMREntry);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mCoin_", "LOrgMinimaObjectsCoin;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mIsSpent_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mIsInBlock_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mInBlockNumber_", "LOrgMinimaObjectsBaseMiniNumber;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mEntryNumber_", "LOrgMinimaObjectsBaseMiniInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaObjectsCoin;", "toString", "setIsSpent", "Z", "setInBlockNumber", "LOrgMinimaObjectsBaseMiniNumber;", "setIsInBlock", "setMMREntry", "LOrgMinimaObjectsBaseMiniInteger;" };
  static const J2ObjcClassInfo _OrgMinimaDatabaseCoindbJavaJavaCoinDBRow = { "JavaCoinDBRow", "org.minima.database.coindb.java", ptrTable, methods, fields, 7, 0x1, 11, 5, -1, -1, -1, -1, -1 };
  return &_OrgMinimaDatabaseCoindbJavaJavaCoinDBRow;
}

@end

void OrgMinimaDatabaseCoindbJavaJavaCoinDBRow_initWithOrgMinimaObjectsCoin_(OrgMinimaDatabaseCoindbJavaJavaCoinDBRow *self, OrgMinimaObjectsCoin *zCoin) {
  NSObject_init(self);
  self->mInBlockNumber_ = new_OrgMinimaObjectsBaseMiniNumber_initWithInt_(0);
  self->mEntryNumber_ = new_OrgMinimaObjectsBaseMiniInteger_initWithInt_(0);
  self->mCoin_ = zCoin;
  self->mIsSpent_ = false;
  self->mIsInBlock_ = false;
}

OrgMinimaDatabaseCoindbJavaJavaCoinDBRow *new_OrgMinimaDatabaseCoindbJavaJavaCoinDBRow_initWithOrgMinimaObjectsCoin_(OrgMinimaObjectsCoin *zCoin) {
  J2OBJC_NEW_IMPL(OrgMinimaDatabaseCoindbJavaJavaCoinDBRow, initWithOrgMinimaObjectsCoin_, zCoin)
}

OrgMinimaDatabaseCoindbJavaJavaCoinDBRow *create_OrgMinimaDatabaseCoindbJavaJavaCoinDBRow_initWithOrgMinimaObjectsCoin_(OrgMinimaObjectsCoin *zCoin) {
  J2OBJC_CREATE_IMPL(OrgMinimaDatabaseCoindbJavaJavaCoinDBRow, initWithOrgMinimaObjectsCoin_, zCoin)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaDatabaseCoindbJavaJavaCoinDBRow)
