//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/database/txpowtree/SimpleBlockTreePrinter.java
//

#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "org/minima/database/txpowtree/BlockTree.h"
#include "org/minima/database/txpowtree/BlockTreeNode.h"
#include "org/minima/database/txpowtree/SimpleBlockTreePrinter.h"
#include "org/minima/objects/TxPOW.h"
#include "org/minima/objects/base/MiniHash.h"
#include "org/minima/objects/base/MiniNumber.h"
#include "org/minima/utils/bretty/TreeNode.h"
#include "org/minima/utils/bretty/TreePrinter.h"

@interface OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter ()

- (NSString *)convertNodeToStringWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode;

- (NSString *)getStarStringWithInt:(jint)zLen;

- (void)drillNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode
                            withOrgMinimaUtilsBrettyTreeNode:(OrgMinimaUtilsBrettyTreeNode *)zTreeNode
                                                     withInt:(jint)zLevel;

@end

__attribute__((unused)) static NSString *OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_convertNodeToStringWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode);

__attribute__((unused)) static NSString *OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_getStarStringWithInt_(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter *self, jint zLen);

__attribute__((unused)) static void OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_drillNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaUtilsBrettyTreeNode_withInt_(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode, OrgMinimaUtilsBrettyTreeNode *zTreeNode, jint zLevel);

@implementation OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter

- (instancetype)initWithOrgMinimaDatabaseTxpowtreeBlockTree:(OrgMinimaDatabaseTxpowtreeBlockTree *)zTree {
  OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_initWithOrgMinimaDatabaseTxpowtreeBlockTree_(self, zTree);
  return self;
}

- (NSString *)printtree {
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *root = [((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(mTree_)) getChainRoot];
  if (root == nil) {
    return @"No tree root..";
  }
  mCascadeNode_ = [((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(mTree_)) getCascadeNode])) getTxPow])) getBlockNumber])) getAsLong];
  JreStrongAssign(&mTipID_, [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(mTree_)) getChainTip])) getTxPowID]);
  OrgMinimaUtilsBrettyTreeNode *mRoot = create_OrgMinimaUtilsBrettyTreeNode_initWithNSString_(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_convertNodeToStringWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, root));
  OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_drillNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaUtilsBrettyTreeNode_withInt_(self, root, mRoot, 1);
  NSString *output = JreStrcat("C$", 0x000a, OrgMinimaUtilsBrettyTreePrinter_toStringWithOrgMinimaUtilsBrettyPrintableTreeNode_(mRoot));
  return output;
}

- (NSString *)convertNodeToStringWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode {
  return OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_convertNodeToStringWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, zNode);
}

- (NSString *)getStarStringWithInt:(jint)zLen {
  return OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_getStarStringWithInt_(self, zLen);
}

- (void)drillNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode
                            withOrgMinimaUtilsBrettyTreeNode:(OrgMinimaUtilsBrettyTreeNode *)zTreeNode
                                                     withInt:(jint)zLevel {
  OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_drillNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaUtilsBrettyTreeNode_withInt_(self, zNode, zTreeNode, zLevel);
}

+ (void)clearScreen {
  OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_clearScreen();
}

- (void)dealloc {
  RELEASE_(mTree_);
  RELEASE_(mTipID_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgMinimaDatabaseTxpowtreeBlockTree:);
  methods[1].selector = @selector(printtree);
  methods[2].selector = @selector(convertNodeToStringWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:);
  methods[3].selector = @selector(getStarStringWithInt:);
  methods[4].selector = @selector(drillNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:withOrgMinimaUtilsBrettyTreeNode:withInt:);
  methods[5].selector = @selector(clearScreen);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mTree_", "LOrgMinimaDatabaseTxpowtreeBlockTree;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mCascadeNode_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mTipID_", "LOrgMinimaObjectsBaseMiniHash;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaDatabaseTxpowtreeBlockTree;", "convertNodeToString", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", "getStarString", "I", "drillNode", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;LOrgMinimaUtilsBrettyTreeNode;I" };
  static const J2ObjcClassInfo _OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter = { "SimpleBlockTreePrinter", "org.minima.database.txpowtree", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter;
}

@end

void OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_initWithOrgMinimaDatabaseTxpowtreeBlockTree_(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter *self, OrgMinimaDatabaseTxpowtreeBlockTree *zTree) {
  NSObject_init(self);
  self->mCascadeNode_ = 0;
  JreStrongAssign(&self->mTree_, zTree);
}

OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter *new_OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_initWithOrgMinimaDatabaseTxpowtreeBlockTree_(OrgMinimaDatabaseTxpowtreeBlockTree *zTree) {
  J2OBJC_NEW_IMPL(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter, initWithOrgMinimaDatabaseTxpowtreeBlockTree_, zTree)
}

OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter *create_OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_initWithOrgMinimaDatabaseTxpowtreeBlockTree_(OrgMinimaDatabaseTxpowtreeBlockTree *zTree) {
  J2OBJC_CREATE_IMPL(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter, initWithOrgMinimaDatabaseTxpowtreeBlockTree_, zTree)
}

NSString *OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_convertNodeToStringWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode) {
  jint slev = [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zNode)) getSuperBlockLevel];
  jint clev = [zNode getCurrentLevel];
  NSString *weight = JreStrcat("$@C@$", @"{WEIGHT:", [zNode getWeight], '/', [zNode getTotalWeight], @"} ");
  OrgMinimaObjectsTxPOW *txpow = [zNode getTxPow];
  OrgMinimaObjectsBaseMiniHash *parent = [((OrgMinimaObjectsTxPOW *) nil_chk(txpow)) getSuperParentWithInt:clev];
  OrgMinimaObjectsBaseMiniHash *parent2 = [txpow getSuperParentWithInt:clev + 1];
  NSString *parents = JreStrcat("$@$$$$$IC$$IC$", @"[blk:", [((OrgMinimaObjectsTxPOW *) nil_chk([zNode getTxPow])) getBlockNumber], @"] diff:", [((OrgMinimaObjectsBaseMiniHash *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk([zNode getTxPow])) getBlockDifficulty])) toShort0xStringWithInt:16], @" txpowid:", [((OrgMinimaObjectsBaseMiniHash *) nil_chk([zNode getTxPowID])) toShort0xStringWithInt:16], @" [parent:", clev, ']', [((OrgMinimaObjectsBaseMiniHash *) nil_chk(parent)) toShort0xStringWithInt:16], @" [parent:", (clev + 1), ']', [((OrgMinimaObjectsBaseMiniHash *) nil_chk(parent2)) toShort0xStringWithInt:16]);
  NSString *add = JreStrcat("$$$$$", parents, @" [", OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_getStarStringWithInt_(self, slev), @"] - ", OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_getStarStringWithInt_(self, clev));
  if (self->mCascadeNode_ == [((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk([zNode getTxPow])) getBlockNumber])) getAsLong]) {
    JreStrAppend(&add, "$", @" [++CASCADING++]");
  }
  if ([((OrgMinimaObjectsBaseMiniHash *) nil_chk([zNode getTxPowID])) isExactlyEqualWithOrgMinimaObjectsBaseMiniData:self->mTipID_]) {
    JreStrAppend(&add, "$", @" [++THE TIP++]");
  }
  return JreStrcat("$CI$I$$", weight, '[', clev, @" / ", slev, @"] ", add);
}

NSString *OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_getStarStringWithInt_(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter *self, jint zLen) {
  NSString *ret = @"";
  for (jint i = 0; i < zLen; i++) {
    JreStrAppend(&ret, "$", @"*");
  }
  return ret;
}

void OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_drillNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaUtilsBrettyTreeNode_withInt_(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode, OrgMinimaUtilsBrettyTreeNode *zTreeNode, jint zLevel) {
  JavaUtilArrayList *children = [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zNode)) getChildren];
  for (OrgMinimaDatabaseTxpowtreeBlockTreeNode * __strong child in nil_chk(children)) {
    OrgMinimaUtilsBrettyTreeNode *chilnode = create_OrgMinimaUtilsBrettyTreeNode_initWithNSString_(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_convertNodeToStringWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, child));
    [((OrgMinimaUtilsBrettyTreeNode *) nil_chk(zTreeNode)) addChildWithOrgMinimaUtilsBrettyTreeNode:chilnode];
    OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_drillNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaUtilsBrettyTreeNode_withInt_(self, child, chilnode, [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(child)) getCurrentLevel]);
  }
}

void OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_clearScreen() {
  OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printWithNSString:@"\x1b[H\x1b[2J"];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) flush];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaDatabaseTxpowtreeSimpleBlockTreePrinter)
