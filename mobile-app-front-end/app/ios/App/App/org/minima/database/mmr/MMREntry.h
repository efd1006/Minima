//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/database/mmr/MMREntry.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaDatabaseMmrMMREntry")
#ifdef RESTRICT_OrgMinimaDatabaseMmrMMREntry
#define INCLUDE_ALL_OrgMinimaDatabaseMmrMMREntry 0
#else
#define INCLUDE_ALL_OrgMinimaDatabaseMmrMMREntry 1
#endif
#undef RESTRICT_OrgMinimaDatabaseMmrMMREntry

#if !defined (OrgMinimaDatabaseMmrMMREntry_) && (INCLUDE_ALL_OrgMinimaDatabaseMmrMMREntry || defined(INCLUDE_OrgMinimaDatabaseMmrMMREntry))
#define OrgMinimaDatabaseMmrMMREntry_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

#define RESTRICT_OrgMinimaUtilsStreamable 1
#define INCLUDE_OrgMinimaUtilsStreamable 1
#include "org/minima/utils/Streamable.h"

@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;
@class OrgMinimaDatabaseMmrMMRData;
@class OrgMinimaObjectsBaseMiniHash;
@class OrgMinimaObjectsBaseMiniNumber;

@interface OrgMinimaDatabaseMmrMMREntry : NSObject < JavaLangComparable, OrgMinimaUtilsStreamable > {
 @public
  OrgMinimaObjectsBaseMiniNumber *mEntryNumber_;
  jint mRow_;
  OrgMinimaObjectsBaseMiniNumber *mBlockTime_;
  OrgMinimaDatabaseMmrMMRData *mData_;
  jboolean mIsEmpty_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)zRow
withOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zEntry;

- (jboolean)checkPositionWithInt:(jint)zRow
withOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zEntry;

- (jboolean)checkPositionWithOrgMinimaDatabaseMmrMMREntry:(OrgMinimaDatabaseMmrMMREntry *)zEntry;

- (void)clearData;

- (jint)compareToWithId:(OrgMinimaDatabaseMmrMMREntry *)zEntry;

- (OrgMinimaObjectsBaseMiniNumber *)getBlockTime;

- (jint)getChildRow;

- (OrgMinimaDatabaseMmrMMRData *)getData;

- (OrgMinimaObjectsBaseMiniNumber *)getEntry;

- (OrgMinimaObjectsBaseMiniHash *)getHashValue;

- (OrgMinimaObjectsBaseMiniNumber *)getLeftChildEntry;

- (OrgMinimaObjectsBaseMiniNumber *)getLeftSibling;

- (OrgMinimaObjectsBaseMiniNumber *)getParentEntry;

- (jint)getParentRow;

- (OrgMinimaObjectsBaseMiniNumber *)getRightChildEntry;

- (OrgMinimaObjectsBaseMiniNumber *)getRightSibling;

- (jint)getRow;

- (OrgMinimaObjectsBaseMiniNumber *)getSibling;

- (jboolean)isEmpty;

- (jboolean)isLeft;

- (jboolean)isRight;

- (void)readDataStreamWithJavaIoDataInputStream:(JavaIoDataInputStream *)zIn;

- (void)setBlockTimeWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zBlockTime;

- (void)setDataWithOrgMinimaDatabaseMmrMMRData:(OrgMinimaDatabaseMmrMMRData *)zData;

- (NSString *)description;

- (void)writeDataStreamWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)zOut;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgMinimaDatabaseMmrMMREntry)

J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMREntry, mEntryNumber_, OrgMinimaObjectsBaseMiniNumber *)
J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMREntry, mBlockTime_, OrgMinimaObjectsBaseMiniNumber *)
J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMREntry, mData_, OrgMinimaDatabaseMmrMMRData *)

FOUNDATION_EXPORT void OrgMinimaDatabaseMmrMMREntry_initWithInt_withOrgMinimaObjectsBaseMiniNumber_(OrgMinimaDatabaseMmrMMREntry *self, jint zRow, OrgMinimaObjectsBaseMiniNumber *zEntry);

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMREntry *new_OrgMinimaDatabaseMmrMMREntry_initWithInt_withOrgMinimaObjectsBaseMiniNumber_(jint zRow, OrgMinimaObjectsBaseMiniNumber *zEntry) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMREntry *create_OrgMinimaDatabaseMmrMMREntry_initWithInt_withOrgMinimaObjectsBaseMiniNumber_(jint zRow, OrgMinimaObjectsBaseMiniNumber *zEntry);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaDatabaseMmrMMREntry)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaDatabaseMmrMMREntry")
