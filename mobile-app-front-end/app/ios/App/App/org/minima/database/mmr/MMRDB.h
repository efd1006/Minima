//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/database/mmr/MMRDB.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMinimaDatabaseMmrMMRDB")
#ifdef RESTRICT_OrgMinimaDatabaseMmrMMRDB
#define INCLUDE_ALL_OrgMinimaDatabaseMmrMMRDB 0
#else
#define INCLUDE_ALL_OrgMinimaDatabaseMmrMMRDB 1
#endif
#undef RESTRICT_OrgMinimaDatabaseMmrMMRDB

#if !defined (OrgMinimaDatabaseMmrMMRDB_) && (INCLUDE_ALL_OrgMinimaDatabaseMmrMMRDB || defined(INCLUDE_OrgMinimaDatabaseMmrMMRDB))
#define OrgMinimaDatabaseMmrMMRDB_

@class IOSObjectArray;
@class OrgMinimaDatabaseMmrMMRData;
@class OrgMinimaDatabaseMmrMMREntry;
@class OrgMinimaDatabaseMmrMMRProof;
@class OrgMinimaDatabaseMmrMMRSet;

@interface OrgMinimaDatabaseMmrMMRDB : NSObject {
 @public
  OrgMinimaDatabaseMmrMMRSet *mBaseSet_;
  OrgMinimaDatabaseMmrMMRSet *mRootSet_;
}

#pragma mark Public

- (instancetype)init;

+ (void)addUnspentWithOrgMinimaDatabaseMmrMMRData:(OrgMinimaDatabaseMmrMMRData *)zData;

- (OrgMinimaDatabaseMmrMMRSet *)getCurrentMMR;

+ (OrgMinimaDatabaseMmrMMRData *)getRandomCoin;

- (void)initSets OBJC_METHOD_FAMILY_NONE;

+ (void)mainWithNSStringArray:(IOSObjectArray *)zArgs;

+ (void)newBlock OBJC_METHOD_FAMILY_NONE;

+ (void)printSets;

+ (void)spendCoinWithOrgMinimaDatabaseMmrMMRProof:(OrgMinimaDatabaseMmrMMRProof *)zProof;

@end

J2OBJC_STATIC_INIT(OrgMinimaDatabaseMmrMMRDB)

J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMRDB, mBaseSet_, OrgMinimaDatabaseMmrMMRSet *)
J2OBJC_FIELD_SETTER(OrgMinimaDatabaseMmrMMRDB, mRootSet_, OrgMinimaDatabaseMmrMMRSet *)

inline OrgMinimaDatabaseMmrMMRSet *OrgMinimaDatabaseMmrMMRDB_get_mSet1(void);
inline OrgMinimaDatabaseMmrMMRSet *OrgMinimaDatabaseMmrMMRDB_set_mSet1(OrgMinimaDatabaseMmrMMRSet *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRSet *OrgMinimaDatabaseMmrMMRDB_mSet1;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaDatabaseMmrMMRDB, mSet1, OrgMinimaDatabaseMmrMMRSet *)

inline OrgMinimaDatabaseMmrMMRSet *OrgMinimaDatabaseMmrMMRDB_get_mSet2(void);
inline OrgMinimaDatabaseMmrMMRSet *OrgMinimaDatabaseMmrMMRDB_set_mSet2(OrgMinimaDatabaseMmrMMRSet *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRSet *OrgMinimaDatabaseMmrMMRDB_mSet2;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaDatabaseMmrMMRDB, mSet2, OrgMinimaDatabaseMmrMMRSet *)

inline OrgMinimaDatabaseMmrMMREntry *OrgMinimaDatabaseMmrMMRDB_get_mLast1(void);
inline OrgMinimaDatabaseMmrMMREntry *OrgMinimaDatabaseMmrMMRDB_set_mLast1(OrgMinimaDatabaseMmrMMREntry *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMREntry *OrgMinimaDatabaseMmrMMRDB_mLast1;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaDatabaseMmrMMRDB, mLast1, OrgMinimaDatabaseMmrMMREntry *)

inline OrgMinimaDatabaseMmrMMREntry *OrgMinimaDatabaseMmrMMRDB_get_mLast2(void);
inline OrgMinimaDatabaseMmrMMREntry *OrgMinimaDatabaseMmrMMRDB_set_mLast2(OrgMinimaDatabaseMmrMMREntry *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMREntry *OrgMinimaDatabaseMmrMMRDB_mLast2;
J2OBJC_STATIC_FIELD_OBJ(OrgMinimaDatabaseMmrMMRDB, mLast2, OrgMinimaDatabaseMmrMMREntry *)

FOUNDATION_EXPORT void OrgMinimaDatabaseMmrMMRDB_init(OrgMinimaDatabaseMmrMMRDB *self);

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRDB *new_OrgMinimaDatabaseMmrMMRDB_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRDB *create_OrgMinimaDatabaseMmrMMRDB_init(void);

FOUNDATION_EXPORT void OrgMinimaDatabaseMmrMMRDB_addUnspentWithOrgMinimaDatabaseMmrMMRData_(OrgMinimaDatabaseMmrMMRData *zData);

FOUNDATION_EXPORT void OrgMinimaDatabaseMmrMMRDB_spendCoinWithOrgMinimaDatabaseMmrMMRProof_(OrgMinimaDatabaseMmrMMRProof *zProof);

FOUNDATION_EXPORT void OrgMinimaDatabaseMmrMMRDB_newBlock(void);

FOUNDATION_EXPORT void OrgMinimaDatabaseMmrMMRDB_printSets(void);

FOUNDATION_EXPORT OrgMinimaDatabaseMmrMMRData *OrgMinimaDatabaseMmrMMRDB_getRandomCoin(void);

FOUNDATION_EXPORT void OrgMinimaDatabaseMmrMMRDB_mainWithNSStringArray_(IOSObjectArray *zArgs);

J2OBJC_TYPE_LITERAL_HEADER(OrgMinimaDatabaseMmrMMRDB)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMinimaDatabaseMmrMMRDB")
