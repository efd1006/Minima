//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/database/txpowtree/BlockTree.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "org/minima/database/mmr/MMRSet.h"
#include "org/minima/database/txpowtree/BlockTree.h"
#include "org/minima/database/txpowtree/BlockTreeNode.h"
#include "org/minima/objects/TxPOW.h"
#include "org/minima/objects/base/MiniHash.h"
#include "org/minima/objects/base/MiniNumber.h"
#include "org/minima/utils/MinimaLogger.h"

@interface OrgMinimaDatabaseTxpowtreeBlockTree ()

- (void)_zeroWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode;

- (void)_cascadeWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode;

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)getHeaviestBranchTipWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zStartNode;

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)_findNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zRoot
                                                                 withOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)zTxPOWID;

@end

__attribute__((unused)) static void OrgMinimaDatabaseTxpowtreeBlockTree__zeroWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeBlockTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode);

__attribute__((unused)) static void OrgMinimaDatabaseTxpowtreeBlockTree__cascadeWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeBlockTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode);

__attribute__((unused)) static OrgMinimaDatabaseTxpowtreeBlockTreeNode *OrgMinimaDatabaseTxpowtreeBlockTree_getHeaviestBranchTipWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeBlockTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zStartNode);

__attribute__((unused)) static OrgMinimaDatabaseTxpowtreeBlockTreeNode *OrgMinimaDatabaseTxpowtreeBlockTree__findNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaObjectsBaseMiniHash_(OrgMinimaDatabaseTxpowtreeBlockTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zRoot, OrgMinimaObjectsBaseMiniHash *zTxPOWID);

@implementation OrgMinimaDatabaseTxpowtreeBlockTree

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMinimaDatabaseTxpowtreeBlockTree_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setTreeRootWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode {
  [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zNode)) setParentWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:nil];
  JreStrongAssign(&mRoot_, zNode);
  JreStrongAssign(&mTip_, mRoot_);
  JreStrongAssign(&mCascadeNode_, mRoot_);
}

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)getChainRoot {
  return mRoot_;
}

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)getChainTip {
  return mTip_;
}

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)getCascadeNode {
  return mCascadeNode_;
}

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)getLastNode {
  return mLastNode_;
}

- (jboolean)addNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode {
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *exists = [self findNodeWithOrgMinimaObjectsBaseMiniHash:[((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zNode)) getTxPowID]];
  if (exists != nil) {
    return false;
  }
  OrgMinimaObjectsBaseMiniHash *prevblock = [((OrgMinimaObjectsTxPOW *) nil_chk([zNode getTxPow])) getParentID];
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *parent = [self findNodeWithOrgMinimaObjectsBaseMiniHash:prevblock];
  if (parent == nil) {
    return false;
  }
  if ([((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk([zNode getTxPow])) getBlockNumber])) isLessEqualWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaObjectsTxPOW *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk([self getCascadeNode])) getTxPow])) getBlockNumber]]) {
    OrgMinimaUtilsMinimaLogger_logWithNSString_(JreStrcat("$@", @"BlockTree : BLOCK PAST CASCADE NODE.. ", [zNode getTxPow]));
    return false;
  }
  [parent addChildWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:zNode];
  return true;
}

- (void)hardAddNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode
                                                   withBoolean:(jboolean)zLinkAll {
  if (mRoot_ == nil) {
    [self setTreeRootWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:zNode];
    [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zNode)) setParentWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:nil];
    return;
  }
  [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mTip_)) addChildWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:zNode];
  if ([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zNode)) getMMRSet] != nil) {
    if (zLinkAll) {
      if ([((OrgMinimaObjectsBaseMiniHash *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mTip_)) getTxPowID])) isExactlyEqualWithOrgMinimaObjectsBaseMiniData:[((OrgMinimaObjectsTxPOW *) nil_chk([zNode getTxPow])) getParentID]]) {
        [((OrgMinimaDatabaseMmrMMRSet *) nil_chk([zNode getMMRSet])) setParentWithOrgMinimaDatabaseMmrMMRSet:[((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mTip_)) getMMRSet]];
      }
    }
    else {
      if (![((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mTip_)) isCascade] && [((OrgMinimaObjectsBaseMiniHash *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mTip_)) getTxPowID])) isExactlyEqualWithOrgMinimaObjectsBaseMiniData:[((OrgMinimaObjectsTxPOW *) nil_chk([zNode getTxPow])) getParentID]]) {
        [((OrgMinimaDatabaseMmrMMRSet *) nil_chk([zNode getMMRSet])) setParentWithOrgMinimaDatabaseMmrMMRSet:[((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mTip_)) getMMRSet]];
      }
    }
  }
  JreStrongAssign(&mTip_, zNode);
}

- (void)hardSetCascadeNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode {
  JreStrongAssign(&mCascadeNode_, zNode);
}

- (void)resetWeights {
  OrgMinimaDatabaseTxpowtreeBlockTree__zeroWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, [self getChainRoot]);
  OrgMinimaDatabaseTxpowtreeBlockTree__cascadeWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, [self getChainRoot]);
  JreStrongAssign(&mTip_, OrgMinimaDatabaseTxpowtreeBlockTree_getHeaviestBranchTipWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, [self getChainRoot]));
}

- (void)_zeroWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode {
  OrgMinimaDatabaseTxpowtreeBlockTree__zeroWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, zNode);
}

- (void)_cascadeWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zNode {
  OrgMinimaDatabaseTxpowtreeBlockTree__cascadeWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, zNode);
}

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)getHeaviestBranchTipWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zStartNode {
  return OrgMinimaDatabaseTxpowtreeBlockTree_getHeaviestBranchTipWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, zStartNode);
}

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)findNodeWithOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)zTxPOWID {
  if ([self getChainRoot] == nil) {
    return nil;
  }
  return OrgMinimaDatabaseTxpowtreeBlockTree__findNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaObjectsBaseMiniHash_(self, [self getChainRoot], zTxPOWID);
}

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)_findNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zRoot
                                                                 withOrgMinimaObjectsBaseMiniHash:(OrgMinimaObjectsBaseMiniHash *)zTxPOWID {
  return OrgMinimaDatabaseTxpowtreeBlockTree__findNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaObjectsBaseMiniHash_(self, zRoot, zTxPOWID);
}

- (JavaUtilArrayList *)getAsList {
  return [self getAsListWithBoolean:false];
}

- (JavaUtilArrayList *)getAsListWithBoolean:(jboolean)zReverse {
  JavaUtilArrayList *nodes = create_JavaUtilArrayList_init();
  if (mTip_ == nil) {
    return nodes;
  }
  [nodes addWithId:mTip_];
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *tip = [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mTip_)) getParent];
  while (tip != nil) {
    if (zReverse) {
      [nodes addWithInt:0 withId:tip];
    }
    else {
      [nodes addWithId:tip];
    }
    tip = [tip getParent];
  }
  return nodes;
}

- (jdouble)getChainSpeed {
  jlong millistart = [((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mCascadeNode_)) getTxPow])) getTimeMilli])) getAsLong];
  jlong milliend = [((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mTip_)) getTxPow])) getTimeMilli])) getAsLong];
  jlong timediff = milliend - millistart;
  jlong blockstart = [((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mCascadeNode_)) getTxPow])) getBlockNumber])) getAsLong];
  jlong blockend = [((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mTip_)) getTxPow])) getBlockNumber])) getAsLong];
  jlong blockdiff = blockend - blockstart;
  jdouble timesecs = (jdouble) timediff / (jdouble) 1000;
  jdouble speed = (jdouble) blockdiff / timesecs;
  return speed;
}

- (OrgMinimaObjectsBaseMiniNumber *)getAvgChainDifficulty {
  JavaMathBigInteger *two = create_JavaMathBigInteger_initWithNSString_(@"2");
  JavaMathBigInteger *total = create_JavaMathBigInteger_initWithNSString_(@"0");
  OrgMinimaObjectsBaseMiniHash *casc = [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(mCascadeNode_)) getTxPowID];
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *current = mTip_;
  jint num = 0;
  while (current != nil) {
    if ([((OrgMinimaObjectsBaseMiniHash *) nil_chk([current getTxPowID])) isEqual:casc]) {
      break;
    }
    jint diff = [((OrgMinimaObjectsTxPOW *) nil_chk([current getTxPow])) getBlockDifficulty];
    JavaMathBigInteger *rval = [two powWithInt:diff];
    total = [((JavaMathBigInteger *) nil_chk(total)) addWithJavaMathBigInteger:rval];
    num++;
    current = [current getParent];
  }
  if (num == 0) {
    return JreLoadStatic(OrgMinimaObjectsBaseMiniNumber, ZERO);
  }
  OrgMinimaObjectsBaseMiniNumber *totram = create_OrgMinimaObjectsBaseMiniNumber_initWithJavaMathBigInteger_(total);
  OrgMinimaObjectsBaseMiniNumber *avg = [totram divWithOrgMinimaObjectsBaseMiniNumber:create_OrgMinimaObjectsBaseMiniNumber_initWithNSString_(JreStrcat("I", num))];
  return avg;
}

- (void)dealloc {
  RELEASE_(mRoot_);
  RELEASE_(mTip_);
  RELEASE_(mCascadeNode_);
  RELEASE_(mLastNode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", 0x2, 8, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, 13, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, 14, 15, -1, 16, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaObjectsBaseMiniNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setTreeRootWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:);
  methods[2].selector = @selector(getChainRoot);
  methods[3].selector = @selector(getChainTip);
  methods[4].selector = @selector(getCascadeNode);
  methods[5].selector = @selector(getLastNode);
  methods[6].selector = @selector(addNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:);
  methods[7].selector = @selector(hardAddNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:withBoolean:);
  methods[8].selector = @selector(hardSetCascadeNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:);
  methods[9].selector = @selector(resetWeights);
  methods[10].selector = @selector(_zeroWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:);
  methods[11].selector = @selector(_cascadeWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:);
  methods[12].selector = @selector(getHeaviestBranchTipWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:);
  methods[13].selector = @selector(findNodeWithOrgMinimaObjectsBaseMiniHash:);
  methods[14].selector = @selector(_findNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:withOrgMinimaObjectsBaseMiniHash:);
  methods[15].selector = @selector(getAsList);
  methods[16].selector = @selector(getAsListWithBoolean:);
  methods[17].selector = @selector(getChainSpeed);
  methods[18].selector = @selector(getAvgChainDifficulty);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mRoot_", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mTip_", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mCascadeNode_", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mLastNode_", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setTreeRoot", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", "addNode", "hardAddNode", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;Z", "hardSetCascadeNode", "_zeroWeights", "_cascadeWeights", "getHeaviestBranchTip", "findNode", "LOrgMinimaObjectsBaseMiniHash;", "_findNode", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;LOrgMinimaObjectsBaseMiniHash;", "()Ljava/util/ArrayList<Lorg/minima/database/txpowtree/BlockTreeNode;>;", "getAsList", "Z", "(Z)Ljava/util/ArrayList<Lorg/minima/database/txpowtree/BlockTreeNode;>;" };
  static const J2ObjcClassInfo _OrgMinimaDatabaseTxpowtreeBlockTree = { "BlockTree", "org.minima.database.txpowtree", ptrTable, methods, fields, 7, 0x1, 19, 4, -1, -1, -1, -1, -1 };
  return &_OrgMinimaDatabaseTxpowtreeBlockTree;
}

@end

void OrgMinimaDatabaseTxpowtreeBlockTree_init(OrgMinimaDatabaseTxpowtreeBlockTree *self) {
  NSObject_init(self);
}

OrgMinimaDatabaseTxpowtreeBlockTree *new_OrgMinimaDatabaseTxpowtreeBlockTree_init() {
  J2OBJC_NEW_IMPL(OrgMinimaDatabaseTxpowtreeBlockTree, init)
}

OrgMinimaDatabaseTxpowtreeBlockTree *create_OrgMinimaDatabaseTxpowtreeBlockTree_init() {
  J2OBJC_CREATE_IMPL(OrgMinimaDatabaseTxpowtreeBlockTree, init)
}

void OrgMinimaDatabaseTxpowtreeBlockTree__zeroWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeBlockTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode) {
  [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zNode)) resetCurrentWeight];
  JavaUtilArrayList *children = [zNode getChildren];
  for (OrgMinimaDatabaseTxpowtreeBlockTreeNode * __strong child in nil_chk(children)) {
    OrgMinimaDatabaseTxpowtreeBlockTree__zeroWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, child);
  }
}

void OrgMinimaDatabaseTxpowtreeBlockTree__cascadeWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeBlockTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zNode) {
  if ([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zNode)) getState] != OrgMinimaDatabaseTxpowtreeBlockTreeNode_BLOCKSTATE_VALID) {
    return;
  }
  JavaMathBigInteger *weight = [zNode getWeight];
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *parent = [zNode getParent];
  while (parent != nil) {
    [parent addToTotalWeightWithJavaMathBigInteger:weight];
    parent = [parent getParent];
  }
  JavaUtilArrayList *children = [zNode getChildren];
  for (OrgMinimaDatabaseTxpowtreeBlockTreeNode * __strong child in nil_chk(children)) {
    OrgMinimaDatabaseTxpowtreeBlockTree__cascadeWeightsWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, child);
  }
}

OrgMinimaDatabaseTxpowtreeBlockTreeNode *OrgMinimaDatabaseTxpowtreeBlockTree_getHeaviestBranchTipWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeBlockTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zStartNode) {
  if ([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zStartNode)) getNumberChildren] > 0) {
    OrgMinimaDatabaseTxpowtreeBlockTreeNode *max = nil;
    JavaUtilArrayList *children = [zStartNode getChildren];
    for (OrgMinimaDatabaseTxpowtreeBlockTreeNode * __strong node in nil_chk(children)) {
      if (max == nil) {
        max = node;
      }
      else {
        if ([((JavaMathBigInteger *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(node)) getTotalWeight])) compareToWithId:[max getTotalWeight]] > 0) {
          max = node;
        }
      }
    }
    return OrgMinimaDatabaseTxpowtreeBlockTree_getHeaviestBranchTipWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, max);
  }
  return zStartNode;
}

OrgMinimaDatabaseTxpowtreeBlockTreeNode *OrgMinimaDatabaseTxpowtreeBlockTree__findNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaObjectsBaseMiniHash_(OrgMinimaDatabaseTxpowtreeBlockTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zRoot, OrgMinimaObjectsBaseMiniHash *zTxPOWID) {
  if ([((OrgMinimaObjectsBaseMiniHash *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zRoot)) getTxPowID])) isExactlyEqualWithOrgMinimaObjectsBaseMiniData:zTxPOWID]) {
    return zRoot;
  }
  JavaUtilArrayList *children = [zRoot getChildren];
  for (OrgMinimaDatabaseTxpowtreeBlockTreeNode * __strong child in nil_chk(children)) {
    OrgMinimaDatabaseTxpowtreeBlockTreeNode *found = OrgMinimaDatabaseTxpowtreeBlockTree__findNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_withOrgMinimaObjectsBaseMiniHash_(self, child, zTxPOWID);
    if (found != nil) {
      return found;
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaDatabaseTxpowtreeBlockTree)
