//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/minima/database/txpowtree/CascadeTree.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/minima/GlobalParams.h"
#include "org/minima/database/MinimaDB.h"
#include "org/minima/database/mmr/MMRSet.h"
#include "org/minima/database/txpowdb/TxPOWDBRow.h"
#include "org/minima/database/txpowtree/BlockTree.h"
#include "org/minima/database/txpowtree/BlockTreeNode.h"
#include "org/minima/database/txpowtree/CascadeTree.h"
#include "org/minima/objects/TxPOW.h"
#include "org/minima/objects/base/MiniData32.h"
#include "org/minima/objects/base/MiniNumber.h"

@interface OrgMinimaDatabaseTxpowtreeCascadeTree ()

- (JavaUtilArrayList *)removeLowerLevelsWithJavaUtilArrayList:(JavaUtilArrayList *)zCurrent
                                                      withInt:(jint)zMinLevel;

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)copyNodeTreeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zOriginal OBJC_METHOD_FAMILY_NONE;

@end

__attribute__((unused)) static JavaUtilArrayList *OrgMinimaDatabaseTxpowtreeCascadeTree_removeLowerLevelsWithJavaUtilArrayList_withInt_(OrgMinimaDatabaseTxpowtreeCascadeTree *self, JavaUtilArrayList *zCurrent, jint zMinLevel);

__attribute__((unused)) static OrgMinimaDatabaseTxpowtreeBlockTreeNode *OrgMinimaDatabaseTxpowtreeCascadeTree_copyNodeTreeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeCascadeTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zOriginal);

@implementation OrgMinimaDatabaseTxpowtreeCascadeTree

- (instancetype)initWithOrgMinimaDatabaseTxpowtreeBlockTree:(OrgMinimaDatabaseTxpowtreeBlockTree *)zMainTree
                              withOrgMinimaDatabaseMinimaDB:(OrgMinimaDatabaseMinimaDB *)zDB {
  OrgMinimaDatabaseTxpowtreeCascadeTree_initWithOrgMinimaDatabaseTxpowtreeBlockTree_withOrgMinimaDatabaseMinimaDB_(self, zMainTree, zDB);
  return self;
}

- (OrgMinimaDatabaseTxpowtreeBlockTree *)getCascadeTree {
  return mCascadeTree_;
}

- (JavaUtilArrayList *)getRemoved {
  return mRemovals_;
}

- (void)recurseParentMMRWithOrgMinimaObjectsBaseMiniNumber:(OrgMinimaObjectsBaseMiniNumber *)zCascade
                            withOrgMinimaDatabaseMmrMMRSet:(OrgMinimaDatabaseMmrMMRSet *)zNode {
  if ([((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaDatabaseMmrMMRSet *) nil_chk(zNode)) getBlockTime])) isMoreWithOrgMinimaObjectsBaseMiniNumber:[((OrgMinimaObjectsBaseMiniNumber *) nil_chk(zCascade)) increment]]) {
    [self recurseParentMMRWithOrgMinimaObjectsBaseMiniNumber:zCascade withOrgMinimaDatabaseMmrMMRSet:[zNode getParent]];
  }
  [zNode copyParentKeepers];
}

- (JavaUtilArrayList *)cascadedTree {
  JreStrongAssignAndConsume(&mRemovals_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&mCascadeTree_, new_OrgMinimaDatabaseTxpowtreeBlockTree_init());
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *oldtip = [((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(mMainTree_)) getChainTip];
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *oldcascade = [((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(mMainTree_)) getCascadeNode];
  OrgMinimaObjectsBaseMiniNumber *casc = [((OrgMinimaObjectsTxPOW *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(oldcascade)) getTxPow])) getBlockNumber];
  jint counter = 0;
  while ((oldtip != nil) && (counter < OrgMinimaGlobalParams_MINIMA_CASCADE_DEPTH) && ([((OrgMinimaObjectsBaseMiniNumber *) nil_chk([((OrgMinimaObjectsTxPOW *) nil_chk([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(oldtip)) getTxPow])) getBlockNumber])) isMoreWithOrgMinimaObjectsBaseMiniNumber:casc])) {
    counter++;
    oldtip = [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(oldtip)) getParent];
  }
  if (oldtip == nil) {
    JreStrongAssign(&mCascadeTree_, mMainTree_);
    return mRemovals_;
  }
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *fullkeep = OrgMinimaDatabaseTxpowtreeCascadeTree_copyNodeTreeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, oldtip);
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *newcascade = [oldtip getParent];
  if (newcascade != nil && [newcascade getMMRSet] != nil) {
    [self recurseParentMMRWithOrgMinimaObjectsBaseMiniNumber:casc withOrgMinimaDatabaseMmrMMRSet:[newcascade getMMRSet]];
  }
  JavaUtilArrayList *cascnodes = create_JavaUtilArrayList_init();
  while (newcascade != nil) {
    OrgMinimaDatabaseTxpowtreeBlockTreeNode *node = create_OrgMinimaDatabaseTxpowtreeBlockTreeNode_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(newcascade);
    [node setCascadeWithBoolean:true];
    [node setStateWithInt:OrgMinimaDatabaseTxpowtreeBlockTreeNode_BLOCKSTATE_VALID];
    [cascnodes addWithInt:0 withId:node];
    newcascade = [newcascade getParent];
  }
  JavaUtilArrayList *finalnodes = create_JavaUtilArrayList_init();
  for (OrgMinimaDatabaseTxpowtreeBlockTreeNode * __strong node in cascnodes) {
    [((JavaUtilArrayList *) nil_chk(finalnodes)) addWithId:node];
    finalnodes = OrgMinimaDatabaseTxpowtreeCascadeTree_removeLowerLevelsWithJavaUtilArrayList_withInt_(self, finalnodes, [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(node)) getSuperBlockLevel]);
  }
  for (OrgMinimaDatabaseTxpowtreeBlockTreeNode * __strong node in finalnodes) {
    OrgMinimaDatabaseTxpowtreeBlockTreeNode *copy_ = create_OrgMinimaDatabaseTxpowtreeBlockTreeNode_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(node);
    [((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(mCascadeTree_)) hardAddNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:copy_ withBoolean:false];
    [((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(mCascadeTree_)) hardSetCascadeNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:copy_];
  }
  [((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(mCascadeTree_)) hardAddNodeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:fullkeep withBoolean:false];
  [((OrgMinimaDatabaseTxpowtreeBlockTree *) nil_chk(mCascadeTree_)) resetWeights];
  return mRemovals_;
}

- (JavaUtilArrayList *)removeLowerLevelsWithJavaUtilArrayList:(JavaUtilArrayList *)zCurrent
                                                      withInt:(jint)zMinLevel {
  return OrgMinimaDatabaseTxpowtreeCascadeTree_removeLowerLevelsWithJavaUtilArrayList_withInt_(self, zCurrent, zMinLevel);
}

- (OrgMinimaDatabaseTxpowtreeBlockTreeNode *)copyNodeTreeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:(OrgMinimaDatabaseTxpowtreeBlockTreeNode *)zOriginal {
  return OrgMinimaDatabaseTxpowtreeCascadeTree_copyNodeTreeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, zOriginal);
}

- (void)dealloc {
  RELEASE_(mDB_);
  RELEASE_(mMainTree_);
  RELEASE_(mCascadeTree_);
  RELEASE_(mRemovals_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgMinimaDatabaseTxpowtreeBlockTree;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x2, 4, 5, -1, 6, -1, -1 },
    { NULL, "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", 0x2, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgMinimaDatabaseTxpowtreeBlockTree:withOrgMinimaDatabaseMinimaDB:);
  methods[1].selector = @selector(getCascadeTree);
  methods[2].selector = @selector(getRemoved);
  methods[3].selector = @selector(recurseParentMMRWithOrgMinimaObjectsBaseMiniNumber:withOrgMinimaDatabaseMmrMMRSet:);
  methods[4].selector = @selector(cascadedTree);
  methods[5].selector = @selector(removeLowerLevelsWithJavaUtilArrayList:withInt:);
  methods[6].selector = @selector(copyNodeTreeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mDB_", "LOrgMinimaDatabaseMinimaDB;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mMainTree_", "LOrgMinimaDatabaseTxpowtreeBlockTree;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mCascadeTree_", "LOrgMinimaDatabaseTxpowtreeBlockTree;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mRemovals_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x0, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LOrgMinimaDatabaseTxpowtreeBlockTree;LOrgMinimaDatabaseMinimaDB;", "()Ljava/util/ArrayList<Lorg/minima/database/txpowtree/BlockTreeNode;>;", "recurseParentMMR", "LOrgMinimaObjectsBaseMiniNumber;LOrgMinimaDatabaseMmrMMRSet;", "removeLowerLevels", "LJavaUtilArrayList;I", "(Ljava/util/ArrayList<Lorg/minima/database/txpowtree/BlockTreeNode;>;I)Ljava/util/ArrayList<Lorg/minima/database/txpowtree/BlockTreeNode;>;", "copyNodeTree", "LOrgMinimaDatabaseTxpowtreeBlockTreeNode;", "Ljava/util/ArrayList<Lorg/minima/database/txpowtree/BlockTreeNode;>;" };
  static const J2ObjcClassInfo _OrgMinimaDatabaseTxpowtreeCascadeTree = { "CascadeTree", "org.minima.database.txpowtree", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_OrgMinimaDatabaseTxpowtreeCascadeTree;
}

@end

void OrgMinimaDatabaseTxpowtreeCascadeTree_initWithOrgMinimaDatabaseTxpowtreeBlockTree_withOrgMinimaDatabaseMinimaDB_(OrgMinimaDatabaseTxpowtreeCascadeTree *self, OrgMinimaDatabaseTxpowtreeBlockTree *zMainTree, OrgMinimaDatabaseMinimaDB *zDB) {
  NSObject_init(self);
  JreStrongAssign(&self->mMainTree_, zMainTree);
  JreStrongAssignAndConsume(&self->mRemovals_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->mDB_, zDB);
}

OrgMinimaDatabaseTxpowtreeCascadeTree *new_OrgMinimaDatabaseTxpowtreeCascadeTree_initWithOrgMinimaDatabaseTxpowtreeBlockTree_withOrgMinimaDatabaseMinimaDB_(OrgMinimaDatabaseTxpowtreeBlockTree *zMainTree, OrgMinimaDatabaseMinimaDB *zDB) {
  J2OBJC_NEW_IMPL(OrgMinimaDatabaseTxpowtreeCascadeTree, initWithOrgMinimaDatabaseTxpowtreeBlockTree_withOrgMinimaDatabaseMinimaDB_, zMainTree, zDB)
}

OrgMinimaDatabaseTxpowtreeCascadeTree *create_OrgMinimaDatabaseTxpowtreeCascadeTree_initWithOrgMinimaDatabaseTxpowtreeBlockTree_withOrgMinimaDatabaseMinimaDB_(OrgMinimaDatabaseTxpowtreeBlockTree *zMainTree, OrgMinimaDatabaseMinimaDB *zDB) {
  J2OBJC_CREATE_IMPL(OrgMinimaDatabaseTxpowtreeCascadeTree, initWithOrgMinimaDatabaseTxpowtreeBlockTree_withOrgMinimaDatabaseMinimaDB_, zMainTree, zDB)
}

JavaUtilArrayList *OrgMinimaDatabaseTxpowtreeCascadeTree_removeLowerLevelsWithJavaUtilArrayList_withInt_(OrgMinimaDatabaseTxpowtreeCascadeTree *self, JavaUtilArrayList *zCurrent, jint zMinLevel) {
  JavaUtilArrayList *ret = create_JavaUtilArrayList_init();
  for (OrgMinimaDatabaseTxpowtreeBlockTreeNode * __strong node in nil_chk(zCurrent)) {
    if ([((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(node)) getSuperBlockLevel] >= zMinLevel) {
      [node setCurrentLevelWithInt:[node getSuperBlockLevel]];
      OrgMinimaDatabaseTxpowtreeBlockTreeNode *copy_ = create_OrgMinimaDatabaseTxpowtreeBlockTreeNode_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(node);
      [ret addWithId:copy_];
    }
    else {
      id<OrgMinimaDatabaseTxpowdbTxPOWDBRow> row = [((OrgMinimaDatabaseMinimaDB *) nil_chk(self->mDB_)) getTxPOWRowWithOrgMinimaObjectsBaseMiniData32:[node getTxPowID]];
      [((id<OrgMinimaDatabaseTxpowdbTxPOWDBRow>) nil_chk(row)) setOnChainBlockWithBoolean:false];
      [((JavaUtilArrayList *) nil_chk(self->mRemovals_)) addWithId:node];
    }
  }
  return ret;
}

OrgMinimaDatabaseTxpowtreeBlockTreeNode *OrgMinimaDatabaseTxpowtreeCascadeTree_copyNodeTreeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(OrgMinimaDatabaseTxpowtreeCascadeTree *self, OrgMinimaDatabaseTxpowtreeBlockTreeNode *zOriginal) {
  OrgMinimaDatabaseTxpowtreeBlockTreeNode *copy_ = create_OrgMinimaDatabaseTxpowtreeBlockTreeNode_initWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(zOriginal);
  JavaUtilArrayList *children = [((OrgMinimaDatabaseTxpowtreeBlockTreeNode *) nil_chk(zOriginal)) getChildren];
  for (OrgMinimaDatabaseTxpowtreeBlockTreeNode * __strong child in nil_chk(children)) {
    OrgMinimaDatabaseTxpowtreeBlockTreeNode *childcopy = OrgMinimaDatabaseTxpowtreeCascadeTree_copyNodeTreeWithOrgMinimaDatabaseTxpowtreeBlockTreeNode_(self, child);
    [copy_ addChildWithOrgMinimaDatabaseTxpowtreeBlockTreeNode:childcopy];
  }
  return copy_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMinimaDatabaseTxpowtreeCascadeTree)
