//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eliasminima/Projects/Minima-Telco-App-19112019-9-44/mobile-app-front-end/app/ios/App/App/Flower/json/simple/parser/Yylex.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ParseException.h"
#include "Yylex.h"
#include "Yytoken.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/Reader.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Error.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"

@interface FlowerJsonSimpleParserYylex () {
 @public
  JavaIoReader *zzReader_;
  jint zzState_;
  jint zzLexicalState_;
  IOSCharArray *zzBuffer_;
  jint zzMarkedPos_;
  jint zzCurrentPos_;
  jint zzStartRead_;
  jint zzEndRead_;
  jint yyline_;
  jint yychar_;
  jint yycolumn_;
  jboolean zzAtBOL_;
  jboolean zzAtEOF_;
  JavaLangStringBuffer *sb_;
}

+ (IOSIntArray *)zzUnpackAction;

+ (jint)zzUnpackActionWithNSString:(NSString *)packed
                           withInt:(jint)offset
                      withIntArray:(IOSIntArray *)result;

+ (IOSIntArray *)zzUnpackRowMap;

+ (jint)zzUnpackRowMapWithNSString:(NSString *)packed
                           withInt:(jint)offset
                      withIntArray:(IOSIntArray *)result;

+ (IOSIntArray *)zzUnpackAttribute;

+ (jint)zzUnpackAttributeWithNSString:(NSString *)packed
                              withInt:(jint)offset
                         withIntArray:(IOSIntArray *)result;

+ (IOSCharArray *)zzUnpackCMapWithNSString:(NSString *)packed;

- (jboolean)zzRefill;

- (void)zzScanErrorWithInt:(jint)errorCode;

@end

J2OBJC_FIELD_SETTER(FlowerJsonSimpleParserYylex, zzReader_, JavaIoReader *)
J2OBJC_FIELD_SETTER(FlowerJsonSimpleParserYylex, zzBuffer_, IOSCharArray *)
J2OBJC_FIELD_SETTER(FlowerJsonSimpleParserYylex, sb_, JavaLangStringBuffer *)

inline jint FlowerJsonSimpleParserYylex_get_ZZ_BUFFERSIZE(void);
#define FlowerJsonSimpleParserYylex_ZZ_BUFFERSIZE 16384
J2OBJC_STATIC_FIELD_CONSTANT(FlowerJsonSimpleParserYylex, ZZ_BUFFERSIZE, jint)

inline IOSIntArray *FlowerJsonSimpleParserYylex_get_ZZ_LEXSTATE(void);
static IOSIntArray *FlowerJsonSimpleParserYylex_ZZ_LEXSTATE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_LEXSTATE, IOSIntArray *)

inline NSString *FlowerJsonSimpleParserYylex_get_ZZ_CMAP_PACKED(void);
static NSString *FlowerJsonSimpleParserYylex_ZZ_CMAP_PACKED = @"\t\x00\x01\x07\x01\x07\x02\x00\x01\x07\x12\x00\x01\x07\x01\x00\x01\t\x08\x00\x01\x06\x01\x19\x01\x02\x01\x04\x01\n\n\x03\x01\x1a\x06\x00\x04\x01\x01\x05\x01\x01\x14\x00\x01\x17\x01\x08\x01\x18\x03\x00\x01\x12\x01\x0b\x02\x01\x01\x11\x01\x0c\x05\x00\x01\x13\x01\x00\x01\x0d\x03\x00\x01\x0e\x01\x14\x01\x0f\x01\x10\x05\x00\x01\x15\x01\x00\x01\x16\uff82\x00";
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_CMAP_PACKED, NSString *)

inline IOSCharArray *FlowerJsonSimpleParserYylex_get_ZZ_CMAP(void);
static IOSCharArray *FlowerJsonSimpleParserYylex_ZZ_CMAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_CMAP, IOSCharArray *)

inline IOSIntArray *FlowerJsonSimpleParserYylex_get_ZZ_ACTION(void);
static IOSIntArray *FlowerJsonSimpleParserYylex_ZZ_ACTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_ACTION, IOSIntArray *)

inline NSString *FlowerJsonSimpleParserYylex_get_ZZ_ACTION_PACKED_0(void);
static NSString *FlowerJsonSimpleParserYylex_ZZ_ACTION_PACKED_0 = @"\x02\x00\x02\x01\x01\x02\x01\x03\x01\x04\x03\x01\x01\x05\x01\x06\x01\x07\x01\x08\x01\t\x01\n\x01\x0b\x01\x0c\x01\x0d\x05\x00\x01\x0c\x01\x0e\x01\x0f\x01\x10\x01\x11\x01\x12\x01\x13\x01\x14\x01\x00\x01\x15\x01\x00\x01\x15\x04\x00\x01\x16\x01\x17\x02\x00\x01\x18";
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_ACTION_PACKED_0, NSString *)

inline IOSIntArray *FlowerJsonSimpleParserYylex_get_ZZ_ROWMAP(void);
static IOSIntArray *FlowerJsonSimpleParserYylex_ZZ_ROWMAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_ROWMAP, IOSIntArray *)

inline NSString *FlowerJsonSimpleParserYylex_get_ZZ_ROWMAP_PACKED_0(void);
static NSString *FlowerJsonSimpleParserYylex_ZZ_ROWMAP_PACKED_0 = @"\x00\x00\x00\x1b\x00""6\x00Q\x00l\x00\xc2\x87\x00""6\x00\u00a2\x00\u00bd\x00\u00d8\x00""6\x00""6\x00""6\x00""6\x00""6\x00""6\x00\u00f3\x00\u010e\x00""6\x00\u0129\x00\u0144\x00\u015f\x00\u017a\x00\u0195\x00""6\x00""6\x00""6\x00""6\x00""6\x00""6\x00""6\x00""6\x00\u01b0\x00\u01cb\x00\u01e6\x00\u01e6\x00\u0201\x00\u021c\x00\u0237\x00\u0252\x00""6\x00""6\x00\u026d\x00\u0288\x00""6";
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_ROWMAP_PACKED_0, NSString *)

inline IOSIntArray *FlowerJsonSimpleParserYylex_get_ZZ_TRANS(void);
static IOSIntArray *FlowerJsonSimpleParserYylex_ZZ_TRANS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_TRANS, IOSIntArray *)

inline jint FlowerJsonSimpleParserYylex_get_ZZ_UNKNOWN_ERROR(void);
#define FlowerJsonSimpleParserYylex_ZZ_UNKNOWN_ERROR 0
J2OBJC_STATIC_FIELD_CONSTANT(FlowerJsonSimpleParserYylex, ZZ_UNKNOWN_ERROR, jint)

inline jint FlowerJsonSimpleParserYylex_get_ZZ_NO_MATCH(void);
#define FlowerJsonSimpleParserYylex_ZZ_NO_MATCH 1
J2OBJC_STATIC_FIELD_CONSTANT(FlowerJsonSimpleParserYylex, ZZ_NO_MATCH, jint)

inline jint FlowerJsonSimpleParserYylex_get_ZZ_PUSHBACK_2BIG(void);
#define FlowerJsonSimpleParserYylex_ZZ_PUSHBACK_2BIG 2
J2OBJC_STATIC_FIELD_CONSTANT(FlowerJsonSimpleParserYylex, ZZ_PUSHBACK_2BIG, jint)

inline IOSObjectArray *FlowerJsonSimpleParserYylex_get_ZZ_ERROR_MSG(void);
static IOSObjectArray *FlowerJsonSimpleParserYylex_ZZ_ERROR_MSG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_ERROR_MSG, IOSObjectArray *)

inline IOSIntArray *FlowerJsonSimpleParserYylex_get_ZZ_ATTRIBUTE(void);
static IOSIntArray *FlowerJsonSimpleParserYylex_ZZ_ATTRIBUTE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_ATTRIBUTE, IOSIntArray *)

inline NSString *FlowerJsonSimpleParserYylex_get_ZZ_ATTRIBUTE_PACKED_0(void);
static NSString *FlowerJsonSimpleParserYylex_ZZ_ATTRIBUTE_PACKED_0 = @"\x02\x00\x01\t\x03\x01\x01\t\x03\x01\x06\t\x02\x01\x01\t\x05\x00\x08\t\x01\x00\x01\x01\x01\x00\x01\x01\x04\x00\x02\t\x02\x00\x01\t";
J2OBJC_STATIC_FIELD_OBJ_FINAL(FlowerJsonSimpleParserYylex, ZZ_ATTRIBUTE_PACKED_0, NSString *)

__attribute__((unused)) static IOSIntArray *FlowerJsonSimpleParserYylex_zzUnpackAction(void);

__attribute__((unused)) static jint FlowerJsonSimpleParserYylex_zzUnpackActionWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result);

__attribute__((unused)) static IOSIntArray *FlowerJsonSimpleParserYylex_zzUnpackRowMap(void);

__attribute__((unused)) static jint FlowerJsonSimpleParserYylex_zzUnpackRowMapWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result);

__attribute__((unused)) static IOSIntArray *FlowerJsonSimpleParserYylex_zzUnpackAttribute(void);

__attribute__((unused)) static jint FlowerJsonSimpleParserYylex_zzUnpackAttributeWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result);

__attribute__((unused)) static IOSCharArray *FlowerJsonSimpleParserYylex_zzUnpackCMapWithNSString_(NSString *packed);

__attribute__((unused)) static jboolean FlowerJsonSimpleParserYylex_zzRefill(FlowerJsonSimpleParserYylex *self);

__attribute__((unused)) static void FlowerJsonSimpleParserYylex_yybeginWithInt_(FlowerJsonSimpleParserYylex *self, jint newState);

__attribute__((unused)) static NSString *FlowerJsonSimpleParserYylex_yytext(FlowerJsonSimpleParserYylex *self);

__attribute__((unused)) static jchar FlowerJsonSimpleParserYylex_yycharatWithInt_(FlowerJsonSimpleParserYylex *self, jint pos);

__attribute__((unused)) static jint FlowerJsonSimpleParserYylex_yylength(FlowerJsonSimpleParserYylex *self);

__attribute__((unused)) static void FlowerJsonSimpleParserYylex_zzScanErrorWithInt_(FlowerJsonSimpleParserYylex *self, jint errorCode);

#line 1 "/Users/eliasminima/Projects/Minima-Telco-App-19112019-9-44/mobile-app-front-end/app/ios/App/App/Flower/json/simple/parser/Yylex.java"

J2OBJC_INITIALIZED_DEFN(FlowerJsonSimpleParserYylex)


#line 5
@implementation FlowerJsonSimpleParserYylex


#line 54
+ (IOSIntArray *)zzUnpackAction {
  return FlowerJsonSimpleParserYylex_zzUnpackAction();
}


#line 61
+ (jint)zzUnpackActionWithNSString:(NSString *)packed
                           withInt:(jint)offset
                      withIntArray:(IOSIntArray *)result {
  return FlowerJsonSimpleParserYylex_zzUnpackActionWithNSString_withInt_withIntArray_(packed, offset, result);
}


#line 87
+ (IOSIntArray *)zzUnpackRowMap {
  return FlowerJsonSimpleParserYylex_zzUnpackRowMap();
}


#line 94
+ (jint)zzUnpackRowMapWithNSString:(NSString *)packed
                           withInt:(jint)offset
                      withIntArray:(IOSIntArray *)result {
  return FlowerJsonSimpleParserYylex_zzUnpackRowMapWithNSString_withInt_withIntArray_(packed, offset, result);
}


#line 201
+ (IOSIntArray *)zzUnpackAttribute {
  return FlowerJsonSimpleParserYylex_zzUnpackAttribute();
}


#line 208
+ (jint)zzUnpackAttributeWithNSString:(NSString *)packed
                              withInt:(jint)offset
                         withIntArray:(IOSIntArray *)result {
  return FlowerJsonSimpleParserYylex_zzUnpackAttributeWithNSString_withInt_withIntArray_(packed, offset, result);
}


#line 269
- (jint)getPosition {
  return yychar_;
}


#line 281
- (instancetype)initWithJavaIoReader:(JavaIoReader *)inArg {
  FlowerJsonSimpleParserYylex_initWithJavaIoReader_(self, inArg);
  return self;
}


#line 291
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  FlowerJsonSimpleParserYylex_initWithJavaIoInputStream_(self, inArg);
  return self;
}


#line 301
+ (IOSCharArray *)zzUnpackCMapWithNSString:(NSString *)packed {
  return FlowerJsonSimpleParserYylex_zzUnpackCMapWithNSString_(packed);
}


#line 321
- (jboolean)zzRefill {
  return FlowerJsonSimpleParserYylex_zzRefill(self);
}


#line 371
- (void)yyclose {
  zzAtEOF_ = true;
  zzEndRead_ = zzStartRead_;
  
#line 375
  if (zzReader_ != nil)
#line 376
  [zzReader_ close];
}


#line 390
- (void)yyresetWithJavaIoReader:(JavaIoReader *)reader {
  zzReader_ = reader;
  zzAtBOL_ = true;
  zzAtEOF_ = false;
  zzEndRead_ = zzStartRead_ = 0;
  zzCurrentPos_ = zzMarkedPos_ = 0;
  yyline_ = yychar_ = yycolumn_ = 0;
  zzLexicalState_ = FlowerJsonSimpleParserYylex_YYINITIAL;
}


#line 404
- (jint)yystate {
  return zzLexicalState_;
}


#line 414
- (void)yybeginWithInt:(jint)newState {
  FlowerJsonSimpleParserYylex_yybeginWithInt_(self, newState);
}


#line 422
- (NSString *)yytext {
  return FlowerJsonSimpleParserYylex_yytext(self);
}


#line 438
- (jchar)yycharatWithInt:(jint)pos {
  return FlowerJsonSimpleParserYylex_yycharatWithInt_(self, pos);
}


#line 446
- (jint)yylength {
  return FlowerJsonSimpleParserYylex_yylength(self);
}


#line 465
- (void)zzScanErrorWithInt:(jint)errorCode {
  FlowerJsonSimpleParserYylex_zzScanErrorWithInt_(self, errorCode);
}


#line 486
- (void)yypushbackWithInt:(jint)number {
  if (number > FlowerJsonSimpleParserYylex_yylength(self))
#line 488
  FlowerJsonSimpleParserYylex_zzScanErrorWithInt_(self, FlowerJsonSimpleParserYylex_ZZ_PUSHBACK_2BIG);
  
#line 490
  zzMarkedPos_ -= number;
}


#line 501
- (FlowerJsonSimpleParserYytoken *)yylex {
  jint zzInput;
  jint zzAction;
  
#line 506
  jint zzCurrentPosL;
  jint zzMarkedPosL;
  jint zzEndReadL = zzEndRead_;
  IOSCharArray *zzBufferL = zzBuffer_;
  IOSCharArray *zzCMapL = FlowerJsonSimpleParserYylex_ZZ_CMAP;
  
#line 512
  IOSIntArray *zzTransL = FlowerJsonSimpleParserYylex_ZZ_TRANS;
  IOSIntArray *zzRowMapL = FlowerJsonSimpleParserYylex_ZZ_ROWMAP;
  IOSIntArray *zzAttrL = FlowerJsonSimpleParserYylex_ZZ_ATTRIBUTE;
  
#line 516
  while (true) {
    zzMarkedPosL = zzMarkedPos_;
    
#line 519
    yychar_ += zzMarkedPosL - zzStartRead_;
    
#line 521
    zzAction = -1;
    
#line 523
    zzCurrentPosL = zzCurrentPos_ = zzStartRead_ = zzMarkedPosL;
    
#line 525
    zzState_ = IOSIntArray_Get(nil_chk(FlowerJsonSimpleParserYylex_ZZ_LEXSTATE), zzLexicalState_);
    {
      
#line 529
      while (true) {
        
#line 531
        if (zzCurrentPosL < zzEndReadL)
#line 532
        zzInput = IOSCharArray_Get(nil_chk(zzBufferL), zzCurrentPosL++);
        else if (zzAtEOF_) {
          zzInput = FlowerJsonSimpleParserYylex_YYEOF;
          goto break_zzForAction;
        }
        else {
          
#line 539
          zzCurrentPos_ = zzCurrentPosL;
          zzMarkedPos_ = zzMarkedPosL;
          jboolean eof = FlowerJsonSimpleParserYylex_zzRefill(self);
          
#line 543
          zzCurrentPosL = zzCurrentPos_;
          zzMarkedPosL = zzMarkedPos_;
          zzBufferL = zzBuffer_;
          zzEndReadL = zzEndRead_;
          if (eof) {
            zzInput = FlowerJsonSimpleParserYylex_YYEOF;
            goto break_zzForAction;
          }
          else {
            zzInput = IOSCharArray_Get(nil_chk(zzBufferL), zzCurrentPosL++);
          }
        }
        jint zzNext = IOSIntArray_Get(nil_chk(zzTransL), IOSIntArray_Get(nil_chk(zzRowMapL), zzState_) + IOSCharArray_Get(nil_chk(zzCMapL), zzInput));
        if (zzNext == -1) goto break_zzForAction;
        zzState_ = zzNext;
        
#line 559
        jint zzAttributes = IOSIntArray_Get(nil_chk(zzAttrL), zzState_);
        if ((zzAttributes & 1) == 1) {
          zzAction = zzState_;
          zzMarkedPosL = zzCurrentPosL;
          if ((zzAttributes & 8) == 8) goto break_zzForAction;
        }
      }
    }
    break_zzForAction: ;
    
#line 570
    zzMarkedPos_ = zzMarkedPosL;
    
#line 572
    switch (zzAction < 0 ? zzAction : IOSIntArray_Get(nil_chk(FlowerJsonSimpleParserYylex_ZZ_ACTION), zzAction)) {
      case 11:
      {
        
#line 574
        (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithNSString:FlowerJsonSimpleParserYylex_yytext(self)];
      }
      case 25:
      
#line 576
      break;
      case 4:
      {
        
#line 578
        sb_ = nil;
        
#line 578
        sb_ = new_JavaLangStringBuffer_init();
        
#line 578
        FlowerJsonSimpleParserYylex_yybeginWithInt_(self, FlowerJsonSimpleParserYylex_STRING_BEGIN);
      }
      case 26:
      
#line 580
      break;
      case 16:
      {
        
#line 582
        (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithChar:0x0008];
      }
      case 27:
      
#line 584
      break;
      case 6:
      {
        
#line 586
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_RIGHT_BRACE, nil);
      }
      case 28:
      
#line 588
      break;
      case 23:
      {
        
#line 590
        JavaLangBoolean *val = JavaLangBoolean_valueOfWithNSString_(FlowerJsonSimpleParserYylex_yytext(self));
        
#line 590
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_VALUE, val);
      }
      case 29:
      
#line 592
      break;
      case 22:
      {
        
#line 594
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_VALUE, nil);
      }
      case 30:
      
#line 596
      break;
      case 13:
      {
        
#line 598
        FlowerJsonSimpleParserYylex_yybeginWithInt_(self, FlowerJsonSimpleParserYylex_YYINITIAL);
        
#line 598
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_VALUE, [((JavaLangStringBuffer *) nil_chk(sb_)) description]);
      }
      case 31:
      
#line 600
      break;
      case 12:
      {
        
#line 602
        (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithChar:'\\'];
      }
      case 32:
      
#line 604
      break;
      case 21:
      {
        
#line 606
        JavaLangDouble *val = JavaLangDouble_valueOfWithNSString_(FlowerJsonSimpleParserYylex_yytext(self));
        
#line 606
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_VALUE, val);
      }
      case 33:
      
#line 608
      break;
      case 1:
      {
        
#line 610
        @throw new_FlowerJsonSimpleParserParseException_initWithInt_withInt_withId_(yychar_, FlowerJsonSimpleParserParseException_ERROR_UNEXPECTED_CHAR, new_JavaLangCharacter_initWithChar_(FlowerJsonSimpleParserYylex_yycharatWithInt_(self, 0)));
      }
      case 34:
      
#line 612
      break;
      case 8:
      {
        
#line 614
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_RIGHT_SQUARE, nil);
      }
      case 35:
      
#line 616
      break;
      case 19:
      {
        
#line 618
        (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithChar:0x000d];
      }
      case 36:
      
#line 620
      break;
      case 15:
      {
        
#line 622
        (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithChar:'/'];
      }
      case 37:
      
#line 624
      break;
      case 10:
      {
        
#line 626
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_COLON, nil);
      }
      case 38:
      
#line 628
      break;
      case 14:
      {
        
#line 630
        (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithChar:'"'];
      }
      case 39:
      
#line 632
      break;
      case 5:
      {
        
#line 634
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_LEFT_BRACE, nil);
      }
      case 40:
      
#line 636
      break;
      case 17:
      {
        
#line 638
        (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithChar:0x000c];
      }
      case 41:
      
#line 640
      break;
      case 24:
      {
        
#line 642
        @try {
          jint ch = JavaLangInteger_parseIntWithNSString_withInt_([((NSString *) nil_chk(FlowerJsonSimpleParserYylex_yytext(self))) java_substring:2], 16);
          (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithChar:(jchar) ch];
        }
        @catch (JavaLangException *e) {
          @throw new_FlowerJsonSimpleParserParseException_initWithInt_withInt_withId_(yychar_, FlowerJsonSimpleParserParseException_ERROR_UNEXPECTED_EXCEPTION, e);
        }
      }
      case 42:
      
#line 650
      break;
      case 20:
      {
        
#line 652
        (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithChar:0x0009];
      }
      case 43:
      
#line 654
      break;
      case 7:
      {
        
#line 656
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_LEFT_SQUARE, nil);
      }
      case 44:
      
#line 658
      break;
      case 2:
      {
        
#line 660
        JavaLangLong *val = JavaLangLong_valueOfWithNSString_(FlowerJsonSimpleParserYylex_yytext(self));
        
#line 660
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_VALUE, val);
      }
      case 45:
      
#line 662
      break;
      case 18:
      {
        
#line 664
        (void) [((JavaLangStringBuffer *) nil_chk(sb_)) appendWithChar:0x000a];
      }
      case 46:
      
#line 666
      break;
      case 9:
      {
        
#line 668
        return new_FlowerJsonSimpleParserYytoken_initWithInt_withId_(FlowerJsonSimpleParserYytoken_TYPE_COMMA, nil);
      }
      case 47:
      
#line 670
      break;
      case 3:
      {
      }
      case 48:
      
#line 674
      break;
      default:
      if (zzInput == FlowerJsonSimpleParserYylex_YYEOF && zzStartRead_ == zzCurrentPos_) {
        zzAtEOF_ = true;
        return nil;
      }
      else {
        FlowerJsonSimpleParserYylex_zzScanErrorWithInt_(self, FlowerJsonSimpleParserYylex_ZZ_NO_MATCH);
      }
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[I", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "[I", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 2, 1, -1, -1, -1, -1 },
    { NULL, "[I", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
    { NULL, "[C", 0xa, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, 8, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, 8, -1, -1, -1 },
    { NULL, "V", 0x11, 9, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "C", 0x11, 12, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 11, -1, -1, -1, -1 },
    { NULL, "LFlowerJsonSimpleParserYytoken;", 0x1, -1, -1, 15, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(zzUnpackAction);
  methods[1].selector = @selector(zzUnpackActionWithNSString:withInt:withIntArray:);
  methods[2].selector = @selector(zzUnpackRowMap);
  methods[3].selector = @selector(zzUnpackRowMapWithNSString:withInt:withIntArray:);
  methods[4].selector = @selector(zzUnpackAttribute);
  methods[5].selector = @selector(zzUnpackAttributeWithNSString:withInt:withIntArray:);
  methods[6].selector = @selector(getPosition);
  methods[7].selector = @selector(initWithJavaIoReader:);
  methods[8].selector = @selector(initWithJavaIoInputStream:);
  methods[9].selector = @selector(zzUnpackCMapWithNSString:);
  methods[10].selector = @selector(zzRefill);
  methods[11].selector = @selector(yyclose);
  methods[12].selector = @selector(yyresetWithJavaIoReader:);
  methods[13].selector = @selector(yystate);
  methods[14].selector = @selector(yybeginWithInt:);
  methods[15].selector = @selector(yytext);
  methods[16].selector = @selector(yycharatWithInt:);
  methods[17].selector = @selector(yylength);
  methods[18].selector = @selector(zzScanErrorWithInt:);
  methods[19].selector = @selector(yypushbackWithInt:);
  methods[20].selector = @selector(yylex);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "YYEOF", "I", .constantValue.asInt = FlowerJsonSimpleParserYylex_YYEOF, 0x19, -1, -1, -1, -1 },
    { "ZZ_BUFFERSIZE", "I", .constantValue.asInt = FlowerJsonSimpleParserYylex_ZZ_BUFFERSIZE, 0x1a, -1, -1, -1, -1 },
    { "YYINITIAL", "I", .constantValue.asInt = FlowerJsonSimpleParserYylex_YYINITIAL, 0x19, -1, -1, -1, -1 },
    { "STRING_BEGIN", "I", .constantValue.asInt = FlowerJsonSimpleParserYylex_STRING_BEGIN, 0x19, -1, -1, -1, -1 },
    { "ZZ_LEXSTATE", "[I", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "ZZ_CMAP_PACKED", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "ZZ_CMAP", "[C", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "ZZ_ACTION", "[I", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "ZZ_ACTION_PACKED_0", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "ZZ_ROWMAP", "[I", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "ZZ_ROWMAP_PACKED_0", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "ZZ_TRANS", "[I", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "ZZ_UNKNOWN_ERROR", "I", .constantValue.asInt = FlowerJsonSimpleParserYylex_ZZ_UNKNOWN_ERROR, 0x1a, -1, -1, -1, -1 },
    { "ZZ_NO_MATCH", "I", .constantValue.asInt = FlowerJsonSimpleParserYylex_ZZ_NO_MATCH, 0x1a, -1, -1, -1, -1 },
    { "ZZ_PUSHBACK_2BIG", "I", .constantValue.asInt = FlowerJsonSimpleParserYylex_ZZ_PUSHBACK_2BIG, 0x1a, -1, -1, -1, -1 },
    { "ZZ_ERROR_MSG", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
    { "ZZ_ATTRIBUTE", "[I", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "ZZ_ATTRIBUTE_PACKED_0", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "zzReader_", "LJavaIoReader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zzState_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zzLexicalState_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zzBuffer_", "[C", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zzMarkedPos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zzCurrentPos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zzStartRead_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zzEndRead_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "yyline_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "yychar_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "yycolumn_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zzAtBOL_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zzAtEOF_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sb_", "LJavaLangStringBuffer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "zzUnpackAction", "LNSString;I[I", "zzUnpackRowMap", "zzUnpackAttribute", "LJavaIoReader;", "LJavaIoInputStream;", "zzUnpackCMap", "LNSString;", "LJavaIoIOException;", "yyreset", "yybegin", "I", "yycharat", "zzScanError", "yypushback", "LJavaIoIOException;LFlowerJsonSimpleParserParseException;", &FlowerJsonSimpleParserYylex_ZZ_LEXSTATE, &FlowerJsonSimpleParserYylex_ZZ_CMAP_PACKED, &FlowerJsonSimpleParserYylex_ZZ_CMAP, &FlowerJsonSimpleParserYylex_ZZ_ACTION, &FlowerJsonSimpleParserYylex_ZZ_ACTION_PACKED_0, &FlowerJsonSimpleParserYylex_ZZ_ROWMAP, &FlowerJsonSimpleParserYylex_ZZ_ROWMAP_PACKED_0, &FlowerJsonSimpleParserYylex_ZZ_TRANS, &FlowerJsonSimpleParserYylex_ZZ_ERROR_MSG, &FlowerJsonSimpleParserYylex_ZZ_ATTRIBUTE, &FlowerJsonSimpleParserYylex_ZZ_ATTRIBUTE_PACKED_0 };
  static const J2ObjcClassInfo _FlowerJsonSimpleParserYylex = { "Yylex", "Flower.json.simple.parser", ptrTable, methods, fields, 7, 0x0, 21, 32, -1, -1, -1, -1, -1 };
  return &_FlowerJsonSimpleParserYylex;
}

+ (void)initialize {
  if (self == [FlowerJsonSimpleParserYylex class]) {
    FlowerJsonSimpleParserYylex_ZZ_LEXSTATE = [IOSIntArray newArrayWithInts:(jint[]){
#line 24
      0, 0, 1, 1 } count:4];
      FlowerJsonSimpleParserYylex_ZZ_CMAP = FlowerJsonSimpleParserYylex_zzUnpackCMapWithNSString_(
#line 40
      FlowerJsonSimpleParserYylex_ZZ_CMAP_PACKED);
      FlowerJsonSimpleParserYylex_ZZ_ACTION = FlowerJsonSimpleParserYylex_zzUnpackAction();
      FlowerJsonSimpleParserYylex_ZZ_ROWMAP = FlowerJsonSimpleParserYylex_zzUnpackRowMap();
      FlowerJsonSimpleParserYylex_ZZ_TRANS = [IOSIntArray newArrayWithInts:(jint[]){
#line 109
        2, 2, 3, 4, 2, 2, 2, 5, 2, 6,
#line 110
        2, 2, 7, 8, 2, 9, 2, 2, 2, 2,
#line 111
        2, 10, 11, 12, 13, 14, 15, 16, 16, 16,
#line 112
        16, 16, 16, 16, 16, 17, 18, 16, 16, 16,
#line 113
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
#line 114
        16, 16, 16, 16, -1, -1, -1, -1, -1, -1,
#line 115
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 116
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 117
        -1, -1, -1, -1, 4, -1, -1, -1, -1, -1,
#line 118
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 119
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 120
        -1, 4, 19, 20, -1, -1, -1, -1, -1, -1,
#line 121
        -1, -1, -1, -1, -1, 20, -1, -1, -1, -1,
#line 122
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 123
        -1, -1, 5, -1, -1, -1, -1, -1, -1, -1,
#line 124
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 125
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 126
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 127
        21, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 128
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 129
        -1, -1, -1, -1, -1, 22, -1, -1, -1, -1,
#line 130
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 131
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 132
        23, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 133
        -1, -1, -1, 16, 16, 16, 16, 16, 16, 16,
#line 134
        16, -1, -1, 16, 16, 16, 16, 16, 16, 16,
#line 135
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
#line 136
        -1, -1, -1, -1, -1, -1, -1, -1, 24, 25,
#line 137
        26, 27, 28, 29, 30, 31, 32, -1, -1, -1,
#line 138
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 139
        33, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 140
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 141
        -1, -1, -1, -1, -1, -1, 34, 35, -1, -1,
#line 142
        34, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 143
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 144
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 145
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 146
        36, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 147
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 148
        -1, -1, -1, -1, -1, -1, -1, 37, -1, -1,
#line 149
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 150
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 151
        -1, 38, -1, -1, -1, -1, -1, -1, -1, -1,
#line 152
        -1, -1, -1, 39, -1, 39, -1, 39, -1, -1,
#line 153
        -1, -1, -1, 39, 39, -1, -1, -1, -1, 39,
#line 154
        39, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 155
        -1, -1, 33, -1, 20, -1, -1, -1, -1, -1,
#line 156
        -1, -1, -1, -1, -1, -1, 20, -1, -1, -1,
#line 157
        -1, -1, -1, -1, -1, -1, -1, -1, -1, 35,
#line 158
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 159
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 160
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 161
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 162
        -1, -1, -1, 38, -1, -1, -1, -1, -1, -1,
#line 163
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 164
        -1, -1, -1, -1, -1, -1, -1, -1, -1, 40,
#line 165
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 166
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
#line 167
        -1, -1, -1, -1, 41, -1, -1, -1, -1, -1,
#line 168
        -1, -1, -1, -1, -1, 42, -1, 42, -1, 42,
#line 169
        -1, -1, -1, -1, -1, 42, 42, -1, -1, -1,
#line 170
        -1, 42, 42, -1, -1, -1, -1, -1, -1, -1,
#line 171
        -1, -1, 43, -1, 43, -1, 43, -1, -1, -1,
#line 172
        -1, -1, 43, 43, -1, -1, -1, -1, 43, 43,
#line 173
        -1, -1, -1, -1, -1, -1, -1, -1, -1, 44,
#line 174
        -1, 44, -1, 44, -1, -1, -1, -1, -1, 44,
#line 175
        44, -1, -1, -1, -1, 44, 44, -1, -1, -1,
#line 176
        -1, -1, -1, -1, -1 } count:675];
        FlowerJsonSimpleParserYylex_ZZ_ERROR_MSG = [IOSObjectArray newArrayWithObjects:(id[]){
#line 186
          @"Unkown internal scanner error",
#line 187
          @"Error: could not match input",
#line 188
          @"Error: pushback value was too large" } count:3 type:NSString_class_()];
          FlowerJsonSimpleParserYylex_ZZ_ATTRIBUTE = FlowerJsonSimpleParserYylex_zzUnpackAttribute();
          J2OBJC_SET_INITIALIZED(FlowerJsonSimpleParserYylex)
        }
      }

@end


#line 54
IOSIntArray *FlowerJsonSimpleParserYylex_zzUnpackAction() {
  FlowerJsonSimpleParserYylex_initialize();
  
#line 55
  IOSIntArray *result = [IOSIntArray newArrayWithLength:45];
  jint offset = 0;
  offset = FlowerJsonSimpleParserYylex_zzUnpackActionWithNSString_withInt_withIntArray_(FlowerJsonSimpleParserYylex_ZZ_ACTION_PACKED_0, offset, result);
  return result;
}


#line 61
jint FlowerJsonSimpleParserYylex_zzUnpackActionWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result) {
  FlowerJsonSimpleParserYylex_initialize();
  
#line 62
  jint i = 0;
  jint j = offset;
  jint l = [((NSString *) nil_chk(packed)) java_length];
  while (i < l) {
    jint count = [packed charAtWithInt:i++];
    jint value = [packed charAtWithInt:i++];
    do *IOSIntArray_GetRef(nil_chk(result), j++) = value;
    while (
#line 68
    --count > 0);
  }
  return j;
}


#line 87
IOSIntArray *FlowerJsonSimpleParserYylex_zzUnpackRowMap() {
  FlowerJsonSimpleParserYylex_initialize();
  
#line 88
  IOSIntArray *result = [IOSIntArray newArrayWithLength:45];
  jint offset = 0;
  offset = FlowerJsonSimpleParserYylex_zzUnpackRowMapWithNSString_withInt_withIntArray_(FlowerJsonSimpleParserYylex_ZZ_ROWMAP_PACKED_0, offset, result);
  return result;
}


#line 94
jint FlowerJsonSimpleParserYylex_zzUnpackRowMapWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result) {
  FlowerJsonSimpleParserYylex_initialize();
  
#line 95
  jint i = 0;
  jint j = offset;
  jint l = [((NSString *) nil_chk(packed)) java_length];
  while (i < l) {
    jint high = JreLShift32([packed charAtWithInt:i++], 16);
    *IOSIntArray_GetRef(nil_chk(result), j++) = high | [packed charAtWithInt:i++];
  }
  return j;
}


#line 201
IOSIntArray *FlowerJsonSimpleParserYylex_zzUnpackAttribute() {
  FlowerJsonSimpleParserYylex_initialize();
  
#line 202
  IOSIntArray *result = [IOSIntArray newArrayWithLength:45];
  jint offset = 0;
  offset = FlowerJsonSimpleParserYylex_zzUnpackAttributeWithNSString_withInt_withIntArray_(FlowerJsonSimpleParserYylex_ZZ_ATTRIBUTE_PACKED_0, offset, result);
  return result;
}


#line 208
jint FlowerJsonSimpleParserYylex_zzUnpackAttributeWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result) {
  FlowerJsonSimpleParserYylex_initialize();
  
#line 209
  jint i = 0;
  jint j = offset;
  jint l = [((NSString *) nil_chk(packed)) java_length];
  while (i < l) {
    jint count = [packed charAtWithInt:i++];
    jint value = [packed charAtWithInt:i++];
    do *IOSIntArray_GetRef(nil_chk(result), j++) = value;
    while (
#line 215
    --count > 0);
  }
  return j;
}


#line 281
void FlowerJsonSimpleParserYylex_initWithJavaIoReader_(FlowerJsonSimpleParserYylex *self, JavaIoReader *inArg) {
  NSObject_init(self);
  self->zzLexicalState_ = FlowerJsonSimpleParserYylex_YYINITIAL;
  self->zzBuffer_ = [IOSCharArray newArrayWithLength:FlowerJsonSimpleParserYylex_ZZ_BUFFERSIZE];
  self->zzAtBOL_ =
#line 261
  true;
  self->sb_ = new_JavaLangStringBuffer_init();
  
#line 282
  self->zzReader_ = inArg;
}


#line 281
FlowerJsonSimpleParserYylex *new_FlowerJsonSimpleParserYylex_initWithJavaIoReader_(JavaIoReader *inArg) {
  J2OBJC_NEW_IMPL(FlowerJsonSimpleParserYylex, initWithJavaIoReader_, inArg)
}


#line 281
FlowerJsonSimpleParserYylex *create_FlowerJsonSimpleParserYylex_initWithJavaIoReader_(JavaIoReader *inArg) {
  J2OBJC_CREATE_IMPL(FlowerJsonSimpleParserYylex, initWithJavaIoReader_, inArg)
}


#line 291
void FlowerJsonSimpleParserYylex_initWithJavaIoInputStream_(FlowerJsonSimpleParserYylex *self, JavaIoInputStream *inArg) {
  FlowerJsonSimpleParserYylex_initWithJavaIoReader_(self, new_JavaIoInputStreamReader_initWithJavaIoInputStream_(inArg));
}


#line 291
FlowerJsonSimpleParserYylex *new_FlowerJsonSimpleParserYylex_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(FlowerJsonSimpleParserYylex, initWithJavaIoInputStream_, inArg)
}


#line 291
FlowerJsonSimpleParserYylex *create_FlowerJsonSimpleParserYylex_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(FlowerJsonSimpleParserYylex, initWithJavaIoInputStream_, inArg)
}


#line 301
IOSCharArray *FlowerJsonSimpleParserYylex_zzUnpackCMapWithNSString_(NSString *packed) {
  FlowerJsonSimpleParserYylex_initialize();
  
#line 302
  IOSCharArray *map = [IOSCharArray newArrayWithLength:(jint) 0x10000];
  jint i = 0;
  jint j = 0;
  while (i < 90) {
    jint count = [((NSString *) nil_chk(packed)) charAtWithInt:i++];
    jchar value = [packed charAtWithInt:i++];
    do *IOSCharArray_GetRef(map, j++) = value;
    while (
#line 308
    --count > 0);
  }
  return map;
}


#line 321
jboolean FlowerJsonSimpleParserYylex_zzRefill(FlowerJsonSimpleParserYylex *self) {
  
#line 324
  if (self->zzStartRead_ > 0) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->zzBuffer_, self->zzStartRead_, self->zzBuffer_,
#line 326
    0,
#line 327
    self->zzEndRead_ - self->zzStartRead_);
    
#line 330
    self->zzEndRead_ -= self->zzStartRead_;
    self->zzCurrentPos_ -= self->zzStartRead_;
    self->zzMarkedPos_ -= self->zzStartRead_;
    self->zzStartRead_ = 0;
  }
  
#line 337
  if (self->zzCurrentPos_ >= ((IOSCharArray *) nil_chk(self->zzBuffer_))->size_) {
    
#line 339
    IOSCharArray *newBuffer = [IOSCharArray newArrayWithLength:self->zzCurrentPos_ * 2];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->zzBuffer_, 0, newBuffer, 0, self->zzBuffer_->size_);
    self->zzBuffer_ = newBuffer;
  }
  
#line 345
  jint numRead = [((JavaIoReader *) nil_chk(self->zzReader_)) readWithCharArray:self->zzBuffer_ withInt:self->zzEndRead_ withInt:
#line 346
  self->zzBuffer_->size_ - self->zzEndRead_];
  
#line 348
  if (numRead > 0) {
    self->zzEndRead_ += numRead;
    return false;
  }
  
#line 353
  if (numRead == 0) {
    jint c = [((JavaIoReader *) nil_chk(self->zzReader_)) read];
    if (c == -1) {
      return true;
    }
    else {
      
#line 358
      *IOSCharArray_GetRef(nil_chk(self->zzBuffer_), self->zzEndRead_++) = (jchar) c;
      return false;
    }
  }
  
#line 364
  return true;
}


#line 414
void FlowerJsonSimpleParserYylex_yybeginWithInt_(FlowerJsonSimpleParserYylex *self, jint newState) {
  self->zzLexicalState_ = newState;
}


#line 422
NSString *FlowerJsonSimpleParserYylex_yytext(FlowerJsonSimpleParserYylex *self) {
  return [NSString java_stringWithCharacters:self->zzBuffer_ offset:self->zzStartRead_ length:self->zzMarkedPos_ - self->zzStartRead_];
}


#line 438
jchar FlowerJsonSimpleParserYylex_yycharatWithInt_(FlowerJsonSimpleParserYylex *self, jint pos) {
  return IOSCharArray_Get(nil_chk(self->zzBuffer_), self->zzStartRead_ + pos);
}


#line 446
jint FlowerJsonSimpleParserYylex_yylength(FlowerJsonSimpleParserYylex *self) {
  return self->zzMarkedPos_ - self->zzStartRead_;
}


#line 465
void FlowerJsonSimpleParserYylex_zzScanErrorWithInt_(FlowerJsonSimpleParserYylex *self, jint errorCode) {
  NSString *message;
  @try {
    message = IOSObjectArray_Get(nil_chk(FlowerJsonSimpleParserYylex_ZZ_ERROR_MSG), errorCode);
  }
  @catch (JavaLangArrayIndexOutOfBoundsException *e) {
    message = IOSObjectArray_Get(FlowerJsonSimpleParserYylex_ZZ_ERROR_MSG, FlowerJsonSimpleParserYylex_ZZ_UNKNOWN_ERROR);
  }
  
#line 474
  @throw new_JavaLangError_initWithNSString_(message);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FlowerJsonSimpleParserYylex)
