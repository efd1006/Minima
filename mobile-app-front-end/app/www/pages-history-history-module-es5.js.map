{"version":3,"sources":["./src/app/pages/history/history.page.html","./src/app/pages/history/history.module.ts","./src/app/pages/history/history.page.scss","./src/app/pages/history/history.page.ts","./src/app/service/history.service.ts"],"names":[],"mappings":"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","file":"pages-history-history-module-es5.js","sourcesContent":["module.exports = \"<ion-app>\\n  <ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n      <ion-title color=\\\"primary\\\">Transaction History</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n\\n    <ion-card>\\n      <ion-card-header>\\n        Recent Activity\\n        <!-- Category Segment -->\\n      <ion-segment (ionChange)=\\\"segmentChanged($event, slides)\\\" [(ngModel)] = \\\"categories\\\">\\n        <ion-segment-button value=\\\"0\\\" class=\\\"seg\\\">\\n          <ion-label>Transactions</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"1\\\" class=\\\"seg\\\">\\n          <ion-label>Tokens Created</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"2\\\" class=\\\"seg\\\">\\n        <ion-label>All</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n      </ion-card-header>\\n\\n  <ion-slides #slides pager=\\\"true\\\" [options]=\\\"sliderOptions\\\" (ionSlideDidChange)=\\\"slideChanged(slides)\\\" (ionSlideDidLoad)=\\\"slideChanged(slides)\\\">\\n\\n  <!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@ Transactions @@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\\n  <ion-slide class=\\\"swiper-slide\\\">\\n    <ion-card-content>\\n\\n    <ion-text *ngIf=\\\"isEmpty\\\">No activities to display.</ion-text>\\n\\n    <ion-grid *ngFor=\\\"let transaction of transactions;\\\">\\n      <ion-row *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name !== 'Create Token';\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"activity\\\"\\n        (click)=\\\"presentModal(transaction.txpow.txpowid, \\n                  transaction.values[0].amount,\\n                  transaction.txpow.txn.state,\\n                  transaction.txpow.txnid,\\n                  transaction.txpow.block,\\n                  transaction.txpow.parent,\\n                  transaction.txpow.txn.inputs[0].tokenid,\\n                  transaction.txpow.date,\\n                  transaction.txpow.isblock,\\n                  transaction.values[0].name)\\\">\\n\\n      <!-- TXN Icon -->\\n      <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n      <ion-icon [name]=\\\"getTXNType(transaction.values[0].amount)\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-col>\\n\\n      <!-- TXN Date -->\\n      <ion-col size=\\\"2\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <p id=\\\"day\\\">\\n      {{ transaction.txpow.date.substring(8, 10) }}\\n      </p>\\n      <h1 id=\\\"month\\\">\\n      {{ transaction.txpow.date.substring(4, 7) }} \\n      </h1>\\n      </ion-label>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"4\\\" fixed=\\\"true\\\" [hidden]=\\\"ios\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        {{ checkTransType(transaction.values[0].amount) }} <span id=\\\"token-name\\\">{{ (transaction.values[0].name).substring(0,12) }}</span>\\n        </h2>\\n        </ion-label>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"6\\\" fixed=\\\"true\\\" [hidden]=\\\"!ios\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        {{ checkTransType(transaction.values[0].amount) }} <span id=\\\"token-name\\\">{{ (transaction.values[0].name).substring(0,12) }}</span>\\n        </h2>\\n        </ion-label>\\n      </ion-col>\\n      \\n\\n      <!-- TXN AMOUNT -->\\n      <ion-col size=\\\"4\\\" fixed=\\\"true\\\">\\n      <h2 class=\\\"amount-h2\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) === '-'\\\">\\n      {{ transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> {{ (transaction.values[0].name).substring(0, 4)}} </span>\\n      </h2>\\n      <h2 class=\\\"amount-h2\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n      {{ \\\"+\\\" + transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> {{ (transaction.values[0].name).substring(0, 4)}} </span>\\n      </h2>\\n      </ion-col>\\n\\n      <!-- TXN Message -->\\n      <ion-col size=\\\"4\\\" *ngIf=\\\"transaction.txpow.txn.state.length > 0\\\" [hidden]=\\\"ios\\\">\\n      <ion-note *ngIf=\\\"transaction.txpow.txn.state[1].data.length <= 15\\\" class=\\\"msg-details\\\">{{transaction.txpow.txn.state[1].data.substring(0, 15)}}</ion-note>\\n      <ion-note *ngIf=\\\"transaction.txpow.txn.state[1].data.length > 15\\\" class=\\\"msg-details\\\">{{transaction.txpow.txn.state[1].data.substring(0, 8) + \\\"...\\\"}}</ion-note>\\n      </ion-col>\\n    </ion-item>\\n\\n    </ion-row>\\n      </ion-grid>\\n        </ion-card-content>\\n          </ion-slide>\\n\\n    <!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@ Token Creation @@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\\n    <ion-slide class=\\\"swiper-slide\\\">\\n      <ion-card-content style=\\\"width: 100%; text-align: center;\\\">\\n    \\n        <ion-text *ngIf=\\\"tokens.length < 1\\\">No token activities to display. </ion-text>\\n    \\n    <ion-grid *ngFor=\\\"let transaction of transactions;\\\">\\n      <ion-row *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name === 'Create Token';\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"activity-tokens\\\"\\n        (click)=\\\"presentTokenModal(transaction.txpow.txpowid, \\n                  transaction.values[0].amount,\\n                  transaction.txpow.txn.state,\\n                  transaction.txpow.txnid,\\n                  transaction.txpow.block,\\n                  transaction.txpow.parent,\\n                  transaction.txpow.txn.inputs[0].tokenid,\\n                  transaction.txpow.date,\\n                  transaction.txpow.isblock,\\n                  transaction.values[0].name)\\\">\\n      \\n      <!-- TXN Icon -->\\n      <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n      <ion-icon name=\\\"brush-outline\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-col>\\n\\n      <!-- TXN Date -->\\n      <ion-col size=\\\"2\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <p id=\\\"day\\\">\\n      {{ transaction.txpow.date.substring(8, 10) }}\\n      </p>\\n      <h1 id=\\\"month\\\">\\n      {{ transaction.txpow.date.substring(4, 7) }} \\n      </h1>\\n      </ion-label>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"4\\\" class=\\\"col-transtype\\\" fixed=\\\"true\\\" [hidden]=\\\"ios\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        Created a token.\\n        </h2>\\n        </ion-label>\\n      </ion-col>\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"5\\\" class=\\\"col-transtype\\\" fixed=\\\"true\\\" [hidden]=\\\"!ios\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        Created a token\\n        </h2>\\n        </ion-label>\\n      </ion-col>\\n\\n\\n      <!-- TXN AMOUNT -->\\n      <ion-col size=\\\"4\\\" fixed=\\\"true\\\">\\n      <h2 class=\\\"amount-h2\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) === '-'\\\">\\n      {{ transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> MINI </span>\\n      </h2>\\n      <h2 class=\\\"amount-h2\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n      {{ \\\"+\\\" + transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> MINI </span>\\n      </h2>\\n      </ion-col>\\n\\n    </ion-item>\\n      </ion-row>\\n      </ion-grid>\\n        </ion-card-content>\\n         </ion-slide>\\n\\n    <!-- @@@@@@@@@@@@@@@@@@@@@@@@@ All @@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\\n    <ion-slide class=\\\"swiper-slide\\\">\\n      <ion-card-content>\\n\\n      <ion-text *ngIf=\\\"isEmpty\\\" style=\\\"font-family: Aeonik-light;\\\">No activities to display.</ion-text>\\n\\n    <ion-grid *ngFor=\\\"let transaction of transactions;\\\">\\n      <ion-row *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name !== 'Create Token';\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"activity\\\"\\n        (click)=\\\"presentModal(transaction.txpow.txpowid, \\n                  transaction.values[0].amount,\\n                  transaction.txpow.txn.state,\\n                  transaction.txpow.txnid,\\n                  transaction.txpow.block,\\n                  transaction.txpow.parent,\\n                  transaction.txpow.txn.inputs[0].tokenid,\\n                  transaction.txpow.date,\\n                  transaction.txpow.isblock,\\n                  transaction.values[0].name)\\\">\\n\\n      <!-- TXN Icon -->\\n      <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n      <ion-icon [name]=\\\"getTXNType(transaction.values[0].amount)\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-col>\\n\\n      <!-- TXN Date -->\\n      <ion-col size=\\\"2\\\" class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <p id=\\\"day\\\">\\n      {{ transaction.txpow.date.substring(8, 10) }}\\n      </p>\\n      <h1 id=\\\"month\\\">\\n      {{ transaction.txpow.date.substring(4, 7) }} \\n      </h1>\\n      </ion-label>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"4\\\" fixed=\\\"true\\\" [hidden]=\\\"ios\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        {{ checkTransType(transaction.values[0].amount) }} <span id=\\\"token-name\\\">{{ (transaction.values[0].name).substring(0,12) }}</span>\\n        </h2>\\n        </ion-label>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"6\\\" fixed=\\\"true\\\" [hidden]=\\\"!ios\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        {{ checkTransType(transaction.values[0].amount) }} <span id=\\\"token-name\\\">{{ (transaction.values[0].name).substring(0,12) }}</span>\\n        </h2>\\n        </ion-label>\\n      </ion-col>\\n\\n      <!-- TXN AMOUNT -->\\n      <ion-col size=\\\"4\\\" fixed=\\\"true\\\">\\n      <h2 class=\\\"amount-h2\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) === '-'\\\">\\n      {{ transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> {{ (transaction.values[0].name).substring(0, 4)}} </span>\\n      </h2>\\n      <h2 class=\\\"amount-h2\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n      {{ \\\"+\\\" + transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> {{ (transaction.values[0].name).substring(0, 4)}} </span>\\n      </h2>\\n      </ion-col>\\n\\n      <!-- TXN Message -->\\n      <ion-col size=\\\"4\\\" *ngIf=\\\"transaction.txpow.txn.state.length > 0\\\" [hidden]=\\\"ios\\\">\\n      <ion-note *ngIf=\\\"transaction.txpow.txn.state[1].data.length <= 15\\\" class=\\\"msg-details\\\">{{transaction.txpow.txn.state[1].data.substring(0, 15)}}</ion-note>\\n      <ion-note *ngIf=\\\"transaction.txpow.txn.state[1].data.length > 15\\\" class=\\\"msg-details\\\">{{transaction.txpow.txn.state[1].data.substring(0, 15) + \\\"...\\\"}}</ion-note>\\n      </ion-col>\\n    </ion-item>\\n    <!-- Tokens -->\\n    </ion-row>\\n\\n    <ion-row *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name === 'Create Token';\\\">\\n    <ion-item\\n    lines=\\\"full\\\"\\n    class=\\\"activity-tokens\\\"\\n    (click)=\\\"presentTokenModal(transaction.txpow.txpowid, \\n              transaction.values[0].amount,\\n              transaction.txpow.txn.state,\\n              transaction.txpow.txnid,\\n              transaction.txpow.block,\\n              transaction.txpow.parent,\\n              transaction.txpow.txn.inputs[0].tokenid,\\n              transaction.txpow.date,\\n              transaction.txpow.isblock,\\n              transaction.values[0].name)\\\">\\n      <!-- TXN Icon -->\\n      <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n      <ion-icon name=\\\"brush-outline\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-col>\\n\\n      <!-- TXN Date -->\\n      <ion-col size=\\\"2\\\" class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <p id=\\\"day\\\">\\n      {{ transaction.txpow.date.substring(8, 10) }}\\n      </p>\\n      <h1 id=\\\"month\\\">\\n      {{ transaction.txpow.date.substring(4, 7) }} \\n      </h1>\\n      </ion-label>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"5\\\" class=\\\"col-transtype\\\" fixed=\\\"true\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        Created a token\\n        </h2>\\n        </ion-label>\\n      </ion-col>\\n\\n      <!-- TXN AMOUNT -->\\n      <ion-col size=\\\"4\\\" fixed=\\\"true\\\">\\n      <h2 class=\\\"amount-h2\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) === '-'\\\">\\n      {{ transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> MINI </span>\\n      </h2>\\n      <h2 class=\\\"amount-h2\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n      {{ \\\"+\\\" + transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> MINI </span>\\n      </h2>\\n      </ion-col>\\n    \\n    </ion-item>\\n      </ion-row>\\n        </ion-grid>\\n          </ion-card-content>\\n            </ion-slide>\\n              </ion-slides>\\n\\n\\n\\n  <!-- SKELETON FOR UX LOADING -->\\n   \\n  \\n  <ion-grid *ngFor=\\\"let length of t_summarySpoof\\\">\\n    <ion-row *ngIf=\\\"length.values[0].name !== 'Create Token' && transactions.length < 1\\\">\\n      <ion-item  class=\\\"activity-skeleton\\\" lines=\\\"full\\\">\\n\\n    <!-- TXN Icon Skeleton -->\\n    <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n    <ion-skeleton-text animated style=\\\"width: 50%; height: 50%;\\\"></ion-skeleton-text>\\n    </ion-col>\\n\\n    <!-- TXN Date Skeleton -->\\n    <ion-col size=\\\"2\\\" class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <p id=\\\"day\\\">\\n        <ion-skeleton-text animated style=\\\"width: 5%\\\"></ion-skeleton-text>\\n      </p>\\n      <h1 id=\\\"month\\\">\\n        <ion-skeleton-text animated style=\\\"width: 10%; height: 10%;\\\"></ion-skeleton-text>\\n      </h1>\\n      </ion-label>\\n    </ion-col>\\n  <!-- TXN Details Skeleton -->\\n  <ion-col size=\\\"2\\\"class=\\\"col-transtype\\\" fixed=\\\"true\\\">\\n    <ion-label id=\\\"transaction\\\">\\n      <h2 class=\\\"h2-type\\\">\\n        <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text>\\n      </h2>\\n      <p class=\\\"p-tokenid\\\">\\n        <ion-skeleton-text animated style=\\\"width: 30%\\\"></ion-skeleton-text>\\n      </p>\\n    </ion-label>\\n  </ion-col>\\n  <!-- TXN Amount Skeleton-->\\n  <ion-col size=\\\"6\\\" class=\\\"col-transamnt\\\" fixed=\\\"true\\\">\\n    <ion-label class=\\\"amount\\\">\\n      <h2 class=\\\"amount-h2\\\">\\n        <ion-skeleton-text animated style=\\\"width: 60%\\\"></ion-skeleton-text>\\n      </h2>\\n    </ion-label> \\n  </ion-col>\\n\\n  <!-- TXN Message Skeleton -->\\n  <ion-col size=\\\"4\\\" [hidden]=\\\"ios\\\">\\n  <ion-skeleton-text animated style=\\\"width: 50%; height: 10%;\\\"></ion-skeleton-text>\\n  </ion-col>\\n\\n  </ion-item>\\n    </ion-row>\\n      </ion-grid>\\n        </ion-card>\\n  \\n  \\n</ion-content>\\n  </ion-app>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HistoryPage } from './history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HistoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HistoryPage]\n})\nexport class HistoryPageModule {}\n","module.exports = \"ion-card-header {\\n  --background: var(--ion-background-color, #f2f2f2);\\n}\\n\\nion-card-content {\\n  width: 100%;\\n  text-align: center;\\n}\\n\\nion-segment {\\n  margin-top: 5px;\\n  padding: 0px 10px 0px 10px;\\n}\\n\\nion-card-content ion-text {\\n  margin-top: 10px;\\n}\\n\\nion-row {\\n  padding: 2px;\\n}\\n\\nion-grid {\\n  padding: 0px;\\n}\\n\\nion-row:hover {\\n  background: var(--ion-background-color, #f2f2f2);\\n}\\n\\n.list-md {\\n  padding: 0px 0px 0px 0px !important;\\n}\\n\\n/** @@@@@@ TXN Details @@@@@@ **/\\n\\n.date {\\n  display: block;\\n}\\n\\n.amount {\\n  margin-left: 120px;\\n}\\n\\n.ios .amount {\\n  margin-left: 0px;\\n}\\n\\n.md .amount {\\n  margin-left: 0px;\\n}\\n\\n.activity {\\n  width: 100%;\\n  border-left: 2px solid #07ABC8;\\n}\\n\\n.activity-tokens {\\n  width: 100%;\\n  border-left: 2px solid #6dcc92;\\n}\\n\\n.divider {\\n  padding: 5px;\\n}\\n\\n.activity-skeleton {\\n  width: 100%;\\n  border-left: 2px solid #f2f2f2;\\n}\\n\\nion-row {\\n  width: 90%;\\n}\\n\\n.activity div h1 {\\n  font-size: 14px;\\n  text-transform: uppercase;\\n}\\n\\n.amount {\\n  text-align: center;\\n}\\n\\n#month {\\n  font-weight: bolder;\\n  font-size: 20px;\\n  color: #00AAC7;\\n}\\n\\n#day {\\n  font-weight: bolder;\\n  font-size: 22px;\\n  color: #FF671D;\\n}\\n\\n#token-name {\\n  font-weight: bolder;\\n  color: #FF671D;\\n}\\n\\n.h2-type {\\n  font-size: 20px;\\n}\\n\\n.p-tokenid {\\n  font-weight: bolder;\\n  font-size: 18px;\\n}\\n\\n.amount-p {\\n  font-weight: bolder;\\n  font-size: 20px;\\n}\\n\\n.amount-h2 {\\n  font-weight: bolder;\\n  font-size: 20px;\\n}\\n\\n.msg-details {\\n  font-size: 16px;\\n}\\n\\n/** @@@@@@@@@@@@@@@@@ iOS @@@@@@@@@@@@@@@@@@@ */\\n\\n.ios ion-card-content {\\n  -webkit-padding-start: 0px;\\n          padding-inline-start: 0px;\\n  -webkit-padding-end: 0px;\\n          padding-inline-end: 0px;\\n}\\n\\n.ios #month {\\n  font-size: 13px;\\n  color: #00AAC7;\\n}\\n\\n.ios #day {\\n  font-size: 12px;\\n  color: #FF671D;\\n}\\n\\n.ios .h2-type {\\n  font-size: 14px;\\n}\\n\\n.ios .p-tokenid {\\n  font-size: 12px;\\n}\\n\\n.ios .amount-p {\\n  font-size: 14px;\\n}\\n\\n.ios .amount-h2 {\\n  font-size: 14px;\\n}\\n\\n/** @@@@@@@@@@@@@@@@@ Material Design @@@@@@@@@@@@@@@@@@@ */\\n\\n.md ion-card-content {\\n  -webkit-padding-start: 0px;\\n          padding-inline-start: 0px;\\n  -webkit-padding-end: 0px;\\n          padding-inline-end: 0px;\\n}\\n\\n.md #month {\\n  font-size: 14px;\\n  color: #00AAC7;\\n}\\n\\n.md #day {\\n  font-size: 12px;\\n  color: #FF671D;\\n}\\n\\n.md .h2-type {\\n  font-size: 14px;\\n}\\n\\n.md .p-tokenid {\\n  font-size: 12px;\\n}\\n\\n.md .amount-p {\\n  font-size: 14px;\\n}\\n\\n.md .amount-h2 {\\n  font-size: 14px;\\n}\\n\\n.md .seg {\\n  font-size: 12px;\\n}\\n\\n.no-activity-item {\\n  padding-left: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbGlhcy9Qcm9qZWN0cy9taW5pbWFjb3JlL21vYmlsZS1hcHAtZnJvbnQtZW5kL2FwcC9zcmMvYXBwL3BhZ2VzL2hpc3RvcnkvaGlzdG9yeS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2hpc3RvcnkvaGlzdG9yeS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrREFBQTtBQ0NKOztBRENBO0VBQ0ksV0FBQTtFQUNBLGtCQUFBO0FDRUo7O0FEQUE7RUFDSSxlQUFBO0VBQ0EsMEJBQUE7QUNHSjs7QUREQTtFQUNJLGdCQUFBO0FDSUo7O0FERkE7RUFDSSxZQUFBO0FDS0o7O0FERkE7RUFDSSxZQUFBO0FDS0o7O0FESEE7RUFDSSxnREFBQTtBQ01KOztBREpBO0VBQ0ksbUNBQUE7QUNPSjs7QURKQSxnQ0FBQTs7QUFDQTtFQUNJLGNBQUE7QUNPSjs7QURMQTtFQUNJLGtCQUFBO0FDUUo7O0FETkE7RUFDSSxnQkFBQTtBQ1NKOztBRFBBO0VBQ0ksZ0JBQUE7QUNVSjs7QURSQTtFQUNJLFdBQUE7RUFDQSw4QkFBQTtBQ1dKOztBRFRBO0VBQ0ksV0FBQTtFQUNBLDhCQUFBO0FDWUo7O0FEVkE7RUFDSSxZQUFBO0FDYUo7O0FEWEE7RUFDSSxXQUFBO0VBQ0EsOEJBQUE7QUNjSjs7QURaQTtFQUNJLFVBQUE7QUNlSjs7QURiQTtFQUNJLGVBQUE7RUFDQSx5QkFBQTtBQ2dCSjs7QURkQTtFQUNJLGtCQUFBO0FDaUJKOztBRGZBO0VBQ0ksbUJBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtBQ2tCSjs7QURoQkE7RUFDSSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0FDbUJKOztBRGpCQTtFQUNJLG1CQUFBO0VBQ0EsY0FBQTtBQ29CSjs7QURqQkE7RUFDSSxlQUFBO0FDb0JKOztBRGxCQTtFQUNJLG1CQUFBO0VBQ0EsZUFBQTtBQ3FCSjs7QURuQkE7RUFDSSxtQkFBQTtFQUNBLGVBQUE7QUNzQko7O0FEcEJBO0VBQ0ksbUJBQUE7RUFDQSxlQUFBO0FDdUJKOztBRHBCQTtFQUNJLGVBQUE7QUN1Qko7O0FEcEJBLCtDQUFBOztBQUNBO0VBQ0ksMEJBQUE7VUFBQSx5QkFBQTtFQUNBLHdCQUFBO1VBQUEsdUJBQUE7QUN1Qko7O0FEckJBO0VBQ0ksZUFBQTtFQUNBLGNBQUE7QUN3Qko7O0FEdEJBO0VBQ0ksZUFBQTtFQUNBLGNBQUE7QUN5Qko7O0FEdEJBO0VBQ0ksZUFBQTtBQ3lCSjs7QUR2QkE7RUFDSSxlQUFBO0FDMEJKOztBRHhCQTtFQUNJLGVBQUE7QUMyQko7O0FEekJBO0VBQ0ksZUFBQTtBQzRCSjs7QUR6QkEsMkRBQUE7O0FBQ0E7RUFDSSwwQkFBQTtVQUFBLHlCQUFBO0VBQ0Esd0JBQUE7VUFBQSx1QkFBQTtBQzRCSjs7QUQxQkE7RUFDSSxlQUFBO0VBQ0EsY0FBQTtBQzZCSjs7QUQzQkE7RUFDSSxlQUFBO0VBQ0EsY0FBQTtBQzhCSjs7QUQzQkE7RUFDSSxlQUFBO0FDOEJKOztBRDVCQTtFQUNJLGVBQUE7QUMrQko7O0FEN0JBO0VBQ0ksZUFBQTtBQ2dDSjs7QUQ5QkE7RUFDSSxlQUFBO0FDaUNKOztBRC9CQTtFQUNJLGVBQUE7QUNrQ0o7O0FEL0JBO0VBQ0ksZ0JBQUE7QUNrQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9oaXN0b3J5L2hpc3RvcnkucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQtaGVhZGVyIHtcbiAgICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLCAjZjJmMmYyKTtcbn1cbmlvbi1jYXJkLWNvbnRlbnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbmlvbi1zZWdtZW50IHtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgcGFkZGluZzogMHB4IDEwcHggMHB4IDEwcHg7XG59XG5pb24tY2FyZC1jb250ZW50IGlvbi10ZXh0IHtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuaW9uLXJvdyB7XG4gICAgcGFkZGluZzogMnB4O1xufSBcblxuaW9uLWdyaWQge1xuICAgIHBhZGRpbmc6IDBweDtcbn1cbmlvbi1yb3c6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLCAjZjJmMmYyKTtcbn1cbi5saXN0LW1kIHtcbiAgICBwYWRkaW5nOiAwcHggMHB4IDBweCAwcHggIWltcG9ydGFudDtcbn1cblxuLyoqIEBAQEBAQCBUWE4gRGV0YWlscyBAQEBAQEAgKiovXG4uZGF0ZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG4uYW1vdW50IHtcbiAgICBtYXJnaW4tbGVmdDogMTIwcHg7XG59XG4uaW9zIC5hbW91bnQge1xuICAgIG1hcmdpbi1sZWZ0OiAwcHg7XG59XG4ubWQgLmFtb3VudCB7XG4gICAgbWFyZ2luLWxlZnQ6IDBweDtcbn1cbi5hY3Rpdml0eSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjMDdBQkM4O1xufVxuLmFjdGl2aXR5LXRva2VucyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCByZ2IoMTA5LCAyMDQsIDE0Nik7XG59XG4uZGl2aWRlciB7XG4gICAgcGFkZGluZzogNXB4O1xufVxuLmFjdGl2aXR5LXNrZWxldG9uIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmMmYyZjI7XG59XG5pb24tcm93IHtcbiAgICB3aWR0aDogOTAlO1xufVxuLmFjdGl2aXR5IGRpdiBoMSB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG4uYW1vdW50IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4jbW9udGgge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGNvbG9yOiAjMDBBQUM3O1xufVxuI2RheSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgY29sb3I6ICNGRjY3MUQ7XG59XG4jdG9rZW4tbmFtZSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgICBjb2xvcjogI0ZGNjcxRDtcbn1cblxuLmgyLXR5cGUge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5wLXRva2VuaWQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gICAgZm9udC1zaXplOiAxOHB4O1xufSAgIFxuLmFtb3VudC1wIHtcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5hbW91bnQtaDIge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gICAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4ubXNnLWRldGFpbHMge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLyoqIEBAQEBAQEBAQEBAQEBAQEBAIGlPUyBAQEBAQEBAQEBAQEBAQEBAQEBAICovXG4uaW9zIGlvbi1jYXJkLWNvbnRlbnQge1xuICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwcHg7XG4gICAgcGFkZGluZy1pbmxpbmUtZW5kOiAwcHg7XG59XG4uaW9zICNtb250aCB7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGNvbG9yOiAjMDBBQUM3O1xufVxuLmlvcyAjZGF5IHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgY29sb3I6ICNGRjY3MUQ7XG59XG5cbi5pb3MgLmgyLXR5cGUge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5pb3MgLnAtdG9rZW5pZCB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufSAgIFxuLmlvcyAuYW1vdW50LXAge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5pb3MgLmFtb3VudC1oMiB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4vKiogQEBAQEBAQEBAQEBAQEBAQEAgTWF0ZXJpYWwgRGVzaWduIEBAQEBAQEBAQEBAQEBAQEBAQEAgKi9cbi5tZCBpb24tY2FyZC1jb250ZW50IHtcbiAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMHB4O1xuICAgIHBhZGRpbmctaW5saW5lLWVuZDogMHB4O1xufVxuLm1kICNtb250aCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGNvbG9yOiAjMDBBQUM3O1xufVxuLm1kICNkYXkge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBjb2xvcjogI0ZGNjcxRDtcbn1cblxuLm1kIC5oMi10eXBlIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG59XG4ubWQgLnAtdG9rZW5pZCB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufSAgIFxuLm1kIC5hbW91bnQtcCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuLm1kIC5hbW91bnQtaDIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5tZCAuc2VnIHtcbiAgICBmb250LXNpemU6IDEycHg7XG59XG5cbi5uby1hY3Rpdml0eS1pdGVtIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDIlO1xufVxuIiwiaW9uLWNhcmQtaGVhZGVyIHtcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvciwgI2YyZjJmMik7XG59XG5cbmlvbi1jYXJkLWNvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pb24tc2VnbWVudCB7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgcGFkZGluZzogMHB4IDEwcHggMHB4IDEwcHg7XG59XG5cbmlvbi1jYXJkLWNvbnRlbnQgaW9uLXRleHQge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG5pb24tcm93IHtcbiAgcGFkZGluZzogMnB4O1xufVxuXG5pb24tZ3JpZCB7XG4gIHBhZGRpbmc6IDBweDtcbn1cblxuaW9uLXJvdzpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLCAjZjJmMmYyKTtcbn1cblxuLmxpc3QtbWQge1xuICBwYWRkaW5nOiAwcHggMHB4IDBweCAwcHggIWltcG9ydGFudDtcbn1cblxuLyoqIEBAQEBAQCBUWE4gRGV0YWlscyBAQEBAQEAgKiovXG4uZGF0ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uYW1vdW50IHtcbiAgbWFyZ2luLWxlZnQ6IDEyMHB4O1xufVxuXG4uaW9zIC5hbW91bnQge1xuICBtYXJnaW4tbGVmdDogMHB4O1xufVxuXG4ubWQgLmFtb3VudCB7XG4gIG1hcmdpbi1sZWZ0OiAwcHg7XG59XG5cbi5hY3Rpdml0eSB7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICMwN0FCQzg7XG59XG5cbi5hY3Rpdml0eS10b2tlbnMge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjNmRjYzkyO1xufVxuXG4uZGl2aWRlciB7XG4gIHBhZGRpbmc6IDVweDtcbn1cblxuLmFjdGl2aXR5LXNrZWxldG9uIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgI2YyZjJmMjtcbn1cblxuaW9uLXJvdyB7XG4gIHdpZHRoOiA5MCU7XG59XG5cbi5hY3Rpdml0eSBkaXYgaDEge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5hbW91bnQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNtb250aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgY29sb3I6ICMwMEFBQzc7XG59XG5cbiNkYXkge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICBmb250LXNpemU6IDIycHg7XG4gIGNvbG9yOiAjRkY2NzFEO1xufVxuXG4jdG9rZW4tbmFtZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIGNvbG9yOiAjRkY2NzFEO1xufVxuXG4uaDItdHlwZSB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLnAtdG9rZW5pZCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cblxuLmFtb3VudC1wIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uYW1vdW50LWgyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4ubXNnLWRldGFpbHMge1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi8qKiBAQEBAQEBAQEBAQEBAQEBAQCBpT1MgQEBAQEBAQEBAQEBAQEBAQEBAQCAqL1xuLmlvcyBpb24tY2FyZC1jb250ZW50IHtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDBweDtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiAwcHg7XG59XG5cbi5pb3MgI21vbnRoIHtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogIzAwQUFDNztcbn1cblxuLmlvcyAjZGF5IHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogI0ZGNjcxRDtcbn1cblxuLmlvcyAuaDItdHlwZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLmlvcyAucC10b2tlbmlkIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uaW9zIC5hbW91bnQtcCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLmlvcyAuYW1vdW50LWgyIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4vKiogQEBAQEBAQEBAQEBAQEBAQEAgTWF0ZXJpYWwgRGVzaWduIEBAQEBAQEBAQEBAQEBAQEBAQEAgKi9cbi5tZCBpb24tY2FyZC1jb250ZW50IHtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDBweDtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiAwcHg7XG59XG5cbi5tZCAjbW9udGgge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjMDBBQUM3O1xufVxuXG4ubWQgI2RheSB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6ICNGRjY3MUQ7XG59XG5cbi5tZCAuaDItdHlwZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLm1kIC5wLXRva2VuaWQge1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi5tZCAuYW1vdW50LXAge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5tZCAuYW1vdW50LWgyIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4ubWQgLnNlZyB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLm5vLWFjdGl2aXR5LWl0ZW0ge1xuICBwYWRkaW5nLWxlZnQ6IDIlO1xufSJdfQ== */\"","import { MinimaApiService } from '../../service/minima-api.service';\nimport { PopoverController, IonSlides, ModalController, Platform } from '@ionic/angular';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { HistoryService } from '../../service/history.service';\nimport { map } from 'rxjs/operators';\nimport { History } from '../../models/history.model';\nimport { HistorymodalPage } from '../../components/historymodal/historymodal.page';\nimport { HistorytokenmodalPage } from '../../components/historytokenmodal/historytokenmodal.page';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.page.html',\n  styleUrls: ['./history.page.scss'],\n})\nexport class HistoryPage implements OnInit {\n\n  isEmpty: boolean = true;\n  selectedSlide: any;\n  categories: number = 0;\n  ios: boolean = false;\n  sliderOptions = {\n    initialSlide: 0,\n    slidesPerView: 1,\n    speed: 200\n  }\n  // + vars\n  public transactions: History[] = [];\n  public tokens: History[] = [];\n  public t_summarySpoof: History[] = [];\n\n  polledHistorySubscription: Subscription;\n\n  // - vars\n  private lastJSON: string = '';\n\n  constructor(private api: MinimaApiService, private historyService: HistoryService,\n     public modalController: ModalController, private platform: Platform) {}\n\n  ngOnInit() {\n    if(this.platform.is('ios') || this.platform.is('android')){\n      this.ios = true;\n    }\n  }\n\n  ionViewDidEnter(){ \n    this.pullInHistoryLength(); // get length for skeleton\n    \n    setTimeout(() => {\n      this.pullInHistorySummary(); // subscribe and polls history\n    }, 500);\n  }\n\n  ionViewDidLeave(){\n   this.polledHistorySubscription.unsubscribe();\n  }\n\n  /** Modals */\n  async presentModal(_txpowid: string, _amount: any,\n     _message: any, _txnid: string, _block: number,\n     _parent: string, _tokenid: string, _date: string, _isBlock: boolean,\n     _name: string) {\n    const modal = await this.modalController.create({\n      component: HistorymodalPage,\n      componentProps: {\n        'TXPOW_ID': _txpowid,\n        'Amount': _amount,\n        'Message': _message,\n        'TXN_ID': _txnid,\n        'Block': _block,\n        'Parent': _parent,\n        'TokenID': _tokenid,\n        'Date': _date,\n        'isBlock': _isBlock,\n        'TokenName': _name\n      }\n    });\n    return await modal.present();\n  }\n  async presentTokenModal(_txpowid: string, _amount: any,\n    _message: any, _txnid: string, _block: number,\n    _parent: string, _tokenid: string, _date: string, _isBlock: boolean,\n    _name: string) {\n   const modal = await this.modalController.create({\n     component: HistorytokenmodalPage,\n     componentProps: {\n       'TXPOW_ID': _txpowid,\n       'Amount': _amount,\n       'Message': _message,\n       'TXN_ID': _txnid,\n       'Block': _block,\n       'Parent': _parent,\n       'TokenID': _tokenid,\n       'Date': _date,\n       'isBlock': _isBlock,\n       'TokenName': _name\n     }\n   });\n   return await modal.present();\n }\n\n  /** ALERTS */\n  // Present history details popover when tapped/clicked\n  // async presentHistoryInfo(ev: any, _name: string, _addr: any, _blkNumber: any, _amnt: any,\n  //                      _isBlock: boolean, _txpowid: string, _parent: string,\n  //                       _blockdiff: number, _date: string, _state: any ) {\n  //   const popover = await this.popHistoryController.create({\n  //     component: PopHistoryComponent,\n  //     cssClass: 'history-popover',\n  //     event: ev,\n  //     translucent: true,\n  //     componentProps: {\n\n  //          name: _name,\n  //          address: _addr,\n  //          blockNumber: _blkNumber,\n  //          transAmount: _amnt,\n  //          isBlock: _isBlock,\n  //          txpowid: _txpowid,\n  //          parent: _parent,\n  //          blockdiff: _blockdiff,\n  //          date: _date,\n  //          state: _state\n          \n  //         },\n  //   });\n  //   return await popover.present();\n  // }\n  // Present history details popover when tapped/clicked\n  // async presentHistoryTokenInfo(ev: any, _addr: any, _blkNumber: any, _amnt: any,\n  //   _isBlock: boolean, _txpowid: string, _parent: string,\n  //   _blockdiff: number, _date: string, _state: any ) {\n  // const popover = await this.popHistoryController.create({\n  //       component: PopHistoryTokenComponent,\n  //       cssClass: 'history-popover',\n  //       event: ev,\n  //       translucent: true,\n  //       componentProps: {\n\n  //       address: _addr,\n  //       blockNumber: _blkNumber,\n  //       transAmount: _amnt,\n  //       isBlock: _isBlock,\n  //       txpowid: _txpowid,\n  //       parent: _parent,\n  //       blockdiff: _blockdiff,\n  //       date: _date,\n  //       state: _state\n\n  // },\n  // });\n  // return await popover.present();\n  // }\n\n  /** MISC Functions */\n  // Check if we're receiving or sending\n  checkTransType(amount: string) {\n    if(amount.substring(0,1) === \"-\"){\n      return \"Sent\";\n    } else {\n      return \"Received\";\n    }\n  } \n  getTXNType(amount: string) {\n    if(amount.substring(0,1) === \"-\"){\n      return \"return-down-back-outline\";\n    } else {\n      return \"arrow-redo-circle-outline\";\n    }\n  }\n\n  //LATER USE, history order\n  getUserOrderPref() {\n    if(true){\n    return 't_summaryArr.slice().reverse()';\n    } else {\n    return 't_summaryArr';\n  }\n  }\n\n  // Categories Segment\n  async segmentChanged(ev: Event, slides: IonSlides){\n    this.selectedSlide = slides;\n    await this.selectedSlide.slideTo(this.categories);\n  }\n  // Slide, after segment button clicked..\n  async slideChanged(slides: IonSlides){\n    this.selectedSlide = slides;\n    slides.getActiveIndex().then(selectedValue => {\n      this.categories = selectedValue;\n    });\n  \n  }\n\n  /** API CALLS */\n  // get length of history\n  pullInHistoryLength() {\n    this.historyService.getHistory().subscribe( (res: {status: boolean, minifunc: string, message: string, response: {history: History[]} })=> {\n      this.t_summarySpoof = res.response.history;\n      /** Check if we have any txn */\n      if(this.t_summarySpoof.length > 0) {\n        this.isEmpty = false;\n      }\n    });\n  }\n  \n  // Get all users activities+transactions history\n  pullInHistorySummary() {\n  this.polledHistorySubscription = this.historyService.getHistory().pipe(map(responseData => {\n    let historyArr: History[] = [];\n    for(const key in responseData.response){\n      let history = responseData.response;\n        if(history[key]){\n\n          //Transaction description summary\n          historyArr = history[key];\n\n          history.history.forEach(element => {\n            element.values.forEach(val => {\n              if(val.name === 'Create Token')\n              this.tokens.push(element);\n            })\n          })\n          \n        }\n        return historyArr;\n    }\n  })).subscribe(responseData => {\n    \n    if(this.lastJSON !== JSON.stringify(responseData)){\n      this.transactions = responseData;\n      this.lastJSON = JSON.stringify(responseData);\n    }\n\n  });\n    \n  }\n\n}\n","import { Tokens } from '../models/tokens.model';\nimport { environment } from './../../environments/environment.prod';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, concatMap, merge } from 'rxjs/operators';\nimport { Observable, timer, Subject } from 'rxjs';\nimport { History } from '../models/history.model';\n\ndeclare var Minima: any;\n@Injectable({\n    providedIn: 'root'\n  })\nexport class HistoryService {\n\n  public polledHistory$: Observable<any>;\n  manualRefresh = new Subject();\n  private host = '';\n\n  constructor(private http: HttpClient) {\n      this.host = environment.defaultNode;\n      this.host = this.getHost();\n      }\n      \n  getHistory() {\n    return this.request('history');\n  }\n  \n  private getHost() {\n    if (localStorage.getItem('minima_host') == null) {\n      localStorage.setItem('minima_host', this.host);\n      return this.host;\n    } else {\n      return localStorage.getItem('minima_host');\n    }\n  }\n  \n  private request(route: any) {\n    let apiUrl = this.host + route; // this.host+'route' = \"127.0.0.1:8999/'balance'\"\n    let history$ = this.http.get(apiUrl);\n    \n    return this.polledHistory$ = timer(0, 2000).pipe(\n      \n      merge(this.manualRefresh),\n      concatMap(_ => history$),\n      map((res: {status: boolean, minifunc: string, message: string, response: {history: History[]}}) => res)\n\n\n  );\n  }   \n}"],"sourceRoot":""}