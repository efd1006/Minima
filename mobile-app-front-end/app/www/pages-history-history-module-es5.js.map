{"version":3,"sources":["./src/app/pages/history/history.page.html","./src/app/pages/history/history.module.ts","./src/app/pages/history/history.page.scss","./src/app/pages/history/history.page.ts","./src/app/service/history.service.ts"],"names":[],"mappings":"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","file":"pages-history-history-module-es5.js","sourcesContent":["module.exports = \"<ion-app>\\n  <ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n      <ion-title color=\\\"primary\\\">Transaction History</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n    <ion-card>\\n      <ion-card-header>\\n        Recent Activity\\n      </ion-card-header>\\n<!-- Category Segment -->\\n  <ion-segment\\n    *ngIf = \\\"transactions.length > 1\\\"\\n    (ionChange)=\\\"segmentChanged($event, slides)\\\" \\n    [(ngModel)] = \\\"categories\\\"\\n    class=\\\"category-seg\\\">\\n  <ion-segment-button value=\\\"0\\\" class=\\\"seg\\\">\\n    <ion-label>Transactions</ion-label>\\n  </ion-segment-button>\\n  <ion-segment-button value=\\\"1\\\" class=\\\"seg\\\">\\n    <ion-label>Tokens Created</ion-label>\\n  </ion-segment-button>\\n  <ion-segment-button value=\\\"2\\\" class=\\\"seg\\\">\\n  <ion-label>All</ion-label>\\n  </ion-segment-button>\\n  </ion-segment>\\n\\n\\n  <ion-slides\\n  #slides\\n  pager=\\\"false\\\"\\n  [options]=\\\"sliderOptions\\\"\\n  (ionSlideDidChange)=\\\"slideChanged(slides)\\\"\\n  (ionSlideDidLoad)=\\\"slideChanged(slides)\\\">\\n\\n    <!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@ Transactions @@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\\n    \\n    <ion-slide class=\\\"swiper-slide\\\">\\n    <ion-card-content style=\\\"width: 100%; overflow-y:scroll; display:block;\\\">\\n\\n    <!-- Title-->\\n    <ion-item *ngIf=\\\"transactions.length < 1\\\" lines=\\\"none\\\" class=\\\"no-activity-item\\\">\\n      <ion-text style=\\\"font-family: Aeonik-light;\\\">No activities to display.</ion-text>\\n    </ion-item>\\n\\n    <ion-list *ngFor=\\\"let transaction of transactions;\\\">\\n    <ion-grid><ion-row>\\n    \\n    <ion-item \\n    *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name !== 'Create Token';\\\" \\n    class=\\\"activity\\\"\\n    (click)=\\\"presentHistoryInfo($event,\\n              transaction.values[0].name, \\n              transaction.txpow.txn.inputs[0].address,\\n              transaction.txpow.block, \\n              transaction.values[0].amount, \\n              transaction.txpow.isblock, \\n              transaction.txpow.txpowid, \\n              transaction.txpow.parent, \\n              transaction.txpow.blkdiff, \\n              transaction.txpow.date.substring(11,16))\\\">\\n      <!-- Start info -->\\n      <ion-col class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <h1 id=\\\"month\\\">\\n      {{ transaction.txpow.date.substring(4, 7) }} \\n      </h1>\\n      <p id=\\\"day\\\">\\n      {{ transaction.txpow.date.substring(8, 10) }}\\n      </p>\\n      </ion-label>\\n      </ion-col>\\n\\n      <!-- Middle info -->\\n      <ion-col class=\\\"col-transtype\\\" fixed=\\\"true\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        {{ checkTransType(transaction.values[0].amount) }} {{ (transaction.values[0].name).substring(0,12) }}\\n        </h2>\\n        <a *ngFor=\\\"let input of transaction.txpow.txn.inputs\\\">\\n        <p class=\\\"p-tokenid\\\">\\n        Token Id: {{ input.tokenid.substring(0, 10) }}\\n        </p>\\n        </a>\\n        </ion-label>\\n      </ion-col>\\n\\n      <!-- end info -->\\n      <ion-col class=\\\"col-transamnt\\\" fixed=\\\"true\\\">\\n      <ion-label class=\\\"amount\\\">\\n      <h2 class=\\\"amount-h2\\\">\\n      {{ transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> {{ (transaction.values[0].name).substring(0, 4)}} </span>\\n      </h2>\\n      </ion-label>\\n      </ion-col>\\n      </ion-item>\\n\\n    </ion-row></ion-grid>\\n    </ion-list>\\n    </ion-card-content>\\n    </ion-slide>\\n    <!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@ Token Creation @@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\\n    <ion-slide class=\\\"swiper-slide\\\">\\n    <ion-card-content style=\\\"width: 100%; overflow-y:scroll; display:block;\\\">\\n    <ion-item *ngIf=\\\"transactions.length < 1\\\" lines=\\\"none\\\">\\n      <ion-text style=\\\"font-family: Aeonik-light;\\\">No activities to display.</ion-text>\\n    </ion-item>\\n\\n    \\n    <ion-list *ngFor=\\\"let transaction of transactions;\\\">\\n    <ion-grid><ion-row>\\n    <ion-item \\n    *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name === 'Create Token';\\\" \\n    class=\\\"activity\\\"\\n    (click)=\\\"presentHistoryTokenInfo($event, \\n              transaction.txpow.txn.inputs[0].address,\\n              transaction.txpow.block, \\n              transaction.values[1].amount, \\n              transaction.txpow.isblock, \\n              transaction.txpow.txpowid, \\n              transaction.txpow.parent, \\n              transaction.txpow.blkdiff, \\n              transaction.txpow.date.substring(11,16))\\\">\\n      <!-- Start info -->\\n      <ion-col class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <h1 id=\\\"month\\\">\\n      {{ transaction.txpow.date.substring(4, 7) }} \\n      </h1>\\n      <p id=\\\"day\\\">\\n      {{ transaction.txpow.date.substring(8, 10) }}\\n      </p>\\n      </ion-label>\\n      </ion-col>\\n\\n      <!-- Middle info -->\\n      <ion-col class=\\\"col-transtype\\\" fixed=\\\"true\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        Created a token.\\n        </h2>\\n        <p class=\\\"p-tokenid\\\">\\n        TxPoW Id: {{ transaction.txpow.txpowid.substring(0, 10)}}\\n        </p>\\n        </ion-label>\\n      </ion-col>\\n\\n      <!-- end info -->\\n      <ion-col class=\\\"col-transamnt\\\" fixed=\\\"true\\\">\\n      <ion-label class=\\\"amount\\\">\\n      <h2 class=\\\"amount-h2\\\">\\n      {{ transaction.values[1].amount.substring(0, 5) + \\\" \\\" }} MINI\\n      </h2>\\n      </ion-label>\\n      </ion-col>\\n      </ion-item>\\n\\n    </ion-row></ion-grid>\\n    </ion-list>\\n\\n    </ion-card-content>\\n    </ion-slide>\\n\\n    <!-- @@@@@@@@@@@@@@@@@@@@@@@@@ All @@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\\n    <ion-slide class=\\\"swiper-slide\\\">\\n    <ion-card-content style=\\\"width: 100%; overflow-y:scroll; display:block;\\\">\\n    <ion-item *ngIf=\\\"transactions.length < 1\\\" lines=\\\"none\\\" style=\\\"padding-left: 50px;\\\">\\n      <ion-text style=\\\"font-family: Aeonik-light;\\\">No activities to display.</ion-text>\\n    </ion-item>\\n\\n    <ion-list *ngFor=\\\"let transaction of transactions;\\\">\\n    <ion-grid *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name !== 'Create Token';\\\"><ion-row>\\n    <ion-item \\n    class=\\\"activity\\\"\\n    (click)=\\\"presentHistoryInfo($event,\\n              transaction.values[0].name, \\n              transaction.txpow.txn.inputs[0].address,\\n              transaction.txpow.block, \\n              transaction.values[0].amount, \\n              transaction.txpow.isblock, \\n              transaction.txpow.txpowid, \\n              transaction.txpow.parent, \\n              transaction.txpow.blkdiff, \\n              transaction.txpow.date.substring(11,16))\\\">\\n      <!-- Start info -->\\n      <ion-col class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <h1 id=\\\"month\\\">\\n      {{ transaction.txpow.date.substring(4, 7) }} \\n      </h1>\\n      <p id=\\\"day\\\">\\n      {{ transaction.txpow.date.substring(8, 10) }}\\n      </p>\\n      </ion-label>\\n      </ion-col>\\n\\n      <!-- Middle info -->\\n      <ion-col class=\\\"col-transtype\\\" fixed=\\\"true\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        {{ checkTransType(transaction.values[0].amount) }} {{ (transaction.values[0].name).substring(0,12) }}\\n        </h2>\\n        <a *ngFor=\\\"let input of transaction.txpow.txn.inputs\\\">\\n        <p class=\\\"p-tokenid\\\">\\n        Token Id: {{ input.tokenid.substring(0, 10) }}\\n        </p>\\n        </a>\\n        </ion-label>\\n      </ion-col>\\n\\n      <!-- end info -->\\n      <ion-col class=\\\"col-transamnt\\\" fixed=\\\"true\\\">\\n      <ion-label class=\\\"amount\\\">\\n      <h2 class=\\\"amount-h2\\\">\\n      {{ transaction.values[0].amount + \\\" \\\" }} <span style=\\\"text-transform: uppercase;\\\"> {{ (transaction.values[0].name).substring(0, 4)}} </span>\\n      </h2>\\n      </ion-label>\\n      </ion-col>\\n      </ion-item>\\n\\n    </ion-row></ion-grid>\\n \\n    <ion-grid *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name === 'Create Token';\\\"><ion-row>\\n    <ion-item \\n    class=\\\"activity\\\"\\n    (click)=\\\"presentHistoryTokenInfo($event, \\n              transaction.txpow.txn.inputs[0].address,\\n              transaction.txpow.block, \\n              transaction.values[1].amount, \\n              transaction.txpow.isblock, \\n              transaction.txpow.txpowid, \\n              transaction.txpow.parent, \\n              transaction.txpow.blkdiff, \\n              transaction.txpow.date.substring(11,16))\\\">\\n      <!-- Start info -->\\n      <ion-col class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <h1 id=\\\"month\\\">\\n      {{ transaction.txpow.date.substring(4, 7) }} \\n      </h1>\\n      <p id=\\\"day\\\">\\n      {{ transaction.txpow.date.substring(8, 10) }}\\n      </p>\\n      </ion-label>\\n      </ion-col>\\n\\n      <!-- Middle info -->\\n      <ion-col class=\\\"col-transtype\\\" fixed=\\\"true\\\">\\n        <ion-label id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type\\\">\\n        Created a token.\\n        </h2>\\n        <p class=\\\"p-tokenid\\\">\\n        TxPoW Id: {{ transaction.txpow.txpowid.substring(0, 10)}}\\n        </p>\\n        </ion-label>\\n      </ion-col>\\n\\n      <!-- end info -->\\n      <ion-col class=\\\"col-transamnt\\\" fixed=\\\"true\\\">\\n      <ion-label class=\\\"amount\\\">\\n      <h2 class=\\\"amount-h2\\\">\\n      {{ transaction.values[1].amount.substring(0, 5) + \\\" \\\" }} MINI\\n      </h2>\\n      </ion-label>\\n      </ion-col>\\n    </ion-item>\\n\\n    </ion-row></ion-grid>\\n    </ion-list>\\n    </ion-card-content>\\n    </ion-slide>\\n  </ion-slides>\\n\\n\\n  \\n\\n\\n\\n  \\n\\n\\n\\n  <!-- SKELETON FOR UX LOADING -->\\n  <div *ngIf=\\\"transactions.length < 1\\\">  \\n  <ion-list *ngFor=\\\"let length of t_summarySpoof\\\">\\n    <ion-grid *ngIf=\\\"length.values[0].name !== 'Create Token'\\\"><ion-row>\\n    <ion-item class=\\\"activity\\\">\\n    \\n    <ion-col class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <h1 id=\\\"month\\\">\\n        <ion-skeleton-text animated style=\\\"width: 10%; height: 10%;\\\"></ion-skeleton-text>\\n      </h1>\\n      <p id=\\\"day\\\">\\n        <ion-skeleton-text animated style=\\\"width: 5%\\\"></ion-skeleton-text>\\n      </p>\\n      </ion-label>\\n    </ion-col>\\n\\n  <ion-col class=\\\"col-transtype\\\" fixed=\\\"true\\\">\\n    <ion-label id=\\\"transaction\\\">\\n      <h2 class=\\\"h2-type\\\">\\n        <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text>\\n      </h2>\\n      <p class=\\\"p-tokenid\\\">\\n        <ion-skeleton-text animated style=\\\"width: 30%\\\"></ion-skeleton-text>\\n      </p>\\n    </ion-label>\\n  </ion-col>\\n\\n  <ion-col class=\\\"col-transamnt\\\" fixed=\\\"true\\\">\\n    <ion-label class=\\\"amount\\\">\\n      <h2 class=\\\"amount-h2\\\">\\n        <ion-skeleton-text animated style=\\\"width: 60%\\\"></ion-skeleton-text>\\n      </h2>\\n    </ion-label> \\n  </ion-col>\\n  </ion-item>\\n\\n  </ion-row></ion-grid>\\n  </ion-list>\\n  </div>\\n\\n</ion-card>\\n  \\n  </ion-content>\\n  </ion-app>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HistoryPage } from './history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HistoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HistoryPage]\n})\nexport class HistoryPageModule {}\n","module.exports = \".date {\\n  display: block;\\n}\\n\\n.amount {\\n  margin-left: 120px;\\n}\\n\\n.ios .amount {\\n  margin-left: 0px;\\n}\\n\\n.md .amount {\\n  margin-left: 0px;\\n}\\n\\n.activity {\\n  width: 90%;\\n  left: 5%;\\n  right: 5%;\\n}\\n\\n.activity:hover {\\n  background-color: #d8dfe6 !important;\\n}\\n\\n.activity:hover {\\n  background-color: slategray;\\n  box-shadow: inset 0px 0px 0px 1px red;\\n}\\n\\n.activity div h1 {\\n  font-size: 14px;\\n  text-transform: uppercase;\\n}\\n\\n.amount {\\n  text-align: center;\\n}\\n\\n#month {\\n  font-size: 20px;\\n  color: #00AAC7;\\n}\\n\\n#day {\\n  font-size: 22px;\\n  color: #FF671D;\\n}\\n\\n.h2-type {\\n  font-size: 20px;\\n}\\n\\n.p-tokenid {\\n  font-size: 18px;\\n}\\n\\n.amount-p {\\n  font-size: 20px;\\n}\\n\\n.amount-h2 {\\n  font-size: 20px;\\n}\\n\\n.category-seg {\\n  padding: 0px 40px 0px 40px;\\n}\\n\\n/** @@@@@@@@@@@@@@@@@ iOS @@@@@@@@@@@@@@@@@@@ */\\n\\n.ios ion-card-content {\\n  -webkit-padding-start: 0px;\\n          padding-inline-start: 0px;\\n  -webkit-padding-end: 0px;\\n          padding-inline-end: 0px;\\n}\\n\\n.ios #month {\\n  font-size: 13px;\\n  color: #00AAC7;\\n}\\n\\n.ios #day {\\n  font-size: 12px;\\n  color: #FF671D;\\n}\\n\\n.ios .h2-type {\\n  font-size: 14px;\\n}\\n\\n.ios .p-tokenid {\\n  font-size: 12px;\\n}\\n\\n.ios .amount-p {\\n  font-size: 14px;\\n}\\n\\n.ios .amount-h2 {\\n  font-size: 14px;\\n}\\n\\n/** @@@@@@@@@@@@@@@@@ Material Design @@@@@@@@@@@@@@@@@@@ */\\n\\n.md ion-card-content {\\n  -webkit-padding-start: 0px;\\n          padding-inline-start: 0px;\\n  -webkit-padding-end: 0px;\\n          padding-inline-end: 0px;\\n}\\n\\n.md #month {\\n  font-size: 14px;\\n  color: #00AAC7;\\n}\\n\\n.md #day {\\n  font-size: 12px;\\n  color: #FF671D;\\n}\\n\\n.md .h2-type {\\n  font-size: 14px;\\n}\\n\\n.md .p-tokenid {\\n  font-size: 12px;\\n}\\n\\n.md .amount-p {\\n  font-size: 14px;\\n}\\n\\n.md .amount-h2 {\\n  font-size: 14px;\\n}\\n\\n.md .seg {\\n  font-size: 12px;\\n}\\n\\n.no-activity-item {\\n  padding-left: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbGlhcy9Qcm9qZWN0cy9taW5pbWFjb3JlL21vYmlsZS1hcHAtZnJvbnQtZW5kL2FwcC9zcmMvYXBwL3BhZ2VzL2hpc3RvcnkvaGlzdG9yeS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2hpc3RvcnkvaGlzdG9yeS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxjQUFBO0FDQUo7O0FERUE7RUFDSSxrQkFBQTtBQ0NKOztBRENBO0VBQ0ksZ0JBQUE7QUNFSjs7QURBQTtFQUNJLGdCQUFBO0FDR0o7O0FEREE7RUFDSSxVQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7QUNJSjs7QURGQTtFQUVJLG9DQUFBO0FDSUo7O0FERkE7RUFDSSwyQkFBQTtFQUNBLHFDQUFBO0FDS0o7O0FESEE7RUFDSSxlQUFBO0VBQ0EseUJBQUE7QUNNSjs7QURIQTtFQUNJLGtCQUFBO0FDTUo7O0FESEE7RUFDSSxlQUFBO0VBQ0EsY0FBQTtBQ01KOztBREpBO0VBQ0ksZUFBQTtFQUNBLGNBQUE7QUNPSjs7QURKQTtFQUNJLGVBQUE7QUNPSjs7QURMQTtFQUNJLGVBQUE7QUNRSjs7QUROQTtFQUNJLGVBQUE7QUNTSjs7QURQQTtFQUNJLGVBQUE7QUNVSjs7QURQQTtFQUNJLDBCQUFBO0FDVUo7O0FEUEEsK0NBQUE7O0FBQ0E7RUFDSSwwQkFBQTtVQUFBLHlCQUFBO0VBQ0Esd0JBQUE7VUFBQSx1QkFBQTtBQ1VKOztBRFJBO0VBQ0ksZUFBQTtFQUNBLGNBQUE7QUNXSjs7QURUQTtFQUNJLGVBQUE7RUFDQSxjQUFBO0FDWUo7O0FEVEE7RUFDSSxlQUFBO0FDWUo7O0FEVkE7RUFDSSxlQUFBO0FDYUo7O0FEWEE7RUFDSSxlQUFBO0FDY0o7O0FEWkE7RUFDSSxlQUFBO0FDZUo7O0FEWkEsMkRBQUE7O0FBQ0E7RUFDSSwwQkFBQTtVQUFBLHlCQUFBO0VBQ0Esd0JBQUE7VUFBQSx1QkFBQTtBQ2VKOztBRGJBO0VBQ0ksZUFBQTtFQUNBLGNBQUE7QUNnQko7O0FEZEE7RUFDSSxlQUFBO0VBQ0EsY0FBQTtBQ2lCSjs7QURkQTtFQUNJLGVBQUE7QUNpQko7O0FEZkE7RUFDSSxlQUFBO0FDa0JKOztBRGhCQTtFQUNJLGVBQUE7QUNtQko7O0FEakJBO0VBQ0ksZUFBQTtBQ29CSjs7QURsQkE7RUFDSSxlQUFBO0FDcUJKOztBRGxCQTtFQUNJLGdCQUFBO0FDcUJKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaGlzdG9yeS9oaXN0b3J5LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmRhdGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuLmFtb3VudCB7XG4gICAgbWFyZ2luLWxlZnQ6IDEyMHB4O1xufVxuLmlvcyAuYW1vdW50IHtcbiAgICBtYXJnaW4tbGVmdDogMHB4O1xufVxuLm1kIC5hbW91bnQge1xuICAgIG1hcmdpbi1sZWZ0OiAwcHg7XG59XG4uYWN0aXZpdHkge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbGVmdDogNSU7XG4gICAgcmlnaHQ6IDUlO1xufVxuLmFjdGl2aXR5OmhvdmVye1xuICAgIFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkOGRmZTYgIWltcG9ydGFudDtcbn1cbi5hY3Rpdml0eTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2xhdGVncmF5O1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDBweCAwcHggMHB4IDFweCByZWQ7XG59XG4uYWN0aXZpdHkgZGl2IGgxIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmFtb3VudCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4jbW9udGgge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBjb2xvcjogIzAwQUFDNztcbn1cbiNkYXkge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICBjb2xvcjogI0ZGNjcxRDtcbn1cblxuLmgyLXR5cGUge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5wLXRva2VuaWQge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbn0gICBcbi5hbW91bnQtcCB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xufVxuLmFtb3VudC1oMiB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uY2F0ZWdvcnktc2VnIHtcbiAgICBwYWRkaW5nOiAwcHggNDBweCAwcHggNDBweDtcbn1cblxuLyoqIEBAQEBAQEBAQEBAQEBAQEBAIGlPUyBAQEBAQEBAQEBAQEBAQEBAQEBAICovXG4uaW9zIGlvbi1jYXJkLWNvbnRlbnQge1xuICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwcHg7XG4gICAgcGFkZGluZy1pbmxpbmUtZW5kOiAwcHg7XG59XG4uaW9zICNtb250aCB7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGNvbG9yOiAjMDBBQUM3O1xufVxuLmlvcyAjZGF5IHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgY29sb3I6ICNGRjY3MUQ7XG59XG5cbi5pb3MgLmgyLXR5cGUge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5pb3MgLnAtdG9rZW5pZCB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufSAgIFxuLmlvcyAuYW1vdW50LXAge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5pb3MgLmFtb3VudC1oMiB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4vKiogQEBAQEBAQEBAQEBAQEBAQEAgTWF0ZXJpYWwgRGVzaWduIEBAQEBAQEBAQEBAQEBAQEBAQEAgKi9cbi5tZCBpb24tY2FyZC1jb250ZW50IHtcbiAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMHB4O1xuICAgIHBhZGRpbmctaW5saW5lLWVuZDogMHB4O1xufVxuLm1kICNtb250aCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGNvbG9yOiAjMDBBQUM3O1xufVxuLm1kICNkYXkge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBjb2xvcjogI0ZGNjcxRDtcbn1cblxuLm1kIC5oMi10eXBlIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG59XG4ubWQgLnAtdG9rZW5pZCB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufSAgIFxuLm1kIC5hbW91bnQtcCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuLm1kIC5hbW91bnQtaDIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5tZCAuc2VnIHtcbiAgICBmb250LXNpemU6IDEycHg7XG59XG5cbi5uby1hY3Rpdml0eS1pdGVtIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDIlO1xufSIsIi5kYXRlIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5hbW91bnQge1xuICBtYXJnaW4tbGVmdDogMTIwcHg7XG59XG5cbi5pb3MgLmFtb3VudCB7XG4gIG1hcmdpbi1sZWZ0OiAwcHg7XG59XG5cbi5tZCAuYW1vdW50IHtcbiAgbWFyZ2luLWxlZnQ6IDBweDtcbn1cblxuLmFjdGl2aXR5IHtcbiAgd2lkdGg6IDkwJTtcbiAgbGVmdDogNSU7XG4gIHJpZ2h0OiA1JTtcbn1cblxuLmFjdGl2aXR5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q4ZGZlNiAhaW1wb3J0YW50O1xufVxuXG4uYWN0aXZpdHk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBzbGF0ZWdyYXk7XG4gIGJveC1zaGFkb3c6IGluc2V0IDBweCAwcHggMHB4IDFweCByZWQ7XG59XG5cbi5hY3Rpdml0eSBkaXYgaDEge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5hbW91bnQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNtb250aCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgY29sb3I6ICMwMEFBQzc7XG59XG5cbiNkYXkge1xuICBmb250LXNpemU6IDIycHg7XG4gIGNvbG9yOiAjRkY2NzFEO1xufVxuXG4uaDItdHlwZSB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLnAtdG9rZW5pZCB7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cblxuLmFtb3VudC1wIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uYW1vdW50LWgyIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uY2F0ZWdvcnktc2VnIHtcbiAgcGFkZGluZzogMHB4IDQwcHggMHB4IDQwcHg7XG59XG5cbi8qKiBAQEBAQEBAQEBAQEBAQEBAQCBpT1MgQEBAQEBAQEBAQEBAQEBAQEBAQCAqL1xuLmlvcyBpb24tY2FyZC1jb250ZW50IHtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDBweDtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiAwcHg7XG59XG5cbi5pb3MgI21vbnRoIHtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogIzAwQUFDNztcbn1cblxuLmlvcyAjZGF5IHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogI0ZGNjcxRDtcbn1cblxuLmlvcyAuaDItdHlwZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLmlvcyAucC10b2tlbmlkIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uaW9zIC5hbW91bnQtcCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLmlvcyAuYW1vdW50LWgyIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4vKiogQEBAQEBAQEBAQEBAQEBAQEAgTWF0ZXJpYWwgRGVzaWduIEBAQEBAQEBAQEBAQEBAQEBAQEAgKi9cbi5tZCBpb24tY2FyZC1jb250ZW50IHtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDBweDtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiAwcHg7XG59XG5cbi5tZCAjbW9udGgge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjMDBBQUM3O1xufVxuXG4ubWQgI2RheSB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6ICNGRjY3MUQ7XG59XG5cbi5tZCAuaDItdHlwZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLm1kIC5wLXRva2VuaWQge1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi5tZCAuYW1vdW50LXAge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5tZCAuYW1vdW50LWgyIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4ubWQgLnNlZyB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLm5vLWFjdGl2aXR5LWl0ZW0ge1xuICBwYWRkaW5nLWxlZnQ6IDIlO1xufSJdfQ== */\"","import { MinimaApiService } from '../../service/minima-api.service';\nimport { PopoverController, IonSlides } from '@ionic/angular';\nimport { PopHistoryComponent } from '../../components/pop-history/pop-history.component';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { HistoryService } from '../../service/history.service';\nimport { map } from 'rxjs/operators';\nimport { History } from '../../models/history.model';\nimport { PopHistoryTokenComponent } from '../../components/pop-history-token/pop-history-token.component';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.page.html',\n  styleUrls: ['./history.page.scss'],\n})\nexport class HistoryPage implements OnInit {\n\n  selectedSlide: any;\n  categories: number = 0;\n  sliderOptions = {\n    initialSlide: 0,\n    slidesPerView: 1,\n    speed: 400\n  }\n  // + vars\n  public transactions: History[] = [];\n  public t_summarySpoof: History[] = [];\n\n  polledHistorySubscription: Subscription;\n\n  // - vars\n  private lastJSON: string = '';\n\n  constructor(\n    public popHistoryController: PopoverController,\n    private api: MinimaApiService,\n    private historyService: HistoryService) {}\n\n  ngOnInit() {}\n\n  ionViewDidEnter(){ \n    this.pullInHistoryLength();\n    setTimeout(() => {\n      this.pullInHistorySummary(); // subscribe and polls history\n    }, 500);\n  }\n\n  ionViewDidLeave(){\n   this.polledHistorySubscription.unsubscribe();\n  }\n\n  /** ALERTS */\n  // Present history details popover when tapped/clicked\n  async presentHistoryInfo(ev: any, _name: string, _addr: any, _blkNumber: any, _amnt: any,\n                       _isBlock: boolean, _txpowid: string, _parent: string,\n                        _blockdiff: number, _date: string ) {\n    const popover = await this.popHistoryController.create({\n      component: PopHistoryComponent,\n      cssClass: 'history-popover',\n      event: ev,\n      translucent: true,\n      componentProps: {\n\n           name: _name,\n           address: _addr,\n           blockNumber: _blkNumber,\n           transAmount: _amnt,\n           isBlock: _isBlock,\n           txpowid: _txpowid,\n           parent: _parent,\n           blockdiff: _blockdiff,\n           date: _date,\n          \n          },\n    });\n    return await popover.present();\n  }\n  // Present history details popover when tapped/clicked\n  async presentHistoryTokenInfo(ev: any, _addr: any, _blkNumber: any, _amnt: any,\n    _isBlock: boolean, _txpowid: string, _parent: string,\n    _blockdiff: number, _date: string ) {\n  const popover = await this.popHistoryController.create({\n        component: PopHistoryTokenComponent,\n        cssClass: 'history-popover',\n        event: ev,\n        translucent: true,\n        componentProps: {\n\n        address: _addr,\n        blockNumber: _blkNumber,\n        transAmount: _amnt,\n        isBlock: _isBlock,\n        txpowid: _txpowid,\n        parent: _parent,\n        blockdiff: _blockdiff,\n        date: _date,\n\n  },\n  });\n  return await popover.present();\n  }\n  /** MISC Functions */\n  // Check if we're receiving or sending\n  checkTransType(amount: string) {\n    if(amount.substring(0,1) === \"-\"){\n      return \"Sent\";\n    } else {\n      return \"Received\";\n    }\n  }\n\n  //LATER USE, history order\n  getUserOrderPref() {\n    if(true){\n    return 't_summaryArr.slice().reverse()';\n    } else {\n    return 't_summaryArr';\n  }\n  }\n\n  // Categories Segment\n  async segmentChanged(ev: Event, slides: IonSlides){\n    this.selectedSlide = slides;\n    await this.selectedSlide.slideTo(this.categories);\n  }\n  // Slide, after segment button clicked..\n  async slideChanged(slides: IonSlides){\n    this.selectedSlide = slides;\n    slides.getActiveIndex().then(selectedValue => {\n      this.categories = selectedValue;\n    });\n  \n  }\n\n  /** API CALLS */\n  // get length of history\n  pullInHistoryLength() {\n    this.historyService.getHistory().subscribe( (res: {status: boolean, minifunc: string, message: string, response: {history: History[]} })=> {\n      this.t_summarySpoof = res.response.history;\n    });\n  }\n  \n  // Get all users activities+transactions history\n  pullInHistorySummary() {\n  this.polledHistorySubscription = this.historyService.getHistory().pipe(map(responseData => {\n    let historyArr: History[] = [];\n    for(const key in responseData.response){\n      let history = responseData.response;\n        if(history[key]){\n\n          //Transaction description summary\n          historyArr = history[key];\n          \n        }\n        return historyArr;\n    }\n  })).subscribe(responseData => {\n    \n    if(this.lastJSON !== JSON.stringify(responseData)){\n      this.transactions = responseData;\n      this.lastJSON = JSON.stringify(responseData);\n    }\n\n  });\n    \n  }\n\n}\n","import { Tokens } from '../models/tokens.model';\nimport { environment } from './../../environments/environment.prod';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, concatMap, merge } from 'rxjs/operators';\nimport { Observable, timer, Subject } from 'rxjs';\nimport { History } from '../models/history.model';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class HistoryService {\n\n  public polledHistory$: Observable<any>;\n  manualRefresh = new Subject();\n  private host = '';\n\n  constructor(private http: HttpClient) {\n      this.host = environment.defaultNode;\n      this.host = this.getHost();\n      }\n      \n    getHistory() {\n      return this.request('history');\n    }\n  \n    private getHost() {\n      if (localStorage.getItem('minima_host') == null) {\n        localStorage.setItem('minima_host', this.host);\n        return this.host;\n      } else {\n        return localStorage.getItem('minima_host');\n      }\n    }\n  \n    private request(route: any) {\n      let apiUrl = this.host + route; // this.host+'route' = \"127.0.0.1:8999/'balance'\"\n      let history$ = this.http.get(apiUrl);\n      \n      return this.polledHistory$ = timer(0, 2000).pipe(\n        \n        merge(this.manualRefresh),\n        concatMap(_ => history$),\n        map((res: {status: boolean, minifunc: string, message: string, response: {history: History[]}}) => res)\n  \n  \n      );\n  }   \n}"],"sourceRoot":""}